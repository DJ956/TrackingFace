

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jul 13 21:44:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.32
    41                           ; Generated 02/02/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1938 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  0110                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011D                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  020D                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029C                     	;# 
   186  029D                     	;# 
   187  029E                     	;# 
   188  029F                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0314                     	;# 
   194  0315                     	;# 
   195  0315                     	;# 
   196  0316                     	;# 
   197  0318                     	;# 
   198  0318                     	;# 
   199  0319                     	;# 
   200  031A                     	;# 
   201  031C                     	;# 
   202  031C                     	;# 
   203  031D                     	;# 
   204  031E                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0791                     	;# 
   215  0792                     	;# 
   216  0793                     	;# 
   217  0794                     	;# 
   218  0795                     	;# 
   219  0798                     	;# 
   220  0799                     	;# 
   221  07A0                     	;# 
   222  07A1                     	;# 
   223  07A3                     	;# 
   224  07A4                     	;# 
   225  07A6                     	;# 
   226  07A7                     	;# 
   227  07A9                     	;# 
   228  07AA                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  0110                     	;# 
   292  0111                     	;# 
   293  0112                     	;# 
   294  0113                     	;# 
   295  0114                     	;# 
   296  0115                     	;# 
   297  0116                     	;# 
   298  0117                     	;# 
   299  0118                     	;# 
   300  0119                     	;# 
   301  011A                     	;# 
   302  011B                     	;# 
   303  011D                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0191                     	;# 
   307  0191                     	;# 
   308  0192                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0193                     	;# 
   312  0194                     	;# 
   313  0195                     	;# 
   314  0196                     	;# 
   315  0199                     	;# 
   316  019A                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  019C                     	;# 
   323  019D                     	;# 
   324  019E                     	;# 
   325  019F                     	;# 
   326  020D                     	;# 
   327  0210                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0213                     	;# 
   331  0214                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0217                     	;# 
   336  0291                     	;# 
   337  0291                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0294                     	;# 
   341  0295                     	;# 
   342  0295                     	;# 
   343  0296                     	;# 
   344  0298                     	;# 
   345  0298                     	;# 
   346  0299                     	;# 
   347  029A                     	;# 
   348  029B                     	;# 
   349  029C                     	;# 
   350  029C                     	;# 
   351  029D                     	;# 
   352  029E                     	;# 
   353  029F                     	;# 
   354  0311                     	;# 
   355  0311                     	;# 
   356  0312                     	;# 
   357  0313                     	;# 
   358  0314                     	;# 
   359  0315                     	;# 
   360  0315                     	;# 
   361  0316                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  031C                     	;# 
   367  031C                     	;# 
   368  031D                     	;# 
   369  031E                     	;# 
   370  0394                     	;# 
   371  0395                     	;# 
   372  0396                     	;# 
   373  0415                     	;# 
   374  0416                     	;# 
   375  0417                     	;# 
   376  041C                     	;# 
   377  041D                     	;# 
   378  041E                     	;# 
   379  0791                     	;# 
   380  0792                     	;# 
   381  0793                     	;# 
   382  0794                     	;# 
   383  0795                     	;# 
   384  0798                     	;# 
   385  0799                     	;# 
   386  07A0                     	;# 
   387  07A1                     	;# 
   388  07A3                     	;# 
   389  07A4                     	;# 
   390  07A6                     	;# 
   391  07A7                     	;# 
   392  07A9                     	;# 
   393  07AA                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  0110                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0113                     	;# 
   460  0114                     	;# 
   461  0115                     	;# 
   462  0116                     	;# 
   463  0117                     	;# 
   464  0118                     	;# 
   465  0119                     	;# 
   466  011A                     	;# 
   467  011B                     	;# 
   468  011D                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0191                     	;# 
   472  0191                     	;# 
   473  0192                     	;# 
   474  0193                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0194                     	;# 
   478  0195                     	;# 
   479  0196                     	;# 
   480  0199                     	;# 
   481  019A                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019C                     	;# 
   487  019C                     	;# 
   488  019D                     	;# 
   489  019E                     	;# 
   490  019F                     	;# 
   491  020D                     	;# 
   492  0210                     	;# 
   493  0211                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0217                     	;# 
   501  0291                     	;# 
   502  0291                     	;# 
   503  0292                     	;# 
   504  0293                     	;# 
   505  0294                     	;# 
   506  0295                     	;# 
   507  0295                     	;# 
   508  0296                     	;# 
   509  0298                     	;# 
   510  0298                     	;# 
   511  0299                     	;# 
   512  029A                     	;# 
   513  029B                     	;# 
   514  029C                     	;# 
   515  029C                     	;# 
   516  029D                     	;# 
   517  029E                     	;# 
   518  029F                     	;# 
   519  0311                     	;# 
   520  0311                     	;# 
   521  0312                     	;# 
   522  0313                     	;# 
   523  0314                     	;# 
   524  0315                     	;# 
   525  0315                     	;# 
   526  0316                     	;# 
   527  0318                     	;# 
   528  0318                     	;# 
   529  0319                     	;# 
   530  031A                     	;# 
   531  031C                     	;# 
   532  031C                     	;# 
   533  031D                     	;# 
   534  031E                     	;# 
   535  0394                     	;# 
   536  0395                     	;# 
   537  0396                     	;# 
   538  0415                     	;# 
   539  0416                     	;# 
   540  0417                     	;# 
   541  041C                     	;# 
   542  041D                     	;# 
   543  041E                     	;# 
   544  0791                     	;# 
   545  0792                     	;# 
   546  0793                     	;# 
   547  0794                     	;# 
   548  0795                     	;# 
   549  0798                     	;# 
   550  0799                     	;# 
   551  07A0                     	;# 
   552  07A1                     	;# 
   553  07A3                     	;# 
   554  07A4                     	;# 
   555  07A6                     	;# 
   556  07A7                     	;# 
   557  07A9                     	;# 
   558  07AA                     	;# 
   559  0FE4                     	;# 
   560  0FE5                     	;# 
   561  0FE6                     	;# 
   562  0FE7                     	;# 
   563  0FE8                     	;# 
   564  0FE9                     	;# 
   565  0FEA                     	;# 
   566  0FEB                     	;# 
   567  0FED                     	;# 
   568  0FEE                     	;# 
   569  0FEF                     	;# 
   570  0000                     	;# 
   571  0001                     	;# 
   572  0002                     	;# 
   573  0003                     	;# 
   574  0004                     	;# 
   575  0005                     	;# 
   576  0006                     	;# 
   577  0007                     	;# 
   578  0008                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  0010                     	;# 
   586  0011                     	;# 
   587  0012                     	;# 
   588  0013                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  0019                     	;# 
   595  001A                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  008C                     	;# 
   601  008D                     	;# 
   602  008E                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0095                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  010E                     	;# 
   621  0110                     	;# 
   622  0111                     	;# 
   623  0112                     	;# 
   624  0113                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011A                     	;# 
   632  011B                     	;# 
   633  011D                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0191                     	;# 
   637  0191                     	;# 
   638  0192                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0194                     	;# 
   643  0195                     	;# 
   644  0196                     	;# 
   645  0199                     	;# 
   646  019A                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019C                     	;# 
   652  019C                     	;# 
   653  019D                     	;# 
   654  019E                     	;# 
   655  019F                     	;# 
   656  020D                     	;# 
   657  0210                     	;# 
   658  0211                     	;# 
   659  0212                     	;# 
   660  0213                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0216                     	;# 
   665  0217                     	;# 
   666  0291                     	;# 
   667  0291                     	;# 
   668  0292                     	;# 
   669  0293                     	;# 
   670  0294                     	;# 
   671  0295                     	;# 
   672  0295                     	;# 
   673  0296                     	;# 
   674  0298                     	;# 
   675  0298                     	;# 
   676  0299                     	;# 
   677  029A                     	;# 
   678  029B                     	;# 
   679  029C                     	;# 
   680  029C                     	;# 
   681  029D                     	;# 
   682  029E                     	;# 
   683  029F                     	;# 
   684  0311                     	;# 
   685  0311                     	;# 
   686  0312                     	;# 
   687  0313                     	;# 
   688  0314                     	;# 
   689  0315                     	;# 
   690  0315                     	;# 
   691  0316                     	;# 
   692  0318                     	;# 
   693  0318                     	;# 
   694  0319                     	;# 
   695  031A                     	;# 
   696  031C                     	;# 
   697  031C                     	;# 
   698  031D                     	;# 
   699  031E                     	;# 
   700  0394                     	;# 
   701  0395                     	;# 
   702  0396                     	;# 
   703  0415                     	;# 
   704  0416                     	;# 
   705  0417                     	;# 
   706  041C                     	;# 
   707  041D                     	;# 
   708  041E                     	;# 
   709  0791                     	;# 
   710  0792                     	;# 
   711  0793                     	;# 
   712  0794                     	;# 
   713  0795                     	;# 
   714  0798                     	;# 
   715  0799                     	;# 
   716  07A0                     	;# 
   717  07A1                     	;# 
   718  07A3                     	;# 
   719  07A4                     	;# 
   720  07A6                     	;# 
   721  07A7                     	;# 
   722  07A9                     	;# 
   723  07AA                     	;# 
   724  0FE4                     	;# 
   725  0FE5                     	;# 
   726  0FE6                     	;# 
   727  0FE7                     	;# 
   728  0FE8                     	;# 
   729  0FE9                     	;# 
   730  0FEA                     	;# 
   731  0FEB                     	;# 
   732  0FED                     	;# 
   733  0FEE                     	;# 
   734  0FEF                     	;# 
   735  0000                     	;# 
   736  0001                     	;# 
   737  0002                     	;# 
   738  0003                     	;# 
   739  0004                     	;# 
   740  0005                     	;# 
   741  0006                     	;# 
   742  0007                     	;# 
   743  0008                     	;# 
   744  0009                     	;# 
   745  000A                     	;# 
   746  000B                     	;# 
   747  000C                     	;# 
   748  000D                     	;# 
   749  000E                     	;# 
   750  0010                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  001E                     	;# 
   764  001F                     	;# 
   765  008C                     	;# 
   766  008D                     	;# 
   767  008E                     	;# 
   768  0090                     	;# 
   769  0091                     	;# 
   770  0092                     	;# 
   771  0093                     	;# 
   772  0095                     	;# 
   773  0096                     	;# 
   774  0097                     	;# 
   775  0098                     	;# 
   776  0099                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  0110                     	;# 
   787  0111                     	;# 
   788  0112                     	;# 
   789  0113                     	;# 
   790  0114                     	;# 
   791  0115                     	;# 
   792  0116                     	;# 
   793  0117                     	;# 
   794  0118                     	;# 
   795  0119                     	;# 
   796  011A                     	;# 
   797  011B                     	;# 
   798  011D                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  0191                     	;# 
   802  0191                     	;# 
   803  0192                     	;# 
   804  0193                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0199                     	;# 
   811  019A                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019C                     	;# 
   817  019C                     	;# 
   818  019D                     	;# 
   819  019E                     	;# 
   820  019F                     	;# 
   821  020D                     	;# 
   822  0210                     	;# 
   823  0211                     	;# 
   824  0212                     	;# 
   825  0213                     	;# 
   826  0214                     	;# 
   827  0215                     	;# 
   828  0215                     	;# 
   829  0216                     	;# 
   830  0217                     	;# 
   831  0291                     	;# 
   832  0291                     	;# 
   833  0292                     	;# 
   834  0293                     	;# 
   835  0294                     	;# 
   836  0295                     	;# 
   837  0295                     	;# 
   838  0296                     	;# 
   839  0298                     	;# 
   840  0298                     	;# 
   841  0299                     	;# 
   842  029A                     	;# 
   843  029B                     	;# 
   844  029C                     	;# 
   845  029C                     	;# 
   846  029D                     	;# 
   847  029E                     	;# 
   848  029F                     	;# 
   849  0311                     	;# 
   850  0311                     	;# 
   851  0312                     	;# 
   852  0313                     	;# 
   853  0314                     	;# 
   854  0315                     	;# 
   855  0315                     	;# 
   856  0316                     	;# 
   857  0318                     	;# 
   858  0318                     	;# 
   859  0319                     	;# 
   860  031A                     	;# 
   861  031C                     	;# 
   862  031C                     	;# 
   863  031D                     	;# 
   864  031E                     	;# 
   865  0394                     	;# 
   866  0395                     	;# 
   867  0396                     	;# 
   868  0415                     	;# 
   869  0416                     	;# 
   870  0417                     	;# 
   871  041C                     	;# 
   872  041D                     	;# 
   873  041E                     	;# 
   874  0791                     	;# 
   875  0792                     	;# 
   876  0793                     	;# 
   877  0794                     	;# 
   878  0795                     	;# 
   879  0798                     	;# 
   880  0799                     	;# 
   881  07A0                     	;# 
   882  07A1                     	;# 
   883  07A3                     	;# 
   884  07A4                     	;# 
   885  07A6                     	;# 
   886  07A7                     	;# 
   887  07A9                     	;# 
   888  07AA                     	;# 
   889  0FE4                     	;# 
   890  0FE5                     	;# 
   891  0FE6                     	;# 
   892  0FE7                     	;# 
   893  0FE8                     	;# 
   894  0FE9                     	;# 
   895  0FEA                     	;# 
   896  0FEB                     	;# 
   897  0FED                     	;# 
   898  0FEE                     	;# 
   899  0FEF                     	;# 
   900  0000                     	;# 
   901  0001                     	;# 
   902  0002                     	;# 
   903  0003                     	;# 
   904  0004                     	;# 
   905  0005                     	;# 
   906  0006                     	;# 
   907  0007                     	;# 
   908  0008                     	;# 
   909  0009                     	;# 
   910  000A                     	;# 
   911  000B                     	;# 
   912  000C                     	;# 
   913  000D                     	;# 
   914  000E                     	;# 
   915  0010                     	;# 
   916  0011                     	;# 
   917  0012                     	;# 
   918  0013                     	;# 
   919  0015                     	;# 
   920  0016                     	;# 
   921  0016                     	;# 
   922  0017                     	;# 
   923  0018                     	;# 
   924  0019                     	;# 
   925  001A                     	;# 
   926  001B                     	;# 
   927  001C                     	;# 
   928  001E                     	;# 
   929  001F                     	;# 
   930  008C                     	;# 
   931  008D                     	;# 
   932  008E                     	;# 
   933  0090                     	;# 
   934  0091                     	;# 
   935  0092                     	;# 
   936  0093                     	;# 
   937  0095                     	;# 
   938  0096                     	;# 
   939  0097                     	;# 
   940  0098                     	;# 
   941  0099                     	;# 
   942  009A                     	;# 
   943  009B                     	;# 
   944  009B                     	;# 
   945  009C                     	;# 
   946  009D                     	;# 
   947  009E                     	;# 
   948  010C                     	;# 
   949  010D                     	;# 
   950  010E                     	;# 
   951  0110                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011A                     	;# 
   962  011B                     	;# 
   963  011D                     	;# 
   964  018C                     	;# 
   965  018D                     	;# 
   966  0191                     	;# 
   967  0191                     	;# 
   968  0192                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0194                     	;# 
   973  0195                     	;# 
   974  0196                     	;# 
   975  0199                     	;# 
   976  019A                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019C                     	;# 
   982  019C                     	;# 
   983  019D                     	;# 
   984  019E                     	;# 
   985  019F                     	;# 
   986  020D                     	;# 
   987  0210                     	;# 
   988  0211                     	;# 
   989  0212                     	;# 
   990  0213                     	;# 
   991  0214                     	;# 
   992  0215                     	;# 
   993  0215                     	;# 
   994  0216                     	;# 
   995  0217                     	;# 
   996  0291                     	;# 
   997  0291                     	;# 
   998  0292                     	;# 
   999  0293                     	;# 
  1000  0294                     	;# 
  1001  0295                     	;# 
  1002  0295                     	;# 
  1003  0296                     	;# 
  1004  0298                     	;# 
  1005  0298                     	;# 
  1006  0299                     	;# 
  1007  029A                     	;# 
  1008  029B                     	;# 
  1009  029C                     	;# 
  1010  029C                     	;# 
  1011  029D                     	;# 
  1012  029E                     	;# 
  1013  029F                     	;# 
  1014  0311                     	;# 
  1015  0311                     	;# 
  1016  0312                     	;# 
  1017  0313                     	;# 
  1018  0314                     	;# 
  1019  0315                     	;# 
  1020  0315                     	;# 
  1021  0316                     	;# 
  1022  0318                     	;# 
  1023  0318                     	;# 
  1024  0319                     	;# 
  1025  031A                     	;# 
  1026  031C                     	;# 
  1027  031C                     	;# 
  1028  031D                     	;# 
  1029  031E                     	;# 
  1030  0394                     	;# 
  1031  0395                     	;# 
  1032  0396                     	;# 
  1033  0415                     	;# 
  1034  0416                     	;# 
  1035  0417                     	;# 
  1036  041C                     	;# 
  1037  041D                     	;# 
  1038  041E                     	;# 
  1039  0791                     	;# 
  1040  0792                     	;# 
  1041  0793                     	;# 
  1042  0794                     	;# 
  1043  0795                     	;# 
  1044  0798                     	;# 
  1045  0799                     	;# 
  1046  07A0                     	;# 
  1047  07A1                     	;# 
  1048  07A3                     	;# 
  1049  07A4                     	;# 
  1050  07A6                     	;# 
  1051  07A7                     	;# 
  1052  07A9                     	;# 
  1053  07AA                     	;# 
  1054  0FE4                     	;# 
  1055  0FE5                     	;# 
  1056  0FE6                     	;# 
  1057  0FE7                     	;# 
  1058  0FE8                     	;# 
  1059  0FE9                     	;# 
  1060  0FEA                     	;# 
  1061  0FEB                     	;# 
  1062  0FED                     	;# 
  1063  0FEE                     	;# 
  1064  0FEF                     	;# 
  1065                           
  1066                           	psect	stringtext1
  1067  032E                     __pstringtext1:
  1068  032E                     recieve_ang@mask:
  1069  032E  3480               	retlw	128
  1070  032F                     __end_ofrecieve_ang@mask:
  1071  0011                     _PIR1bits	set	17
  1072  005F                     _GIE	set	95
  1073  005E                     _PEIE	set	94
  1074  0091                     _PIE1bits	set	145
  1075  0097                     _WDTCON	set	151
  1076  0098                     _OSCTUNE	set	152
  1077  0099                     _OSCCON	set	153
  1078  0095                     _OPTION_REGbits	set	149
  1079  008E                     _TRISC	set	142
  1080  008D                     _TRISB	set	141
  1081  008C                     _TRISA	set	140
  1082  0090                     _TRISE	set	144
  1083  0116                     _BORCON	set	278
  1084  011D                     _APFCON	set	285
  1085  010E                     _LATC	set	270
  1086  010D                     _LATB	set	269
  1087  010C                     _LATA	set	268
  1088  0110                     _LATE	set	272
  1089  0199                     _RCREG	set	409
  1090  019D                     _RCSTAbits	set	413
  1091  019A                     _TXREG	set	410
  1092  019E                     _TXSTAbits	set	414
  1093  019B                     _SPBRG	set	411
  1094  019F                     _BAUDCON	set	415
  1095  019D                     _RCSTA	set	413
  1096  019E                     _TXSTA	set	414
  1097  018C                     _ANSELA	set	396
  1098  018D                     _ANSELB	set	397
  1099  0215                     _SSPCON1bits	set	533
  1100  0214                     _SSPSTATbits	set	532
  1101  0211                     _SSPBUF	set	529
  1102  0216                     _SSPCON2bits	set	534
  1103  0214                     _SSPSTAT	set	532
  1104  0216                     _SSPCON2	set	534
  1105  0215                     _SSPCON1	set	533
  1106  0212                     _SSPADD	set	530
  1107  020D                     _WPUB	set	525
  1108  0210                     _WPUE	set	528
  1109                           
  1110                           	psect	cinit
  1111  0051                     start_initialization:	
  1112                           ; #config settings
  1113                           
  1114  0051                     __initialization:
  1115                           
  1116                           ; Clear objects allocated to BANK0
  1117  0051  0020               	movlb	0	; select bank0
  1118  0052  01C4               	clrf	__pbssBANK0& (0+127)
  1119  0053                     end_of_initialization:	
  1120                           ;End of C runtime variable initialization code
  1121                           
  1122  0053                     __end_of__initialization:
  1123  0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1124  0054  0020               	movlb	0
  1125  0055  3180  28B0         	ljmp	_main	;jump to C main() function
  1126                           
  1127                           	psect	bssBANK0
  1128  0044                     __pbssBANK0:
  1129  0044                     _flg:
  1130  0044                     	ds	1
  1131                           
  1132                           	psect	cstackCOMMON
  1133  0070                     __pcstackCOMMON:
  1134  0070                     ?_OSCILLATOR_Initialize:
  1135  0070                     ?_WDT_Initialize:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ?_init:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_PIN_MANAGER_Initialize:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?_SYSTEM_Initialize:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_main:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_send:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ??_send:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_recieve_ang:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_isr:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_i2c_wait:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_i2c_start:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_i2c_stop:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_i2c_repeated_start:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_i2c_write:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_i2c_read:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?__read:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?i1_i2c_wait:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ??i1_i2c_wait:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?i1_i2c_start:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ??i1_i2c_start:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?i1_i2c_stop:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ??i1_i2c_stop:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?i1_i2c_write:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ??i1_i2c_write:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?___wmul:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     send@data:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213  0070                     recieve_ang@ch:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     i1i2c_write@data:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ___wmul@multiplier:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x0
  1224  0070                     	ds	1
  1225  0071                     ?_set_pwm:
  1226  0071                     recieve_ang@ang:	
  1227                           ; 1 bytes @ 0x1
  1228                           
  1229  0071                     set_pwm@on:	
  1230                           ; 1 bytes @ 0x1
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0x1
  1234  0071                     	ds	1
  1235  0072                     ??_recieve_ang:
  1236  0072                     ___wmul@multiplicand:	
  1237                           ; 1 bytes @ 0x2
  1238                           
  1239                           
  1240                           ; 2 bytes @ 0x2
  1241  0072                     	ds	1
  1242  0073                     recieve_ang@data:
  1243  0073                     set_pwm@off:	
  1244                           ; 1 bytes @ 0x3
  1245                           
  1246                           
  1247                           ; 2 bytes @ 0x3
  1248  0073                     	ds	1
  1249  0074                     ??___wmul:
  1250  0074                     ___wmul@product:	
  1251                           ; 1 bytes @ 0x4
  1252                           
  1253                           
  1254                           ; 2 bytes @ 0x4
  1255  0074                     	ds	1
  1256  0075                     ??_set_pwm:
  1257                           
  1258                           ; 1 bytes @ 0x5
  1259  0075                     	ds	1
  1260  0076                     ?i1___lwdiv:
  1261  0076                     set_pwm@num:	
  1262                           ; 2 bytes @ 0x6
  1263                           
  1264  0076                     i1___lwdiv@divisor:	
  1265                           ; 1 bytes @ 0x6
  1266                           
  1267                           
  1268                           ; 2 bytes @ 0x6
  1269  0076                     	ds	2
  1270  0078                     i1___lwdiv@dividend:
  1271                           
  1272                           ; 2 bytes @ 0x8
  1273  0078                     	ds	2
  1274  007A                     ??i1___lwdiv:
  1275                           
  1276                           ; 1 bytes @ 0xA
  1277  007A                     	ds	1
  1278  007B                     i1___lwdiv@quotient:
  1279                           
  1280                           ; 2 bytes @ 0xB
  1281  007B                     	ds	2
  1282  007D                     i1___lwdiv@counter:
  1283                           
  1284                           ; 1 bytes @ 0xD
  1285  007D                     	ds	1
  1286  007E                     ??_servo_write:
  1287  007E                     ??_map:	
  1288                           ; 1 bytes @ 0xE
  1289                           
  1290                           
  1291                           	psect	cstackBANK0
  1292  0020                     __pcstackBANK0:	
  1293                           ; 1 bytes @ 0xE
  1294                           
  1295  0020                     ?_map:
  1296  0020                     map@x:	
  1297                           ; 2 bytes @ 0x0
  1298                           
  1299                           
  1300                           ; 2 bytes @ 0x0
  1301  0020                     	ds	2
  1302  0022                     map@in_min:
  1303                           
  1304                           ; 2 bytes @ 0x2
  1305  0022                     	ds	2
  1306  0024                     map@in_max:
  1307                           
  1308                           ; 2 bytes @ 0x4
  1309  0024                     	ds	2
  1310  0026                     map@out_min:
  1311                           
  1312                           ; 2 bytes @ 0x6
  1313  0026                     	ds	2
  1314  0028                     map@out_max:
  1315                           
  1316                           ; 2 bytes @ 0x8
  1317  0028                     	ds	2
  1318  002A                     ?_servo_write:
  1319  002A                     servo_write@ang:	
  1320                           ; 1 bytes @ 0xA
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0xA
  1324  002A                     	ds	2
  1325  002C                     servo_write@ch:
  1326                           
  1327                           ; 1 bytes @ 0xC
  1328  002C                     	ds	1
  1329  002D                     ??_isr:
  1330                           
  1331                           ; 1 bytes @ 0xD
  1332  002D                     	ds	2
  1333  002F                     isr@data:
  1334                           
  1335                           ; 1 bytes @ 0xF
  1336  002F                     	ds	1
  1337  0030                     isr@ch:
  1338                           
  1339                           ; 1 bytes @ 0x10
  1340  0030                     	ds	1
  1341  0031                     isr@ang:
  1342                           
  1343                           ; 1 bytes @ 0x11
  1344  0031                     	ds	1
  1345  0032                     ??_OSCILLATOR_Initialize:
  1346  0032                     ??_WDT_Initialize:	
  1347                           ; 1 bytes @ 0x12
  1348                           
  1349  0032                     ??_PIN_MANAGER_Initialize:	
  1350                           ; 1 bytes @ 0x12
  1351                           
  1352  0032                     ??_SYSTEM_Initialize:	
  1353                           ; 1 bytes @ 0x12
  1354                           
  1355  0032                     ??_i2c_wait:	
  1356                           ; 1 bytes @ 0x12
  1357                           
  1358  0032                     ??_i2c_start:	
  1359                           ; 1 bytes @ 0x12
  1360                           
  1361  0032                     ??_i2c_stop:	
  1362                           ; 1 bytes @ 0x12
  1363                           
  1364  0032                     ??_i2c_repeated_start:	
  1365                           ; 1 bytes @ 0x12
  1366                           
  1367  0032                     ??_i2c_write:	
  1368                           ; 1 bytes @ 0x12
  1369                           
  1370  0032                     ??_i2c_read:	
  1371                           ; 1 bytes @ 0x12
  1372                           
  1373  0032                     ?___lwdiv:	
  1374                           ; 1 bytes @ 0x12
  1375                           
  1376  0032                     i2c_write@data:	
  1377                           ; 2 bytes @ 0x12
  1378                           
  1379  0032                     ___lwdiv@divisor:	
  1380                           ; 1 bytes @ 0x12
  1381                           
  1382                           
  1383                           ; 2 bytes @ 0x12
  1384  0032                     	ds	1
  1385  0033                     ??_init:
  1386  0033                     ?__write:	
  1387                           ; 1 bytes @ 0x13
  1388                           
  1389  0033                     i2c_read@ack:	
  1390                           ; 1 bytes @ 0x13
  1391                           
  1392  0033                     __write@d:	
  1393                           ; 1 bytes @ 0x13
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0x13
  1397  0033                     	ds	1
  1398  0034                     ??__write:
  1399  0034                     i2c_read@data:	
  1400                           ; 1 bytes @ 0x14
  1401                           
  1402  0034                     __write@addr:	
  1403                           ; 1 bytes @ 0x14
  1404                           
  1405  0034                     ___lwdiv@dividend:	
  1406                           ; 1 bytes @ 0x14
  1407                           
  1408                           
  1409                           ; 2 bytes @ 0x14
  1410  0034                     	ds	1
  1411  0035                     ??__read:
  1412                           
  1413                           ; 1 bytes @ 0x15
  1414  0035                     	ds	1
  1415  0036                     ??___lwdiv:
  1416  0036                     __read@addr:	
  1417                           ; 1 bytes @ 0x16
  1418                           
  1419                           
  1420                           ; 1 bytes @ 0x16
  1421  0036                     	ds	1
  1422  0037                     __read@data:
  1423  0037                     ___lwdiv@quotient:	
  1424                           ; 1 bytes @ 0x17
  1425                           
  1426                           
  1427                           ; 2 bytes @ 0x17
  1428  0037                     	ds	2
  1429  0039                     ___lwdiv@counter:
  1430                           
  1431                           ; 1 bytes @ 0x19
  1432  0039                     	ds	1
  1433  003A                     ?_set_pwm_freq:
  1434  003A                     set_pwm_freq@freq:	
  1435                           ; 1 bytes @ 0x1A
  1436                           
  1437                           
  1438                           ; 2 bytes @ 0x1A
  1439  003A                     	ds	2
  1440  003C                     ??_set_pwm_freq:
  1441                           
  1442                           ; 1 bytes @ 0x1C
  1443  003C                     	ds	1
  1444  003D                     set_pwm_freq@prescale:
  1445                           
  1446                           ; 1 bytes @ 0x1D
  1447  003D                     	ds	1
  1448  003E                     set_pwm_freq@newreg:
  1449                           
  1450                           ; 1 bytes @ 0x1E
  1451  003E                     	ds	1
  1452  003F                     set_pwm_freq@prescaleval:
  1453                           
  1454                           ; 2 bytes @ 0x1F
  1455  003F                     	ds	2
  1456  0041                     set_pwm_freq@oldreg:
  1457                           
  1458                           ; 1 bytes @ 0x21
  1459  0041                     	ds	1
  1460  0042                     ??_main:
  1461                           
  1462                           ; 1 bytes @ 0x22
  1463  0042                     	ds	2
  1464                           
  1465                           	psect	maintext
  1466  00B0                     __pmaintext:	
  1467 ;;
  1468 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1469 ;;
  1470 ;; *************** function _main *****************
  1471 ;; Defined at:
  1472 ;;		line 15 in file "main.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : B1F/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1489 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1490 ;;Total ram usage:        2 bytes
  1491 ;; Hardware stack levels required when called: 9
  1492 ;; This function calls:
  1493 ;;		_SYSTEM_Initialize
  1494 ;;		_init
  1495 ;;		_set_pwm_freq
  1496 ;; This function is called by:
  1497 ;;		Startup code after reset
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _main
  1503  00B0                     _main:
  1504  00B0                     l1352:	
  1505                           ;incstack = 0
  1506                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1507                           
  1508                           
  1509                           ;main.c: 18: SYSTEM_Initialize();
  1510  00B0  3182  22F8  3180   	fcall	_SYSTEM_Initialize
  1511  00B3                     l1354:
  1512                           
  1513                           ;main.c: 20: ANSELA = 0x0;
  1514  00B3  0023               	movlb	3	; select bank3
  1515  00B4  018C               	clrf	12	;volatile
  1516  00B5                     l1356:
  1517                           
  1518                           ;main.c: 21: ANSELB = 0x0;
  1519  00B5  018D               	clrf	13	;volatile
  1520  00B6                     l1358:
  1521                           
  1522                           ;main.c: 24: TRISA = 0x0;
  1523  00B6  0021               	movlb	1	; select bank1
  1524  00B7  018C               	clrf	12	;volatile
  1525  00B8                     l1360:
  1526                           
  1527                           ;main.c: 25: LATA = 0x0;
  1528  00B8  0022               	movlb	2	; select bank2
  1529  00B9  018C               	clrf	12	;volatile
  1530  00BA                     l1362:
  1531                           
  1532                           ;main.c: 30: SSPADD = 0x13;
  1533  00BA  3013               	movlw	19
  1534  00BB  0024               	movlb	4	; select bank4
  1535  00BC  0092               	movwf	18	;volatile
  1536  00BD                     l1364:
  1537                           
  1538                           ;main.c: 31: SSPCON1 = 0x28;
  1539  00BD  3028               	movlw	40
  1540  00BE  0095               	movwf	21	;volatile
  1541  00BF                     l1366:
  1542                           
  1543                           ;main.c: 32: SSPCON2 = 0x0;
  1544  00BF  0196               	clrf	22	;volatile
  1545  00C0                     l1368:
  1546                           
  1547                           ;main.c: 33: SSPSTAT = 0;
  1548  00C0  0194               	clrf	20	;volatile
  1549  00C1                     l1370:
  1550                           
  1551                           ;main.c: 36: _delay((unsigned long)((500)*(8000000/4000.0)));
  1552  00C1  3006               	movlw	6
  1553  00C2  0020               	movlb	0	; select bank0
  1554  00C3  00C3               	movwf	??_main+1
  1555  00C4  3013               	movlw	19
  1556  00C5  00C2               	movwf	??_main
  1557  00C6  30AD               	movlw	173
  1558  00C7                     u817:
  1559  00C7  0B89               	decfsz	9,f
  1560  00C8  28C7               	goto	u817
  1561  00C9  0BC2               	decfsz	??_main,f
  1562  00CA  28C7               	goto	u817
  1563  00CB  0BC3               	decfsz	??_main+1,f
  1564  00CC  28C7               	goto	u817
  1565  00CD  3200               	nop2
  1566  00CE                     l1372:
  1567                           
  1568                           ;main.c: 37: init();
  1569  00CE  3182  2298  3180   	fcall	_init
  1570  00D1                     l1374:
  1571                           
  1572                           ;main.c: 39: set_pwm_freq(50);
  1573  00D1  3032               	movlw	50
  1574  00D2  0020               	movlb	0	; select bank0
  1575  00D3  00BA               	movwf	set_pwm_freq@freq
  1576  00D4  3000               	movlw	0
  1577  00D5  00BB               	movwf	set_pwm_freq@freq+1
  1578  00D6  3180  2057  3180   	fcall	_set_pwm_freq
  1579  00D9                     l1376:
  1580                           
  1581                           ;main.c: 40: LATA = 0x01;
  1582  00D9  3001               	movlw	1
  1583  00DA  0022               	movlb	2	; select bank2
  1584  00DB  008C               	movwf	12	;volatile
  1585  00DC                     l1378:
  1586                           
  1587                           ;main.c: 44: TXSTA = 0x02;
  1588  00DC  3002               	movlw	2
  1589  00DD  0023               	movlb	3	; select bank3
  1590  00DE  009E               	movwf	30	;volatile
  1591  00DF                     l1380:
  1592                           
  1593                           ;main.c: 46: RCSTA = 0x90;
  1594  00DF  3090               	movlw	144
  1595  00E0  009D               	movwf	29	;volatile
  1596  00E1                     l1382:
  1597                           
  1598                           ;main.c: 48: BAUDCON = 0x08;
  1599  00E1  3008               	movlw	8
  1600  00E2  009F               	movwf	31	;volatile
  1601  00E3                     l1384:
  1602                           
  1603                           ;main.c: 50: SPBRG = 51;
  1604  00E3  3033               	movlw	51
  1605  00E4  009B               	movwf	27	;volatile
  1606  00E5                     l1386:
  1607                           
  1608                           ;main.c: 54: PIR1bits.RCIF = 0;
  1609  00E5  0020               	movlb	0	; select bank0
  1610  00E6  1291               	bcf	17,5	;volatile
  1611  00E7                     l1388:
  1612                           
  1613                           ;main.c: 57: PIE1bits.RCIE = 1;
  1614  00E7  0021               	movlb	1	; select bank1
  1615  00E8  1691               	bsf	17,5	;volatile
  1616  00E9                     l1390:
  1617                           
  1618                           ;main.c: 58: PEIE = 1;
  1619  00E9  170B               	bsf	11,6	;volatile
  1620  00EA                     l1392:
  1621                           
  1622                           ;main.c: 59: GIE = 1;
  1623  00EA  178B               	bsf	11,7	;volatile
  1624  00EB                     l1394:
  1625                           
  1626                           ;main.c: 61: flg = 1;
  1627  00EB  0020               	movlb	0	; select bank0
  1628  00EC  01C4               	clrf	_flg
  1629  00ED  0AC4               	incf	_flg,f
  1630  00EE                     l1396:
  1631                           
  1632                           ;main.c: 63: _delay((unsigned long)((1000)*(8000000/4000.0)));
  1633  00EE  300B               	movlw	11
  1634  00EF  0020               	movlb	0	; select bank0
  1635  00F0  00C3               	movwf	??_main+1
  1636  00F1  3026               	movlw	38
  1637  00F2  00C2               	movwf	??_main
  1638  00F3  305D               	movlw	93
  1639  00F4                     u827:
  1640  00F4  0B89               	decfsz	9,f
  1641  00F5  28F4               	goto	u827
  1642  00F6  0BC2               	decfsz	??_main,f
  1643  00F7  28F4               	goto	u827
  1644  00F8  0BC3               	decfsz	??_main+1,f
  1645  00F9  28F4               	goto	u827
  1646  00FA  3200               	nop2
  1647  00FB                     l1398:
  1648                           
  1649                           ;main.c: 64: LATA = 0x0;
  1650  00FB  0022               	movlb	2	; select bank2
  1651  00FC  018C               	clrf	12	;volatile
  1652  00FD                     l114:	
  1653                           ;main.c: 65: while (1){}
  1654                           
  1655  00FD                     l115:
  1656  00FD  28FD               	goto	l114
  1657  00FE  3180  284F         	ljmp	start
  1658  0100                     __end_of_main:
  1659                           
  1660                           	psect	text1
  1661  0057                     __ptext1:	
  1662 ;; *************** function _set_pwm_freq *****************
  1663 ;; Defined at:
  1664 ;;		line 77 in file "PCA9685.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  freq            2   26[BANK0 ] unsigned int 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  prescaleval     2   31[BANK0 ] unsigned int 
  1669 ;;  oldreg          1   33[BANK0 ] unsigned char 
  1670 ;;  newreg          1   30[BANK0 ] unsigned char 
  1671 ;;  prescale        1   29[BANK0 ] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0, pclath, cstack
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1682 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1683 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1684 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1685 ;;Total ram usage:        8 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 8
  1688 ;; This function calls:
  1689 ;;		___lwdiv
  1690 ;;		__read
  1691 ;;		__write
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           
  1698                           ;psect for function _set_pwm_freq
  1699  0057                     _set_pwm_freq:
  1700  0057                     l1318:	
  1701                           ;incstack = 0
  1702                           ; Regs used in _set_pwm_freq: [wreg+status,2+status,0+pclath+cstack]
  1703                           
  1704                           
  1705                           ;PCA9685.c: 78: uint16_t prescaleval = 6103;
  1706  0057  30D7               	movlw	215
  1707  0058  0020               	movlb	0	; select bank0
  1708  0059  00BF               	movwf	set_pwm_freq@prescaleval
  1709  005A  3017               	movlw	23
  1710  005B  00C0               	movwf	set_pwm_freq@prescaleval+1
  1711  005C                     l1320:
  1712                           
  1713                           ;PCA9685.c: 79: prescaleval /= freq;
  1714  005C  083B               	movf	set_pwm_freq@freq+1,w
  1715  005D  00B3               	movwf	___lwdiv@divisor+1
  1716  005E  083A               	movf	set_pwm_freq@freq,w
  1717  005F  00B2               	movwf	___lwdiv@divisor
  1718  0060  0840               	movf	set_pwm_freq@prescaleval+1,w
  1719  0061  00B5               	movwf	___lwdiv@dividend+1
  1720  0062  083F               	movf	set_pwm_freq@prescaleval,w
  1721  0063  00B4               	movwf	___lwdiv@dividend
  1722  0064  3181  2100  3180   	fcall	___lwdiv
  1723  0067  0020               	movlb	0	; select bank0
  1724  0068  0833               	movf	?___lwdiv+1,w
  1725  0069  00C0               	movwf	set_pwm_freq@prescaleval+1
  1726  006A  0832               	movf	?___lwdiv,w
  1727  006B  00BF               	movwf	set_pwm_freq@prescaleval
  1728  006C                     l1322:
  1729                           
  1730                           ;PCA9685.c: 80: prescaleval -= 1;
  1731  006C  3001               	movlw	1
  1732  006D  02BF               	subwf	set_pwm_freq@prescaleval,f
  1733  006E  3000               	movlw	0
  1734  006F  3BC0               	subwfb	set_pwm_freq@prescaleval+1,f
  1735  0070                     l1324:
  1736                           
  1737                           ;PCA9685.c: 82: uint8_t prescale = (uint8_t)prescaleval;
  1738  0070  083F               	movf	set_pwm_freq@prescaleval,w
  1739  0071  00BC               	movwf	??_set_pwm_freq
  1740  0072  083C               	movf	??_set_pwm_freq,w
  1741  0073  00BD               	movwf	set_pwm_freq@prescale
  1742  0074                     l1326:
  1743                           
  1744                           ;PCA9685.c: 83: uint8_t oldreg = _read(0x0);
  1745  0074  3000               	movlw	0
  1746  0075  3181  21EF  3180   	fcall	__read
  1747  0078  0020               	movlb	0	; select bank0
  1748  0079  00BC               	movwf	??_set_pwm_freq
  1749  007A  083C               	movf	??_set_pwm_freq,w
  1750  007B  00C1               	movwf	set_pwm_freq@oldreg
  1751  007C                     l1328:
  1752                           
  1753                           ;PCA9685.c: 84: uint8_t newreg = (oldreg & 0x7F) | 0x10;
  1754  007C  0841               	movf	set_pwm_freq@oldreg,w
  1755  007D  397F               	andlw	127
  1756  007E  3810               	iorlw	16
  1757  007F  00BC               	movwf	??_set_pwm_freq
  1758  0080  083C               	movf	??_set_pwm_freq,w
  1759  0081  00BE               	movwf	set_pwm_freq@newreg
  1760  0082                     l1330:
  1761                           
  1762                           ;PCA9685.c: 85: _write(0x0, newreg);
  1763  0082  083E               	movf	set_pwm_freq@newreg,w
  1764  0083  00BC               	movwf	??_set_pwm_freq
  1765  0084  083C               	movf	??_set_pwm_freq,w
  1766  0085  00B3               	movwf	__write@d
  1767  0086  3000               	movlw	0
  1768  0087  3182  2281  3180   	fcall	__write
  1769  008A                     l1332:
  1770                           
  1771                           ;PCA9685.c: 86: _write(0xFE, prescale);
  1772  008A  0020               	movlb	0	; select bank0
  1773  008B  083D               	movf	set_pwm_freq@prescale,w
  1774  008C  00BC               	movwf	??_set_pwm_freq
  1775  008D  083C               	movf	??_set_pwm_freq,w
  1776  008E  00B3               	movwf	__write@d
  1777  008F  30FE               	movlw	254
  1778  0090  3182  2281  3180   	fcall	__write
  1779  0093                     l1334:
  1780                           
  1781                           ;PCA9685.c: 87: _write(0x0, oldreg);
  1782  0093  0020               	movlb	0	; select bank0
  1783  0094  0841               	movf	set_pwm_freq@oldreg,w
  1784  0095  00BC               	movwf	??_set_pwm_freq
  1785  0096  083C               	movf	??_set_pwm_freq,w
  1786  0097  00B3               	movwf	__write@d
  1787  0098  3000               	movlw	0
  1788  0099  3182  2281  3180   	fcall	__write
  1789  009C                     l1336:
  1790                           
  1791                           ;PCA9685.c: 88: _delay((unsigned long)((5)*(8000000/4000.0)));
  1792  009C  300D               	movlw	13
  1793  009D  0020               	movlb	0	; select bank0
  1794  009E  00BC               	movwf	??_set_pwm_freq
  1795  009F  30FB               	movlw	251
  1796  00A0                     u837:
  1797  00A0  0B89               	decfsz	9,f
  1798  00A1  28A0               	goto	u837
  1799  00A2  0BBC               	decfsz	??_set_pwm_freq,f
  1800  00A3  28A0               	goto	u837
  1801  00A4  3200               	nop2
  1802  00A5                     l1338:
  1803                           
  1804                           ;PCA9685.c: 89: _write(0x0, oldreg | 0xA1);
  1805  00A5  0020               	movlb	0	; select bank0
  1806  00A6  0841               	movf	set_pwm_freq@oldreg,w
  1807  00A7  38A1               	iorlw	161
  1808  00A8  00BC               	movwf	??_set_pwm_freq
  1809  00A9  083C               	movf	??_set_pwm_freq,w
  1810  00AA  00B3               	movwf	__write@d
  1811  00AB  3000               	movlw	0
  1812  00AC  3182  2281  3180   	fcall	__write
  1813  00AF                     l218:
  1814  00AF  0008               	return
  1815  00B0                     __end_of_set_pwm_freq:
  1816                           
  1817                           	psect	text2
  1818  0281                     __ptext2:	
  1819 ;; *************** function __write *****************
  1820 ;; Defined at:
  1821 ;;		line 16 in file "PCA9685.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  addr            1    wreg     unsigned char 
  1824 ;;  d               1   19[BANK0 ] unsigned char 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  addr            1   20[BANK0 ] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0, pclath, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1836 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1839 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1840 ;;Total ram usage:        2 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; Hardware stack levels required when called: 7
  1843 ;; This function calls:
  1844 ;;		_i2c_start
  1845 ;;		_i2c_stop
  1846 ;;		_i2c_write
  1847 ;; This function is called by:
  1848 ;;		_set_pwm_freq
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           
  1853                           ;psect for function __write
  1854  0281                     __write:
  1855                           
  1856                           ;incstack = 0
  1857                           ; Regs used in __write: [wreg+status,2+status,0+pclath+cstack]
  1858                           ;__write@addr stored from wreg
  1859  0281  0020               	movlb	0	; select bank0
  1860  0282  00B4               	movwf	__write@addr
  1861  0283                     l1268:
  1862                           
  1863                           ;PCA9685.c: 17: i2c_start();
  1864  0283  3182  22EE  3182   	fcall	_i2c_start
  1865                           
  1866                           ;PCA9685.c: 18: i2c_write(0x80);
  1867  0286  3080               	movlw	128
  1868  0287  3182  22AB  3182   	fcall	_i2c_write
  1869                           
  1870                           ;PCA9685.c: 19: i2c_write(addr);
  1871  028A  0020               	movlb	0	; select bank0
  1872  028B  0834               	movf	__write@addr,w
  1873  028C  3182  22AB  3182   	fcall	_i2c_write
  1874                           
  1875                           ;PCA9685.c: 20: i2c_write(d);
  1876  028F  0020               	movlb	0	; select bank0
  1877  0290  0833               	movf	__write@d,w
  1878  0291  3182  22AB  3182   	fcall	_i2c_write
  1879  0294                     l1270:
  1880                           
  1881                           ;PCA9685.c: 21: i2c_stop();
  1882  0294  3183  2315  3182   	fcall	_i2c_stop
  1883  0297                     l206:
  1884  0297  0008               	return
  1885  0298                     __end_of__write:
  1886                           
  1887                           	psect	text3
  1888  01EF                     __ptext3:	
  1889 ;; *************** function __read *****************
  1890 ;; Defined at:
  1891 ;;		line 28 in file "PCA9685.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  addr            1    wreg     unsigned char 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  addr            1   22[BANK0 ] unsigned char 
  1896 ;;  data            1   23[BANK0 ] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      unsigned char 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0, pclath, cstack
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1909 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1910 ;;Total ram usage:        3 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 7
  1913 ;; This function calls:
  1914 ;;		_i2c_read
  1915 ;;		_i2c_repeated_start
  1916 ;;		_i2c_start
  1917 ;;		_i2c_stop
  1918 ;;		_i2c_write
  1919 ;; This function is called by:
  1920 ;;		_set_pwm_freq
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function __read
  1926  01EF                     __read:
  1927                           
  1928                           ;incstack = 0
  1929                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  1930                           ;__read@addr stored from wreg
  1931  01EF  0020               	movlb	0	; select bank0
  1932  01F0  00B6               	movwf	__read@addr
  1933  01F1                     l1272:
  1934                           
  1935                           ;PCA9685.c: 29: uint8_t data;;PCA9685.c: 30: i2c_start();
  1936  01F1  3182  22EE  3181   	fcall	_i2c_start
  1937                           
  1938                           ;PCA9685.c: 31: i2c_write(0x80);
  1939  01F4  3080               	movlw	128
  1940  01F5  3182  22AB  3181   	fcall	_i2c_write
  1941                           
  1942                           ;PCA9685.c: 32: i2c_write(addr);
  1943  01F8  0020               	movlb	0	; select bank0
  1944  01F9  0836               	movf	__read@addr,w
  1945  01FA  3182  22AB  3181   	fcall	_i2c_write
  1946                           
  1947                           ;PCA9685.c: 34: i2c_repeated_start();
  1948  01FD  3182  22E4  3181   	fcall	_i2c_repeated_start
  1949                           
  1950                           ;PCA9685.c: 36: i2c_write(0x80 | 0x01);
  1951  0200  3081               	movlw	129
  1952  0201  3182  22AB  3181   	fcall	_i2c_write
  1953                           
  1954                           ;PCA9685.c: 37: data = i2c_read(0x0 | 0x01);
  1955  0204  3001               	movlw	1
  1956  0205  3182  2231  3181   	fcall	_i2c_read
  1957  0208  0020               	movlb	0	; select bank0
  1958  0209  00B5               	movwf	??__read
  1959  020A  0835               	movf	??__read,w
  1960  020B  00B7               	movwf	__read@data
  1961  020C                     l1274:
  1962                           
  1963                           ;PCA9685.c: 38: i2c_stop();
  1964  020C  3183  2315  3181   	fcall	_i2c_stop
  1965                           
  1966                           ;PCA9685.c: 40: return data;
  1967  020F  0020               	movlb	0	; select bank0
  1968  0210  0837               	movf	__read@data,w
  1969  0211                     l209:
  1970  0211  0008               	return
  1971  0212                     __end_of__read:
  1972                           
  1973                           	psect	text4
  1974  02E4                     __ptext4:	
  1975 ;; *************** function _i2c_repeated_start *****************
  1976 ;; Defined at:
  1977 ;;		line 19 in file "i2c.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;		None
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;		None
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, pclath, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1995 ;;Total ram usage:        0 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 6
  1998 ;; This function calls:
  1999 ;;		_i2c_wait
  2000 ;; This function is called by:
  2001 ;;		__read
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _i2c_repeated_start
  2007  02E4                     _i2c_repeated_start:
  2008  02E4                     l1172:	
  2009                           ;incstack = 0
  2010                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  2011                           
  2012                           
  2013                           ;i2c.c: 20: i2c_wait();
  2014  02E4  3182  22CC  3182   	fcall	_i2c_wait
  2015  02E7                     l1174:
  2016                           
  2017                           ;i2c.c: 21: SSPCON2bits.RSEN = 1;
  2018  02E7  0024               	movlb	4	; select bank4
  2019  02E8  1496               	bsf	22,1	;volatile
  2020  02E9                     l173:	
  2021                           ;i2c.c: 22: while(SSPCON2bits.RSEN);
  2022                           
  2023  02E9  1896               	btfsc	22,1	;volatile
  2024  02EA  2AEC               	goto	u471
  2025  02EB  2AED               	goto	u470
  2026  02EC                     u471:
  2027  02EC  2AE9               	goto	l173
  2028  02ED                     u470:
  2029  02ED                     l176:
  2030  02ED  0008               	return
  2031  02EE                     __end_of_i2c_repeated_start:
  2032                           
  2033                           	psect	text5
  2034  0231                     __ptext5:	
  2035 ;; *************** function _i2c_read *****************
  2036 ;; Defined at:
  2037 ;;		line 32 in file "i2c.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  ack             1    wreg     unsigned char 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  ack             1   19[BANK0 ] unsigned char 
  2042 ;;  data            1   20[BANK0 ] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  1    wreg      unsigned char 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2053 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2054 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2055 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2056 ;;Total ram usage:        3 bytes
  2057 ;; Hardware stack levels used: 1
  2058 ;; Hardware stack levels required when called: 6
  2059 ;; This function calls:
  2060 ;;		_i2c_wait
  2061 ;; This function is called by:
  2062 ;;		__read
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           
  2067                           ;psect for function _i2c_read
  2068  0231                     _i2c_read:
  2069                           
  2070                           ;incstack = 0
  2071                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2072                           ;i2c_read@ack stored from wreg
  2073  0231  0020               	movlb	0	; select bank0
  2074  0232  00B3               	movwf	i2c_read@ack
  2075  0233                     l1180:
  2076                           
  2077                           ;i2c.c: 33: uint8_t data;;i2c.c: 35: SSPCON2bits.ACKDT = ack;
  2078  0233  0C33               	rrf	i2c_read@ack,w
  2079  0234  0024               	movlb	4	; select bank4
  2080  0235  1C03               	skipc
  2081  0236  1296               	bcf	22,5	;volatile
  2082  0237  1803               	skipnc
  2083  0238  1696               	bsf	22,5	;volatile
  2084  0239                     l1182:
  2085                           
  2086                           ;i2c.c: 36: SSPCON2bits.RCEN = 1;
  2087  0239  1596               	bsf	22,3	;volatile
  2088  023A                     l188:	
  2089                           ;i2c.c: 37: while(!SSPSTATbits.BF);
  2090                           
  2091  023A  1C14               	btfss	20,0	;volatile
  2092  023B  2A3D               	goto	u501
  2093  023C  2A3E               	goto	u500
  2094  023D                     u501:
  2095  023D  2A3A               	goto	l188
  2096  023E                     u500:
  2097  023E                     l190:
  2098                           
  2099                           ;i2c.c: 38: SSPCON2bits.ACKEN = 1;
  2100  023E  1616               	bsf	22,4	;volatile
  2101  023F                     l1184:
  2102                           
  2103                           ;i2c.c: 39: data = SSPBUF;
  2104  023F  0811               	movf	17,w	;volatile
  2105  0240  0020               	movlb	0	; select bank0
  2106  0241  00B2               	movwf	??_i2c_read
  2107  0242  0832               	movf	??_i2c_read,w
  2108  0243  00B4               	movwf	i2c_read@data
  2109  0244                     l1186:
  2110                           
  2111                           ;i2c.c: 40: SSPCON1bits.SSPOV = 0;
  2112  0244  0024               	movlb	4	; select bank4
  2113  0245  1315               	bcf	21,6	;volatile
  2114  0246                     l1188:
  2115                           
  2116                           ;i2c.c: 41: i2c_wait();
  2117  0246  3182  22CC  3182   	fcall	_i2c_wait
  2118  0249                     l1190:
  2119                           
  2120                           ;i2c.c: 43: return data;
  2121  0249  0020               	movlb	0	; select bank0
  2122  024A  0834               	movf	i2c_read@data,w
  2123  024B                     l191:
  2124  024B  0008               	return
  2125  024C                     __end_of_i2c_read:
  2126                           
  2127                           	psect	text6
  2128  0100                     __ptext6:	
  2129 ;; *************** function ___lwdiv *****************
  2130 ;; Defined at:
  2131 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  divisor         2   18[BANK0 ] unsigned int 
  2134 ;;  dividend        2   20[BANK0 ] unsigned int 
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;  quotient        2   23[BANK0 ] unsigned int 
  2137 ;;  counter         1   25[BANK0 ] unsigned char 
  2138 ;; Return value:  Size  Location     Type
  2139 ;;                  2   18[BANK0 ] unsigned int 
  2140 ;; Registers used:
  2141 ;;		wreg, status,2, status,0
  2142 ;; Tracked objects:
  2143 ;;		On entry : 0/0
  2144 ;;		On exit  : 0/0
  2145 ;;		Unchanged: 0/0
  2146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2147 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2148 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2149 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2150 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2151 ;;Total ram usage:        8 bytes
  2152 ;; Hardware stack levels used: 1
  2153 ;; Hardware stack levels required when called: 5
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_set_pwm_freq
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           
  2162                           ;psect for function ___lwdiv
  2163  0100                     ___lwdiv:
  2164  0100                     l1286:	
  2165                           ;incstack = 0
  2166                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2167                           
  2168  0100  0020               	movlb	0	; select bank0
  2169  0101  01B7               	clrf	___lwdiv@quotient
  2170  0102  01B8               	clrf	___lwdiv@quotient+1
  2171  0103                     l1288:
  2172  0103  0832               	movf	___lwdiv@divisor,w
  2173  0104  0433               	iorwf	___lwdiv@divisor+1,w
  2174  0105  1903               	btfsc	3,2
  2175  0106  2908               	goto	u671
  2176  0107  2909               	goto	u670
  2177  0108                     u671:
  2178  0108  2938               	goto	l1308
  2179  0109                     u670:
  2180  0109                     l1290:
  2181  0109  01B9               	clrf	___lwdiv@counter
  2182  010A  0AB9               	incf	___lwdiv@counter,f
  2183  010B  2915               	goto	l1296
  2184  010C                     l1292:
  2185  010C  3001               	movlw	1
  2186  010D                     u685:
  2187  010D  35B2               	lslf	___lwdiv@divisor,f
  2188  010E  0DB3               	rlf	___lwdiv@divisor+1,f
  2189  010F  0B89               	decfsz	9,f
  2190  0110  290D               	goto	u685
  2191  0111                     l1294:
  2192  0111  3001               	movlw	1
  2193  0112  00B6               	movwf	??___lwdiv
  2194  0113  0836               	movf	??___lwdiv,w
  2195  0114  07B9               	addwf	___lwdiv@counter,f
  2196  0115                     l1296:
  2197  0115  1FB3               	btfss	___lwdiv@divisor+1,7
  2198  0116  2918               	goto	u691
  2199  0117  2919               	goto	u690
  2200  0118                     u691:
  2201  0118  290C               	goto	l1292
  2202  0119                     u690:
  2203  0119                     l1298:
  2204  0119  3001               	movlw	1
  2205  011A                     u705:
  2206  011A  35B7               	lslf	___lwdiv@quotient,f
  2207  011B  0DB8               	rlf	___lwdiv@quotient+1,f
  2208  011C  0B89               	decfsz	9,f
  2209  011D  291A               	goto	u705
  2210  011E  0833               	movf	___lwdiv@divisor+1,w
  2211  011F  0235               	subwf	___lwdiv@dividend+1,w
  2212  0120  1D03               	skipz
  2213  0121  2924               	goto	u715
  2214  0122  0832               	movf	___lwdiv@divisor,w
  2215  0123  0234               	subwf	___lwdiv@dividend,w
  2216  0124                     u715:
  2217  0124  1C03               	skipc
  2218  0125  2927               	goto	u711
  2219  0126  2928               	goto	u710
  2220  0127                     u711:
  2221  0127  292D               	goto	l1304
  2222  0128                     u710:
  2223  0128                     l1300:
  2224  0128  0832               	movf	___lwdiv@divisor,w
  2225  0129  02B4               	subwf	___lwdiv@dividend,f
  2226  012A  0833               	movf	___lwdiv@divisor+1,w
  2227  012B  3BB5               	subwfb	___lwdiv@dividend+1,f
  2228  012C                     l1302:
  2229  012C  1437               	bsf	___lwdiv@quotient,0
  2230  012D                     l1304:
  2231  012D  3001               	movlw	1
  2232  012E                     u725:
  2233  012E  36B3               	lsrf	___lwdiv@divisor+1,f
  2234  012F  0CB2               	rrf	___lwdiv@divisor,f
  2235  0130  0B89               	decfsz	9,f
  2236  0131  292E               	goto	u725
  2237  0132                     l1306:
  2238  0132  3001               	movlw	1
  2239  0133  02B9               	subwf	___lwdiv@counter,f
  2240  0134  1D03               	btfss	3,2
  2241  0135  2937               	goto	u731
  2242  0136  2938               	goto	u730
  2243  0137                     u731:
  2244  0137  2919               	goto	l1298
  2245  0138                     u730:
  2246  0138                     l1308:
  2247  0138  0838               	movf	___lwdiv@quotient+1,w
  2248  0139  00B3               	movwf	?___lwdiv+1
  2249  013A  0837               	movf	___lwdiv@quotient,w
  2250  013B  00B2               	movwf	?___lwdiv
  2251  013C                     l646:
  2252  013C  0008               	return
  2253  013D                     __end_of___lwdiv:
  2254                           
  2255                           	psect	text7
  2256  0298                     __ptext7:	
  2257 ;; *************** function _init *****************
  2258 ;; Defined at:
  2259 ;;		line 46 in file "PCA9685.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2277 ;;Total ram usage:        0 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 7
  2280 ;; This function calls:
  2281 ;;		_i2c_start
  2282 ;;		_i2c_stop
  2283 ;;		_i2c_write
  2284 ;; This function is called by:
  2285 ;;		_main
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           
  2290                           ;psect for function _init
  2291  0298                     _init:
  2292  0298                     l1314:	
  2293                           ;incstack = 0
  2294                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2295                           
  2296                           
  2297                           ;PCA9685.c: 47: i2c_start();
  2298  0298  3182  22EE  3182   	fcall	_i2c_start
  2299                           
  2300                           ;PCA9685.c: 48: i2c_write(0x80);
  2301  029B  3080               	movlw	128
  2302  029C  3182  22AB  3182   	fcall	_i2c_write
  2303                           
  2304                           ;PCA9685.c: 50: i2c_write(0x0);
  2305  029F  3000               	movlw	0
  2306  02A0  3182  22AB  3182   	fcall	_i2c_write
  2307                           
  2308                           ;PCA9685.c: 51: i2c_write(0x0);
  2309  02A3  3000               	movlw	0
  2310  02A4  3182  22AB  3182   	fcall	_i2c_write
  2311  02A7                     l1316:
  2312                           
  2313                           ;PCA9685.c: 53: i2c_stop();
  2314  02A7  3183  2315  3182   	fcall	_i2c_stop
  2315  02AA                     l212:
  2316  02AA  0008               	return
  2317  02AB                     __end_of_init:
  2318                           
  2319                           	psect	text8
  2320  02AB                     __ptext8:	
  2321 ;; *************** function _i2c_write *****************
  2322 ;; Defined at:
  2323 ;;		line 25 in file "i2c.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  data            1    wreg     unsigned char 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  data            1   18[BANK0 ] unsigned char 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2338 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2340 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2341 ;;Total ram usage:        1 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 6
  2344 ;; This function calls:
  2345 ;;		_i2c_wait
  2346 ;; This function is called by:
  2347 ;;		__write
  2348 ;;		__read
  2349 ;;		_init
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           
  2354                           ;psect for function _i2c_write
  2355  02AB                     _i2c_write:
  2356                           
  2357                           ;incstack = 0
  2358                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2359                           ;i2c_write@data stored from wreg
  2360  02AB  0020               	movlb	0	; select bank0
  2361  02AC  00B2               	movwf	i2c_write@data
  2362  02AD                     l1176:
  2363                           
  2364                           ;i2c.c: 26: SSPBUF = data;
  2365  02AD  0832               	movf	i2c_write@data,w
  2366  02AE  0024               	movlb	4	; select bank4
  2367  02AF  0091               	movwf	17	;volatile
  2368  02B0                     l179:	
  2369                           ;i2c.c: 27: while(SSPSTATbits.BF);
  2370                           
  2371  02B0  1814               	btfsc	20,0	;volatile
  2372  02B1  2AB3               	goto	u481
  2373  02B2  2AB4               	goto	u480
  2374  02B3                     u481:
  2375  02B3  2AB0               	goto	l179
  2376  02B4                     u480:
  2377  02B4                     l182:
  2378  02B4  1B16               	btfsc	22,6	;volatile
  2379  02B5  2AB7               	goto	u491
  2380  02B6  2AB8               	goto	u490
  2381  02B7                     u491:
  2382  02B7  2AB4               	goto	l182
  2383  02B8                     u490:
  2384  02B8                     l1178:
  2385                           
  2386                           ;i2c.c: 29: i2c_wait();
  2387  02B8  3182  22CC  3182   	fcall	_i2c_wait
  2388  02BB                     l185:
  2389  02BB  0008               	return
  2390  02BC                     __end_of_i2c_write:
  2391                           
  2392                           	psect	text9
  2393  0315                     __ptext9:	
  2394 ;; *************** function _i2c_stop *****************
  2395 ;; Defined at:
  2396 ;;		line 14 in file "i2c.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;		None
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;		None
  2401 ;; Return value:  Size  Location     Type
  2402 ;;                  1    wreg      void 
  2403 ;; Registers used:
  2404 ;;		None
  2405 ;; Tracked objects:
  2406 ;;		On entry : 0/0
  2407 ;;		On exit  : 0/0
  2408 ;;		Unchanged: 0/0
  2409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2414 ;;Total ram usage:        0 bytes
  2415 ;; Hardware stack levels used: 1
  2416 ;; Hardware stack levels required when called: 5
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		__write
  2421 ;;		__read
  2422 ;;		_init
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           
  2427                           ;psect for function _i2c_stop
  2428  0315                     _i2c_stop:
  2429  0315                     l1170:	
  2430                           ;incstack = 0
  2431                           ; Regs used in _i2c_stop: []
  2432                           
  2433                           
  2434                           ;i2c.c: 15: SSPCON2bits.PEN = 1;
  2435  0315  0024               	movlb	4	; select bank4
  2436  0316  1516               	bsf	22,2	;volatile
  2437  0317                     l167:	
  2438                           ;i2c.c: 16: while(SSPCON2bits.PEN);
  2439                           
  2440  0317  1916               	btfsc	22,2	;volatile
  2441  0318  2B1A               	goto	u461
  2442  0319  2B1B               	goto	u460
  2443  031A                     u461:
  2444  031A  2B17               	goto	l167
  2445  031B                     u460:
  2446  031B                     l170:
  2447  031B  0008               	return
  2448  031C                     __end_of_i2c_stop:
  2449                           
  2450                           	psect	text10
  2451  02EE                     __ptext10:	
  2452 ;; *************** function _i2c_start *****************
  2453 ;; Defined at:
  2454 ;;		line 8 in file "i2c.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0, pclath, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 6
  2475 ;; This function calls:
  2476 ;;		_i2c_wait
  2477 ;; This function is called by:
  2478 ;;		__write
  2479 ;;		__read
  2480 ;;		_init
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _i2c_start
  2486  02EE                     _i2c_start:
  2487  02EE                     l1166:	
  2488                           ;incstack = 0
  2489                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  2490                           
  2491                           
  2492                           ;i2c.c: 9: i2c_wait();
  2493  02EE  3182  22CC  3182   	fcall	_i2c_wait
  2494  02F1                     l1168:
  2495                           
  2496                           ;i2c.c: 10: SSPCON2bits.SEN = 1;
  2497  02F1  0024               	movlb	4	; select bank4
  2498  02F2  1416               	bsf	22,0	;volatile
  2499  02F3                     l161:	
  2500                           ;i2c.c: 11: while(SSPCON2bits.SEN);
  2501                           
  2502  02F3  1816               	btfsc	22,0	;volatile
  2503  02F4  2AF6               	goto	u451
  2504  02F5  2AF7               	goto	u450
  2505  02F6                     u451:
  2506  02F6  2AF3               	goto	l161
  2507  02F7                     u450:
  2508  02F7                     l164:
  2509  02F7  0008               	return
  2510  02F8                     __end_of_i2c_start:
  2511                           
  2512                           	psect	text11
  2513  02CC                     __ptext11:	
  2514 ;; *************** function _i2c_wait *****************
  2515 ;; Defined at:
  2516 ;;		line 4 in file "i2c.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;		None
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2534 ;;Total ram usage:        0 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 5
  2537 ;; This function calls:
  2538 ;;		Nothing
  2539 ;; This function is called by:
  2540 ;;		_i2c_start
  2541 ;;		_i2c_repeated_start
  2542 ;;		_i2c_write
  2543 ;;		_i2c_read
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           
  2548                           ;psect for function _i2c_wait
  2549  02CC                     _i2c_wait:
  2550  02CC                     l1154:	
  2551                           ;incstack = 0
  2552                           ; Regs used in _i2c_wait: [wreg+status,2]
  2553                           
  2554  02CC                     l1156:	
  2555                           ;i2c.c: 5: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  2556                           
  2557  02CC  0024               	movlb	4	; select bank4
  2558  02CD  0816               	movf	22,w	;volatile
  2559  02CE  391F               	andlw	31
  2560  02CF  1D03               	btfss	3,2
  2561  02D0  2AD2               	goto	u411
  2562  02D1  2AD3               	goto	u410
  2563  02D2                     u411:
  2564  02D2  2ACC               	goto	l1156
  2565  02D3                     u410:
  2566  02D3                     l1158:
  2567  02D3  1914               	btfsc	20,2	;volatile
  2568  02D4  2AD6               	goto	u421
  2569  02D5  2AD7               	goto	u420
  2570  02D6                     u421:
  2571  02D6  2ACC               	goto	l1156
  2572  02D7                     u420:
  2573  02D7                     l158:
  2574  02D7  0008               	return
  2575  02D8                     __end_of_i2c_wait:
  2576                           
  2577                           	psect	text12
  2578  02F8                     __ptext12:	
  2579 ;; *************** function _SYSTEM_Initialize *****************
  2580 ;; Defined at:
  2581 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;                  1    wreg      void 
  2588 ;; Registers used:
  2589 ;;		wreg, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2599 ;;Total ram usage:        0 bytes
  2600 ;; Hardware stack levels used: 1
  2601 ;; Hardware stack levels required when called: 6
  2602 ;; This function calls:
  2603 ;;		_OSCILLATOR_Initialize
  2604 ;;		_PIN_MANAGER_Initialize
  2605 ;;		_WDT_Initialize
  2606 ;; This function is called by:
  2607 ;;		_main
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           
  2612                           ;psect for function _SYSTEM_Initialize
  2613  02F8                     _SYSTEM_Initialize:
  2614  02F8                     l1312:	
  2615                           ;incstack = 0
  2616                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2617                           
  2618                           
  2619                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2620  02F8  3182  224C  3182   	fcall	_PIN_MANAGER_Initialize
  2621                           
  2622                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2623  02FB  3183  231C  3182   	fcall	_OSCILLATOR_Initialize
  2624                           
  2625                           ;mcc.c: 55: WDT_Initialize();
  2626  02FE  3183  232A  3182   	fcall	_WDT_Initialize
  2627  0301                     l51:
  2628  0301  0008               	return
  2629  0302                     __end_of_SYSTEM_Initialize:
  2630                           
  2631                           	psect	text13
  2632  032A                     __ptext13:	
  2633 ;; *************** function _WDT_Initialize *****************
  2634 ;; Defined at:
  2635 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;		None
  2638 ;; Auto vars:     Size  Location     Type
  2639 ;;		None
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2653 ;;Total ram usage:        0 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 5
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_SYSTEM_Initialize
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _WDT_Initialize
  2665  032A                     _WDT_Initialize:
  2666  032A                     l1266:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _WDT_Initialize: [wreg]
  2669                           
  2670                           
  2671                           ;mcc.c: 71: WDTCON = 0x16;
  2672  032A  3016               	movlw	22
  2673  032B  0021               	movlb	1	; select bank1
  2674  032C  0097               	movwf	23	;volatile
  2675  032D                     l57:
  2676  032D  0008               	return
  2677  032E                     __end_of_WDT_Initialize:
  2678                           
  2679                           	psect	text14
  2680  024C                     __ptext14:	
  2681 ;; *************** function _PIN_MANAGER_Initialize *****************
  2682 ;; Defined at:
  2683 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;		None
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2701 ;;Total ram usage:        0 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; Hardware stack levels required when called: 5
  2704 ;; This function calls:
  2705 ;;		Nothing
  2706 ;; This function is called by:
  2707 ;;		_SYSTEM_Initialize
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           
  2712                           ;psect for function _PIN_MANAGER_Initialize
  2713  024C                     _PIN_MANAGER_Initialize:
  2714  024C                     l1244:	
  2715                           ;incstack = 0
  2716                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2717                           
  2718                           
  2719                           ;pin_manager.c: 60: LATE = 0x00;
  2720  024C  0022               	movlb	2	; select bank2
  2721  024D  0190               	clrf	16	;volatile
  2722                           
  2723                           ;pin_manager.c: 61: LATA = 0x00;
  2724  024E  018C               	clrf	12	;volatile
  2725                           
  2726                           ;pin_manager.c: 62: LATB = 0x00;
  2727  024F  018D               	clrf	13	;volatile
  2728                           
  2729                           ;pin_manager.c: 63: LATC = 0x00;
  2730  0250  018E               	clrf	14	;volatile
  2731  0251                     l1246:
  2732                           
  2733                           ;pin_manager.c: 68: TRISE = 0x08;
  2734  0251  3008               	movlw	8
  2735  0252  0021               	movlb	1	; select bank1
  2736  0253  0090               	movwf	16	;volatile
  2737  0254                     l1248:
  2738                           
  2739                           ;pin_manager.c: 69: TRISA = 0xFF;
  2740  0254  30FF               	movlw	255
  2741  0255  008C               	movwf	12	;volatile
  2742  0256                     l1250:
  2743                           
  2744                           ;pin_manager.c: 70: TRISB = 0xFF;
  2745  0256  30FF               	movlw	255
  2746  0257  008D               	movwf	13	;volatile
  2747  0258                     l1252:
  2748                           
  2749                           ;pin_manager.c: 71: TRISC = 0xFF;
  2750  0258  30FF               	movlw	255
  2751  0259  008E               	movwf	14	;volatile
  2752  025A                     l1254:
  2753                           
  2754                           ;pin_manager.c: 76: ANSELB = 0x3F;
  2755  025A  303F               	movlw	63
  2756  025B  0023               	movlb	3	; select bank3
  2757  025C  008D               	movwf	13	;volatile
  2758  025D                     l1256:
  2759                           
  2760                           ;pin_manager.c: 77: ANSELA = 0x3F;
  2761  025D  303F               	movlw	63
  2762  025E  008C               	movwf	12	;volatile
  2763                           
  2764                           ;pin_manager.c: 82: WPUE = 0x00;
  2765  025F  0024               	movlb	4	; select bank4
  2766  0260  0190               	clrf	16	;volatile
  2767                           
  2768                           ;pin_manager.c: 83: WPUB = 0x00;
  2769  0261  018D               	clrf	13	;volatile
  2770  0262                     l1258:
  2771                           
  2772                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 1;
  2773  0262  0021               	movlb	1	; select bank1
  2774  0263  1795               	bsf	21,7	;volatile
  2775                           
  2776                           ;pin_manager.c: 90: APFCON = 0x00;
  2777  0264  0022               	movlb	2	; select bank2
  2778  0265  019D               	clrf	29	;volatile
  2779  0266                     l31:
  2780  0266  0008               	return
  2781  0267                     __end_of_PIN_MANAGER_Initialize:
  2782                           
  2783                           	psect	text15
  2784  031C                     __ptext15:	
  2785 ;; *************** function _OSCILLATOR_Initialize *****************
  2786 ;; Defined at:
  2787 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 5
  2808 ;; This function calls:
  2809 ;;		Nothing
  2810 ;; This function is called by:
  2811 ;;		_SYSTEM_Initialize
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           
  2816                           ;psect for function _OSCILLATOR_Initialize
  2817  031C                     _OSCILLATOR_Initialize:
  2818  031C                     l1260:	
  2819                           ;incstack = 0
  2820                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2821                           
  2822                           
  2823                           ;mcc.c: 61: OSCCON = 0x70;
  2824  031C  3070               	movlw	112
  2825  031D  0021               	movlb	1	; select bank1
  2826  031E  0099               	movwf	25	;volatile
  2827  031F                     l1262:
  2828                           
  2829                           ;mcc.c: 63: OSCTUNE = 0x00;
  2830  031F  0198               	clrf	24	;volatile
  2831  0320                     l1264:
  2832                           
  2833                           ;mcc.c: 65: BORCON = 0x00;
  2834  0320  0022               	movlb	2	; select bank2
  2835  0321  0196               	clrf	22	;volatile
  2836  0322                     l54:
  2837  0322  0008               	return
  2838  0323                     __end_of_OSCILLATOR_Initialize:
  2839                           
  2840                           	psect	intentry
  2841  0004                     __pintentry:	
  2842 ;; *************** function _isr *****************
  2843 ;; Defined at:
  2844 ;;		line 97 in file "main.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  ang             1   17[BANK0 ] unsigned char 
  2849 ;;  ch              1   16[BANK0 ] unsigned char 
  2850 ;;  data            1   15[BANK0 ] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2861 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2862 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2864 ;;Total ram usage:        5 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 4
  2867 ;; This function calls:
  2868 ;;		_recieve_ang
  2869 ;;		_send
  2870 ;;		_servo_write
  2871 ;; This function is called by:
  2872 ;;		Interrupt level 1
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876  0004                     _isr:
  2877                           
  2878                           ;incstack = 0
  2879  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2880                           
  2881                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2882  0005  3180               	pagesel	$
  2883  0006                     i1l1400:
  2884                           
  2885                           ;main.c: 98: if(PIR1bits.RCIF){
  2886  0006  0020               	movlb	0	; select bank0
  2887  0007  1E91               	btfss	17,5	;volatile
  2888  0008  280A               	goto	u77_21
  2889  0009  280B               	goto	u77_20
  2890  000A                     u77_21:
  2891  000A  284D               	goto	i1l140
  2892  000B                     u77_20:
  2893  000B                     i1l1402:
  2894                           
  2895                           ;main.c: 100: PIR1bits.RCIF = 0;
  2896  000B  1291               	bcf	17,5	;volatile
  2897                           
  2898                           ;main.c: 102: if((RCSTAbits.OERR) || (RCSTAbits.FERR)){
  2899  000C  0023               	movlb	3	; select bank3
  2900  000D  189D               	btfsc	29,1	;volatile
  2901  000E  2810               	goto	u78_21
  2902  000F  2811               	goto	u78_20
  2903  0010                     u78_21:
  2904  0010  2815               	goto	i1l1406
  2905  0011                     u78_20:
  2906  0011                     i1l1404:
  2907  0011  1D1D               	btfss	29,2	;volatile
  2908  0012  2814               	goto	u79_21
  2909  0013  2815               	goto	u79_20
  2910  0014                     u79_21:
  2911  0014  2819               	goto	i1l1410
  2912  0015                     u79_20:
  2913  0015                     i1l1406:
  2914                           
  2915                           ;main.c: 103: RCSTA = 0;
  2916  0015  019D               	clrf	29	;volatile
  2917  0016                     i1l1408:
  2918                           
  2919                           ;main.c: 104: RCSTA = 0x90;
  2920  0016  3090               	movlw	144
  2921  0017  009D               	movwf	29	;volatile
  2922                           
  2923                           ;main.c: 105: }else{
  2924  0018  284D               	goto	i1l140
  2925  0019                     i1l1410:
  2926                           
  2927                           ;main.c: 107: if(flg){
  2928  0019  0020               	movlb	0	; select bank0
  2929  001A  0844               	movf	_flg,w
  2930  001B  1903               	btfsc	3,2
  2931  001C  281E               	goto	u80_21
  2932  001D  281F               	goto	u80_20
  2933  001E                     u80_21:
  2934  001E  2825               	goto	i1l1416
  2935  001F                     u80_20:
  2936  001F                     i1l1412:
  2937                           
  2938                           ;main.c: 108: LATA = 0x01;
  2939  001F  3001               	movlw	1
  2940  0020  0022               	movlb	2	; select bank2
  2941  0021  008C               	movwf	12	;volatile
  2942  0022                     i1l1414:
  2943                           
  2944                           ;main.c: 109: flg = 0;
  2945  0022  0020               	movlb	0	; select bank0
  2946  0023  01C4               	clrf	_flg
  2947                           
  2948                           ;main.c: 110: }else{
  2949  0024  282A               	goto	i1l1420
  2950  0025                     i1l1416:
  2951                           
  2952                           ;main.c: 111: LATA = 0x0;
  2953  0025  0022               	movlb	2	; select bank2
  2954  0026  018C               	clrf	12	;volatile
  2955  0027                     i1l1418:
  2956                           
  2957                           ;main.c: 112: flg = 1;
  2958  0027  0020               	movlb	0	; select bank0
  2959  0028  01C4               	clrf	_flg
  2960  0029  0AC4               	incf	_flg,f
  2961  002A                     i1l1420:
  2962                           
  2963                           ;main.c: 113: };main.c: 115: uint8_t data = RCREG;
  2964  002A  0023               	movlb	3	; select bank3
  2965  002B  0819               	movf	25,w	;volatile
  2966  002C  0020               	movlb	0	; select bank0
  2967  002D  00AD               	movwf	??_isr
  2968  002E  082D               	movf	??_isr,w
  2969  002F  00AF               	movwf	isr@data
  2970  0030                     i1l1422:
  2971                           
  2972                           ;main.c: 116: send(data);
  2973  0030  082F               	movf	isr@data,w
  2974  0031  3183  230C  3180   	fcall	_send
  2975  0034                     i1l1424:
  2976                           
  2977                           ;main.c: 118: uint8_t ch;;main.c: 119: uint8_t ang;;main.c: 120: recieve_ang(data, &ch, 
      +                          &ang);
  2978  0034  3030               	movlw	(low (isr@ch| 0))& (0+255)
  2979  0035  0020               	movlb	0	; select bank0
  2980  0036  00AD               	movwf	??_isr
  2981  0037  082D               	movf	??_isr,w
  2982  0038  00F0               	movwf	recieve_ang@ch
  2983  0039  3031               	movlw	(low (isr@ang| 0))& (0+255)
  2984  003A  00AE               	movwf	??_isr+1
  2985  003B  082E               	movf	??_isr+1,w
  2986  003C  00F1               	movwf	recieve_ang@ang
  2987  003D  082F               	movf	isr@data,w
  2988  003E  3182  2267  3180   	fcall	_recieve_ang
  2989  0041                     i1l1426:
  2990                           
  2991                           ;main.c: 121: servo_write(ch, ang);
  2992  0041  0020               	movlb	0	; select bank0
  2993  0042  0831               	movf	isr@ang,w
  2994  0043  00AD               	movwf	??_isr
  2995  0044  01AE               	clrf	??_isr+1
  2996  0045  082D               	movf	??_isr,w
  2997  0046  00AA               	movwf	servo_write@ang
  2998  0047  082E               	movf	??_isr+1,w
  2999  0048  00AB               	movwf	servo_write@ang+1
  3000  0049  0830               	movf	isr@ch,w
  3001  004A  3181  2179  3180   	fcall	_servo_write
  3002  004D                     i1l140:
  3003  004D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3004  004E  0009               	retfie
  3005  004F                     __end_of_isr:
  3006                           
  3007                           	psect	text17
  3008  0179                     __ptext17:	
  3009 ;; *************** function _servo_write *****************
  3010 ;; Defined at:
  3011 ;;		line 103 in file "PCA9685.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  ch              1    wreg     unsigned char 
  3014 ;;  ang             2   10[BANK0 ] unsigned int 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  ch              1   12[BANK0 ] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  1    wreg      void 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0, pclath, cstack
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3026 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3027 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3029 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3030 ;;Total ram usage:        3 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 3
  3033 ;; This function calls:
  3034 ;;		_map
  3035 ;;		_set_pwm
  3036 ;; This function is called by:
  3037 ;;		_isr
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           
  3042                           ;psect for function _servo_write
  3043  0179                     _servo_write:
  3044                           
  3045                           ;incstack = 0
  3046                           ; Regs used in _servo_write: [wreg+status,2+status,0+pclath+cstack]
  3047                           ;servo_write@ch stored from wreg
  3048  0179  0020               	movlb	0	; select bank0
  3049  017A  00AC               	movwf	servo_write@ch
  3050  017B                     i1l1350:
  3051                           
  3052                           ;PCA9685.c: 104: ang = map(ang, 0, 180, 150, 500);
  3053  017B  082B               	movf	servo_write@ang+1,w
  3054  017C  00A1               	movwf	map@x+1
  3055  017D  082A               	movf	servo_write@ang,w
  3056  017E  00A0               	movwf	map@x
  3057  017F  3000               	movlw	0
  3058  0180  00A2               	movwf	map@in_min
  3059  0181  00A3               	movwf	map@in_min+1
  3060  0182  30B4               	movlw	180
  3061  0183  00A4               	movwf	map@in_max
  3062  0184  3000               	movlw	0
  3063  0185  00A5               	movwf	map@in_max+1
  3064  0186  3096               	movlw	150
  3065  0187  00A6               	movwf	map@out_min
  3066  0188  3000               	movlw	0
  3067  0189  00A7               	movwf	map@out_min+1
  3068  018A  30F4               	movlw	244
  3069  018B  00A8               	movwf	map@out_max
  3070  018C  3001               	movlw	1
  3071  018D  00A9               	movwf	map@out_max+1
  3072  018E  3181  21CA  3181   	fcall	_map
  3073  0191  0020               	movlb	0	; select bank0
  3074  0192  0821               	movf	?_map+1,w
  3075  0193  00AB               	movwf	servo_write@ang+1
  3076  0194  0820               	movf	?_map,w
  3077  0195  00AA               	movwf	servo_write@ang
  3078                           
  3079                           ;PCA9685.c: 105: set_pwm(ch, 0, ang);
  3080  0196  3000               	movlw	0
  3081  0197  00F1               	movwf	set_pwm@on
  3082  0198  00F2               	movwf	set_pwm@on+1
  3083  0199  082B               	movf	servo_write@ang+1,w
  3084  019A  00F4               	movwf	set_pwm@off+1
  3085  019B  082A               	movf	servo_write@ang,w
  3086  019C  00F3               	movwf	set_pwm@off
  3087  019D  082C               	movf	servo_write@ch,w
  3088  019E  3181  21A2  3181   	fcall	_set_pwm
  3089  01A1                     i1l224:
  3090  01A1  0008               	return
  3091  01A2                     __end_of_servo_write:
  3092                           
  3093                           	psect	text18
  3094  01A2                     __ptext18:	
  3095 ;; *************** function _set_pwm *****************
  3096 ;; Defined at:
  3097 ;;		line 62 in file "PCA9685.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  num             1    wreg     unsigned char 
  3100 ;;  on              2    1[COMMON] unsigned int 
  3101 ;;  off             2    3[COMMON] unsigned int 
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  num             1    6[COMMON] unsigned char 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  1    wreg      void 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, pclath, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3116 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3117 ;;Total ram usage:        6 bytes
  3118 ;; Hardware stack levels used: 1
  3119 ;; Hardware stack levels required when called: 2
  3120 ;; This function calls:
  3121 ;;		i1_i2c_start
  3122 ;;		i1_i2c_stop
  3123 ;;		i1_i2c_write
  3124 ;; This function is called by:
  3125 ;;		_servo_write
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           
  3130                           ;psect for function _set_pwm
  3131  01A2                     _set_pwm:
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _set_pwm: [wreg+status,2+status,0+pclath+cstack]
  3135                           ;set_pwm@num stored from wreg
  3136  01A2  00F6               	movwf	set_pwm@num
  3137  01A3                     i1l1278:
  3138                           
  3139                           ;PCA9685.c: 63: i2c_start();
  3140  01A3  3183  2302  3181   	fcall	i1_i2c_start
  3141                           
  3142                           ;PCA9685.c: 64: i2c_write(0x80);
  3143  01A6  3080               	movlw	128
  3144  01A7  3182  22BC  3181   	fcall	i1_i2c_write
  3145                           
  3146                           ;PCA9685.c: 65: i2c_write(0x06 + 4 * num);
  3147  01AA  0876               	movf	set_pwm@num,w
  3148  01AB  00F5               	movwf	??_set_pwm
  3149  01AC  3001               	movlw	1
  3150  01AD                     u66_25:
  3151  01AD  35F5               	lslf	??_set_pwm,f
  3152  01AE  3EFF               	addlw	-1
  3153  01AF  1D03               	skipz
  3154  01B0  29AD               	goto	u66_25
  3155  01B1  3575               	lslf	??_set_pwm,w
  3156  01B2  3E06               	addlw	6
  3157  01B3  3182  22BC  3181   	fcall	i1_i2c_write
  3158                           
  3159                           ;PCA9685.c: 66: i2c_write(on);
  3160  01B6  0871               	movf	set_pwm@on,w
  3161  01B7  3182  22BC  3181   	fcall	i1_i2c_write
  3162                           
  3163                           ;PCA9685.c: 67: i2c_write(on >> 8);
  3164  01BA  0872               	movf	set_pwm@on+1,w
  3165  01BB  3182  22BC  3181   	fcall	i1_i2c_write
  3166                           
  3167                           ;PCA9685.c: 68: i2c_write(off);
  3168  01BE  0873               	movf	set_pwm@off,w
  3169  01BF  3182  22BC  3181   	fcall	i1_i2c_write
  3170                           
  3171                           ;PCA9685.c: 69: i2c_write(off >> 8);
  3172  01C2  0874               	movf	set_pwm@off+1,w
  3173  01C3  3182  22BC  3181   	fcall	i1_i2c_write
  3174  01C6                     i1l1280:
  3175                           
  3176                           ;PCA9685.c: 70: i2c_stop();
  3177  01C6  3183  2323  3181   	fcall	i1_i2c_stop
  3178  01C9                     i1l215:
  3179  01C9  0008               	return
  3180  01CA                     __end_of_set_pwm:
  3181                           
  3182                           	psect	text19
  3183  02BC                     __ptext19:	
  3184 ;; *************** function i1_i2c_write *****************
  3185 ;; Defined at:
  3186 ;;		line 25 in file "i2c.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  data            1    wreg     unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  data            1    0[COMMON] unsigned char 
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg, status,2, status,0, pclath, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3201 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3203 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3204 ;;Total ram usage:        1 bytes
  3205 ;; Hardware stack levels used: 1
  3206 ;; Hardware stack levels required when called: 1
  3207 ;; This function calls:
  3208 ;;		i1_i2c_wait
  3209 ;; This function is called by:
  3210 ;;		_set_pwm
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           
  3215                           ;psect for function i1_i2c_write
  3216  02BC                     i1_i2c_write:
  3217                           
  3218                           ;incstack = 0
  3219                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3220                           ;i1i2c_write@data stored from wreg
  3221  02BC  00F0               	movwf	i1i2c_write@data
  3222  02BD                     i1l1214:
  3223                           
  3224                           ;i2c.c: 26: SSPBUF = data;
  3225  02BD  0870               	movf	i1i2c_write@data,w
  3226  02BE  0024               	movlb	4	; select bank4
  3227  02BF  0091               	movwf	17	;volatile
  3228  02C0                     i1l179:	
  3229                           ;i2c.c: 27: while(SSPSTATbits.BF);
  3230                           
  3231  02C0  1814               	btfsc	20,0	;volatile
  3232  02C1  2AC3               	goto	u57_21
  3233  02C2  2AC4               	goto	u57_20
  3234  02C3                     u57_21:
  3235  02C3  2AC0               	goto	i1l179
  3236  02C4                     u57_20:
  3237  02C4                     i1l182:
  3238  02C4  1B16               	btfsc	22,6	;volatile
  3239  02C5  2AC7               	goto	u58_21
  3240  02C6  2AC8               	goto	u58_20
  3241  02C7                     u58_21:
  3242  02C7  2AC4               	goto	i1l182
  3243  02C8                     u58_20:
  3244  02C8                     i1l1216:
  3245                           
  3246                           ;i2c.c: 29: i2c_wait();
  3247  02C8  3182  22D8  3182   	fcall	i1_i2c_wait
  3248  02CB                     i1l185:
  3249  02CB  0008               	return
  3250  02CC                     __end_ofi1_i2c_write:
  3251                           
  3252                           	psect	text20
  3253  0323                     __ptext20:	
  3254 ;; *************** function i1_i2c_stop *****************
  3255 ;; Defined at:
  3256 ;;		line 14 in file "i2c.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		None
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_set_pwm
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function i1_i2c_stop
  3285  0323                     i1_i2c_stop:
  3286  0323                     i1l1212:	
  3287                           ;incstack = 0
  3288                           ; Regs used in i1_i2c_stop: []
  3289                           
  3290                           
  3291                           ;i2c.c: 15: SSPCON2bits.PEN = 1;
  3292  0323  0024               	movlb	4	; select bank4
  3293  0324  1516               	bsf	22,2	;volatile
  3294  0325                     i1l167:	
  3295                           ;i2c.c: 16: while(SSPCON2bits.PEN);
  3296                           
  3297  0325  1916               	btfsc	22,2	;volatile
  3298  0326  2B28               	goto	u56_21
  3299  0327  2B29               	goto	u56_20
  3300  0328                     u56_21:
  3301  0328  2B25               	goto	i1l167
  3302  0329                     u56_20:
  3303  0329                     i1l170:
  3304  0329  0008               	return
  3305  032A                     __end_ofi1_i2c_stop:
  3306                           
  3307                           	psect	text21
  3308  0302                     __ptext21:	
  3309 ;; *************** function i1_i2c_start *****************
  3310 ;; Defined at:
  3311 ;;		line 8 in file "i2c.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 1
  3332 ;; This function calls:
  3333 ;;		i1_i2c_wait
  3334 ;; This function is called by:
  3335 ;;		_set_pwm
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function i1_i2c_start
  3341  0302                     i1_i2c_start:
  3342  0302                     i1l1208:	
  3343                           ;incstack = 0
  3344                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3345                           
  3346                           
  3347                           ;i2c.c: 9: i2c_wait();
  3348  0302  3182  22D8  3183   	fcall	i1_i2c_wait
  3349  0305                     i1l1210:
  3350                           
  3351                           ;i2c.c: 10: SSPCON2bits.SEN = 1;
  3352  0305  0024               	movlb	4	; select bank4
  3353  0306  1416               	bsf	22,0	;volatile
  3354  0307                     i1l161:	
  3355                           ;i2c.c: 11: while(SSPCON2bits.SEN);
  3356                           
  3357  0307  1816               	btfsc	22,0	;volatile
  3358  0308  2B0A               	goto	u55_21
  3359  0309  2B0B               	goto	u55_20
  3360  030A                     u55_21:
  3361  030A  2B07               	goto	i1l161
  3362  030B                     u55_20:
  3363  030B                     i1l164:
  3364  030B  0008               	return
  3365  030C                     __end_ofi1_i2c_start:
  3366                           
  3367                           	psect	text22
  3368  02D8                     __ptext22:	
  3369 ;; *************** function i1_i2c_wait *****************
  3370 ;; Defined at:
  3371 ;;		line 4 in file "i2c.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;		None
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;		None
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3389 ;;Total ram usage:        0 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		i1_i2c_start
  3395 ;;		i1_i2c_write
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           
  3400                           ;psect for function i1_i2c_wait
  3401  02D8                     i1_i2c_wait:
  3402  02D8                     i1l1160:	
  3403                           ;incstack = 0
  3404                           ; Regs used in i1_i2c_wait: [wreg+status,2]
  3405                           
  3406  02D8                     i1l1162:	
  3407                           ;i2c.c: 5: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  3408                           
  3409  02D8  0024               	movlb	4	; select bank4
  3410  02D9  0816               	movf	22,w	;volatile
  3411  02DA  391F               	andlw	31
  3412  02DB  1D03               	btfss	3,2
  3413  02DC  2ADE               	goto	u43_21
  3414  02DD  2ADF               	goto	u43_20
  3415  02DE                     u43_21:
  3416  02DE  2AD8               	goto	i1l1162
  3417  02DF                     u43_20:
  3418  02DF                     i1l1164:
  3419  02DF  1914               	btfsc	20,2	;volatile
  3420  02E0  2AE2               	goto	u44_21
  3421  02E1  2AE3               	goto	u44_20
  3422  02E2                     u44_21:
  3423  02E2  2AD8               	goto	i1l1162
  3424  02E3                     u44_20:
  3425  02E3                     i1l158:
  3426  02E3  0008               	return
  3427  02E4                     __end_ofi1_i2c_wait:
  3428                           
  3429                           	psect	text23
  3430  01CA                     __ptext23:	
  3431 ;; *************** function _map *****************
  3432 ;; Defined at:
  3433 ;;		line 94 in file "PCA9685.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;  x               2    0[BANK0 ] unsigned int 
  3436 ;;  in_min          2    2[BANK0 ] unsigned int 
  3437 ;;  in_max          2    4[BANK0 ] unsigned int 
  3438 ;;  out_min         2    6[BANK0 ] unsigned int 
  3439 ;;  out_max         2    8[BANK0 ] unsigned int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  2    0[BANK0 ] unsigned int 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, pclath, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3451 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3454 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3455 ;;Total ram usage:       10 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 1
  3458 ;; This function calls:
  3459 ;;		___wmul
  3460 ;;		i1___lwdiv
  3461 ;; This function is called by:
  3462 ;;		_servo_write
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           
  3467                           ;psect for function _map
  3468  01CA                     _map:
  3469  01CA                     i1l1282:	
  3470                           ;incstack = 0
  3471                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3472                           
  3473                           
  3474                           ;PCA9685.c: 95: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3475  01CA  0020               	movlb	0	; select bank0
  3476  01CB  0822               	movf	map@in_min,w
  3477  01CC  0224               	subwf	map@in_max,w
  3478  01CD  00F6               	movwf	i1___lwdiv@divisor
  3479  01CE  0823               	movf	map@in_min+1,w
  3480  01CF  3B25               	subwfb	map@in_max+1,w
  3481  01D0  00F7               	movwf	i1___lwdiv@divisor+1
  3482  01D1  0822               	movf	map@in_min,w
  3483  01D2  0220               	subwf	map@x,w
  3484  01D3  00F0               	movwf	___wmul@multiplier
  3485  01D4  0823               	movf	map@in_min+1,w
  3486  01D5  3B21               	subwfb	map@x+1,w
  3487  01D6  00F1               	movwf	___wmul@multiplier+1
  3488  01D7  0826               	movf	map@out_min,w
  3489  01D8  0228               	subwf	map@out_max,w
  3490  01D9  00F2               	movwf	___wmul@multiplicand
  3491  01DA  0827               	movf	map@out_min+1,w
  3492  01DB  3B29               	subwfb	map@out_max+1,w
  3493  01DC  00F3               	movwf	___wmul@multiplicand+1
  3494  01DD  3182  2212  3181   	fcall	___wmul
  3495  01E0  0871               	movf	?___wmul+1,w
  3496  01E1  00F9               	movwf	i1___lwdiv@dividend+1
  3497  01E2  0870               	movf	?___wmul,w
  3498  01E3  00F8               	movwf	i1___lwdiv@dividend
  3499  01E4  3181  213D  3181   	fcall	i1___lwdiv
  3500  01E7  0020               	movlb	0	; select bank0
  3501  01E8  0826               	movf	map@out_min,w
  3502  01E9  0776               	addwf	?i1___lwdiv,w
  3503  01EA  00A0               	movwf	?_map
  3504  01EB  0827               	movf	map@out_min+1,w
  3505  01EC  3D77               	addwfc	?i1___lwdiv+1,w
  3506  01ED  00A1               	movwf	?_map+1
  3507  01EE                     i1l221:
  3508  01EE  0008               	return
  3509  01EF                     __end_of_map:
  3510                           
  3511                           	psect	text24
  3512  013D                     __ptext24:	
  3513 ;; *************** function i1___lwdiv *****************
  3514 ;; Defined at:
  3515 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  divisor         2    6[COMMON] unsigned int 
  3518 ;;  dividend        2    8[COMMON] unsigned int 
  3519 ;; Auto vars:     Size  Location     Type
  3520 ;;  quotient        2   11[COMMON] unsigned int 
  3521 ;;  counter         1   13[COMMON] unsigned char 
  3522 ;; Return value:  Size  Location     Type
  3523 ;;                  2    6[COMMON] unsigned int 
  3524 ;; Registers used:
  3525 ;;		wreg, status,2, status,0
  3526 ;; Tracked objects:
  3527 ;;		On entry : 0/0
  3528 ;;		On exit  : 0/0
  3529 ;;		Unchanged: 0/0
  3530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3532 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3533 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3534 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3535 ;;Total ram usage:        8 bytes
  3536 ;; Hardware stack levels used: 1
  3537 ;; This function calls:
  3538 ;;		Nothing
  3539 ;; This function is called by:
  3540 ;;		_map
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           
  3545                           ;psect for function i1___lwdiv
  3546  013D                     i1___lwdiv:
  3547  013D                     i1l1218:	
  3548                           ;incstack = 0
  3549                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  3550                           
  3551  013D  01FB               	clrf	i1___lwdiv@quotient
  3552  013E  01FC               	clrf	i1___lwdiv@quotient+1
  3553  013F                     i1l1220:
  3554  013F  0876               	movf	i1___lwdiv@divisor,w
  3555  0140  0477               	iorwf	i1___lwdiv@divisor+1,w
  3556  0141  1903               	btfsc	3,2
  3557  0142  2944               	goto	u59_21
  3558  0143  2945               	goto	u59_20
  3559  0144                     u59_21:
  3560  0144  2974               	goto	i1l1240
  3561  0145                     u59_20:
  3562  0145                     i1l1222:
  3563  0145  01FD               	clrf	i1___lwdiv@counter
  3564  0146  0AFD               	incf	i1___lwdiv@counter,f
  3565  0147  2951               	goto	i1l1228
  3566  0148                     i1l1224:
  3567  0148  3001               	movlw	1
  3568  0149                     u60_25:
  3569  0149  35F6               	lslf	i1___lwdiv@divisor,f
  3570  014A  0DF7               	rlf	i1___lwdiv@divisor+1,f
  3571  014B  0B89               	decfsz	9,f
  3572  014C  2949               	goto	u60_25
  3573  014D                     i1l1226:
  3574  014D  3001               	movlw	1
  3575  014E  00FA               	movwf	??i1___lwdiv
  3576  014F  087A               	movf	??i1___lwdiv,w
  3577  0150  07FD               	addwf	i1___lwdiv@counter,f
  3578  0151                     i1l1228:
  3579  0151  1FF7               	btfss	i1___lwdiv@divisor+1,7
  3580  0152  2954               	goto	u61_21
  3581  0153  2955               	goto	u61_20
  3582  0154                     u61_21:
  3583  0154  2948               	goto	i1l1224
  3584  0155                     u61_20:
  3585  0155                     i1l1230:
  3586  0155  3001               	movlw	1
  3587  0156                     u62_25:
  3588  0156  35FB               	lslf	i1___lwdiv@quotient,f
  3589  0157  0DFC               	rlf	i1___lwdiv@quotient+1,f
  3590  0158  0B89               	decfsz	9,f
  3591  0159  2956               	goto	u62_25
  3592  015A  0877               	movf	i1___lwdiv@divisor+1,w
  3593  015B  0279               	subwf	i1___lwdiv@dividend+1,w
  3594  015C  1D03               	skipz
  3595  015D  2960               	goto	u63_25
  3596  015E  0876               	movf	i1___lwdiv@divisor,w
  3597  015F  0278               	subwf	i1___lwdiv@dividend,w
  3598  0160                     u63_25:
  3599  0160  1C03               	skipc
  3600  0161  2963               	goto	u63_21
  3601  0162  2964               	goto	u63_20
  3602  0163                     u63_21:
  3603  0163  2969               	goto	i1l1236
  3604  0164                     u63_20:
  3605  0164                     i1l1232:
  3606  0164  0876               	movf	i1___lwdiv@divisor,w
  3607  0165  02F8               	subwf	i1___lwdiv@dividend,f
  3608  0166  0877               	movf	i1___lwdiv@divisor+1,w
  3609  0167  3BF9               	subwfb	i1___lwdiv@dividend+1,f
  3610  0168                     i1l1234:
  3611  0168  147B               	bsf	i1___lwdiv@quotient,0
  3612  0169                     i1l1236:
  3613  0169  3001               	movlw	1
  3614  016A                     u64_25:
  3615  016A  36F7               	lsrf	i1___lwdiv@divisor+1,f
  3616  016B  0CF6               	rrf	i1___lwdiv@divisor,f
  3617  016C  0B89               	decfsz	9,f
  3618  016D  296A               	goto	u64_25
  3619  016E                     i1l1238:
  3620  016E  3001               	movlw	1
  3621  016F  02FD               	subwf	i1___lwdiv@counter,f
  3622  0170  1D03               	btfss	3,2
  3623  0171  2973               	goto	u65_21
  3624  0172  2974               	goto	u65_20
  3625  0173                     u65_21:
  3626  0173  2955               	goto	i1l1230
  3627  0174                     u65_20:
  3628  0174                     i1l1240:
  3629  0174  087C               	movf	i1___lwdiv@quotient+1,w
  3630  0175  00F7               	movwf	?i1___lwdiv+1
  3631  0176  087B               	movf	i1___lwdiv@quotient,w
  3632  0177  00F6               	movwf	?i1___lwdiv
  3633  0178                     i1l646:
  3634  0178  0008               	return
  3635  0179                     __end_ofi1___lwdiv:
  3636                           
  3637                           	psect	text25
  3638  0212                     __ptext25:	
  3639 ;; *************** function ___wmul *****************
  3640 ;; Defined at:
  3641 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  multiplier      2    0[COMMON] unsigned int 
  3644 ;;  multiplicand    2    2[COMMON] unsigned int 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;  product         2    4[COMMON] unsigned int 
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  2    0[COMMON] unsigned int 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3656 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3659 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3660 ;;Total ram usage:        6 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_map
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           
  3670                           ;psect for function ___wmul
  3671  0212                     ___wmul:
  3672  0212                     i1l1194:	
  3673                           ;incstack = 0
  3674                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3675                           
  3676  0212  01F4               	clrf	___wmul@product
  3677  0213  01F5               	clrf	___wmul@product+1
  3678  0214                     i1l1196:
  3679  0214  1C70               	btfss	___wmul@multiplier,0
  3680  0215  2A17               	goto	u51_21
  3681  0216  2A18               	goto	u51_20
  3682  0217                     u51_21:
  3683  0217  2A1C               	goto	i1l374
  3684  0218                     u51_20:
  3685  0218                     i1l1198:
  3686  0218  0872               	movf	___wmul@multiplicand,w
  3687  0219  07F4               	addwf	___wmul@product,f
  3688  021A  0873               	movf	___wmul@multiplicand+1,w
  3689  021B  3DF5               	addwfc	___wmul@product+1,f
  3690  021C                     i1l374:
  3691  021C  3001               	movlw	1
  3692  021D                     u52_25:
  3693  021D  35F2               	lslf	___wmul@multiplicand,f
  3694  021E  0DF3               	rlf	___wmul@multiplicand+1,f
  3695  021F  0B89               	decfsz	9,f
  3696  0220  2A1D               	goto	u52_25
  3697  0221                     i1l1200:
  3698  0221  3001               	movlw	1
  3699  0222                     u53_25:
  3700  0222  36F1               	lsrf	___wmul@multiplier+1,f
  3701  0223  0CF0               	rrf	___wmul@multiplier,f
  3702  0224  0B89               	decfsz	9,f
  3703  0225  2A22               	goto	u53_25
  3704  0226                     i1l1202:
  3705  0226  0870               	movf	___wmul@multiplier,w
  3706  0227  0471               	iorwf	___wmul@multiplier+1,w
  3707  0228  1D03               	btfss	3,2
  3708  0229  2A2B               	goto	u54_21
  3709  022A  2A2C               	goto	u54_20
  3710  022B                     u54_21:
  3711  022B  2A14               	goto	i1l1196
  3712  022C                     u54_20:
  3713  022C                     i1l1204:
  3714  022C  0875               	movf	___wmul@product+1,w
  3715  022D  00F1               	movwf	?___wmul+1
  3716  022E  0874               	movf	___wmul@product,w
  3717  022F  00F0               	movwf	?___wmul
  3718  0230                     i1l376:
  3719  0230  0008               	return
  3720  0231                     __end_of___wmul:
  3721                           
  3722                           	psect	text26
  3723  030C                     __ptext26:	
  3724 ;; *************** function _send *****************
  3725 ;; Defined at:
  3726 ;;		line 73 in file "main.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;  data            1    wreg     unsigned char 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  data            1    0[COMMON] unsigned char 
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3744 ;;Total ram usage:        1 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; This function calls:
  3747 ;;		Nothing
  3748 ;; This function is called by:
  3749 ;;		_isr
  3750 ;; This function uses a non-reentrant model
  3751 ;;
  3752                           
  3753                           
  3754                           ;psect for function _send
  3755  030C                     _send:
  3756                           
  3757                           ;incstack = 0
  3758                           ; Regs used in _send: [wreg]
  3759                           ;send@data stored from wreg
  3760  030C  00F0               	movwf	send@data
  3761  030D                     i1l1340:
  3762  030D                     i1l120:	
  3763                           ;main.c: 74: while(!TXSTAbits.TRMT);
  3764                           
  3765  030D  0023               	movlb	3	; select bank3
  3766  030E  1C9E               	btfss	30,1	;volatile
  3767  030F  2B11               	goto	u74_21
  3768  0310  2B12               	goto	u74_20
  3769  0311                     u74_21:
  3770  0311  2B0D               	goto	i1l120
  3771  0312                     u74_20:
  3772  0312                     i1l1342:
  3773                           
  3774                           ;main.c: 75: TXREG = data;
  3775  0312  0870               	movf	send@data,w
  3776  0313  009A               	movwf	26	;volatile
  3777  0314                     i1l123:
  3778  0314  0008               	return
  3779  0315                     __end_of_send:
  3780                           
  3781                           	psect	text27
  3782  0267                     __ptext27:	
  3783 ;; *************** function _recieve_ang *****************
  3784 ;; Defined at:
  3785 ;;		line 85 in file "main.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  data            1    wreg     unsigned char 
  3788 ;;  ch              1    0[COMMON] PTR unsigned char 
  3789 ;;		 -> isr@ch(1), 
  3790 ;;  ang             1    1[COMMON] PTR unsigned char 
  3791 ;;		 -> isr@ang(1), 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  data            1    3[COMMON] unsigned char 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3807 ;;Total ram usage:        4 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_isr
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           
  3817                           ;psect for function _recieve_ang
  3818  0267                     _recieve_ang:
  3819                           
  3820                           ;incstack = 0
  3821                           ; Regs used in _recieve_ang: [wreg+fsr1l+fsr1h+status,2+status,0]
  3822                           ;recieve_ang@data stored from wreg
  3823  0267  00F3               	movwf	recieve_ang@data
  3824  0268                     i1l1344:
  3825                           
  3826                           ;main.c: 86: const uint8_t mask = 0x80;;main.c: 88: (*ch) = (mask & data) ? 1 : 0;
  3827  0268  1BF3               	btfsc	recieve_ang@data,7
  3828  0269  2A6B               	goto	u75_21
  3829  026A  2A6D               	goto	u75_20
  3830  026B                     u75_21:
  3831  026B  3001               	movlw	1
  3832  026C  2A6E               	goto	u76_20
  3833  026D                     u75_20:
  3834  026D  3000               	movlw	0
  3835  026E                     u76_20:
  3836  026E  00F2               	movwf	??_recieve_ang
  3837  026F  0870               	movf	recieve_ang@ch,w
  3838  0270  0086               	movwf	6
  3839  0271  0187               	clrf	7
  3840  0272  0872               	movf	??_recieve_ang,w
  3841  0273  0081               	movwf	1
  3842  0274                     i1l1346:
  3843                           
  3844                           ;main.c: 90: data = data & ~mask;
  3845  0274  0873               	movf	recieve_ang@data,w
  3846  0275  397F               	andlw	127
  3847  0276  00F2               	movwf	??_recieve_ang
  3848  0277  0872               	movf	??_recieve_ang,w
  3849  0278  00F3               	movwf	recieve_ang@data
  3850  0279                     i1l1348:
  3851                           
  3852                           ;main.c: 91: (*ang) = data * 2;
  3853  0279  3573               	lslf	recieve_ang@data,w
  3854  027A  00F2               	movwf	??_recieve_ang
  3855  027B  0871               	movf	recieve_ang@ang,w
  3856  027C  0086               	movwf	6
  3857  027D  0187               	clrf	7
  3858  027E  0872               	movf	??_recieve_ang,w
  3859  027F  0081               	movwf	1
  3860  0280                     i1l128:
  3861  0280  0008               	return
  3862  0281                     __end_of_recieve_ang:
  3863  007E                     btemp	set	126	;btemp
  3864  007E                     int$flags	set	126
  3865  007E                     wtemp0	set	126
  3866                           
  3867                           	psect	config
  3868                           
  3869                           ;Config register CONFIG1 @ 0x8007
  3870                           ;	Oscillator Selection
  3871                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3872                           ;	Watchdog Timer Enable
  3873                           ;	WDTE = OFF, WDT disabled
  3874                           ;	Power-up Timer Enable
  3875                           ;	PWRTE = OFF, PWRT disabled
  3876                           ;	MCLR Pin Function Select
  3877                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3878                           ;	Flash Program Memory Code Protection
  3879                           ;	CP = OFF, Program memory code protection is disabled
  3880                           ;	Data Memory Code Protection
  3881                           ;	CPD = OFF, Data memory code protection is disabled
  3882                           ;	Brown-out Reset Enable
  3883                           ;	BOREN = ON, Brown-out Reset enabled
  3884                           ;	Clock Out Enable
  3885                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3886                           ;	Internal/External Switchover
  3887                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3888                           ;	Fail-Safe Clock Monitor Enable
  3889                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3890  8007                     	org	32775
  3891  8007  3FE4               	dw	16356
  3892                           
  3893                           ;Config register CONFIG2 @ 0x8008
  3894                           ;	Flash Memory Self-Write Protection
  3895                           ;	WRT = OFF, Write protection off
  3896                           ;	Voltage Regulator Capacitor Enable
  3897                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3898                           ;	PLL Enable
  3899                           ;	PLLEN = OFF, 4x PLL disabled
  3900                           ;	Stack Overflow/Underflow Reset Enable
  3901                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3902                           ;	Brown-out Reset Voltage Selection
  3903                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3904                           ;	Low-Voltage Programming Enable
  3905                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3906  8008                     	org	32776
  3907  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      37
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    recieve_ang@ang	PTR unsigned char  size(1) Largest target is 1
		 -> isr@ang(BANK0[1]), 

    recieve_ang@ch	PTR unsigned char  size(1) Largest target is 1
		 -> isr@ch(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _set_pwm->i1_i2c_write
    _map->i1___lwdiv
    i1___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_set_pwm_freq
    _set_pwm_freq->___lwdiv
    __write->_i2c_write
    __read->_i2c_read
    _init->_i2c_write

Critical Paths under _isr in BANK0

    _isr->_servo_write
    _servo_write->_map

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1176
                                             34 BANK0      2     2      0
                  _SYSTEM_Initialize
                               _init
                       _set_pwm_freq
 ---------------------------------------------------------------------------------
 (1) _set_pwm_freq                                         8     6      2    1154
                                             26 BANK0      8     6      2
                            ___lwdiv
                              __read
                             __write
 ---------------------------------------------------------------------------------
 (2) __write                                               2     1      1     370
                                             19 BANK0      2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     112
                                             21 BANK0      3     3      0
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                             18 BANK0      3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     414
                                             18 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      22
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                             18 BANK0      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0    1841
                                             13 BANK0      5     5      0
                        _recieve_ang
                               _send
                        _servo_write
 ---------------------------------------------------------------------------------
 (6) _servo_write                                          3     1      2    1419
                                             10 BANK0      3     1      2
                                _map
                            _set_pwm
 ---------------------------------------------------------------------------------
 (7) _set_pwm                                              6     2      4     284
                                              1 COMMON     6     2      4
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (8) i1_i2c_write                                          1     1      0      22
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (8) i1_i2c_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_i2c_start                                          0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (9) i1_i2c_wait                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _map                                                 10     0     10     992
                                              0 BANK0     10     0     10
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            8     4      4     214
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _send                                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _recieve_ang                                          4     2      2     263
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _init
     _i2c_start
       _i2c_wait
     _i2c_stop
     _i2c_write
       _i2c_wait
   _set_pwm_freq
     ___lwdiv
     __read
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
       _i2c_stop
       _i2c_write
     __write
       _i2c_start
       _i2c_stop
       _i2c_write

 _isr (ROOT)
   _recieve_ang
   _send
   _servo_write
     _map
       ___wmul
       i1___lwdiv
         ___wmul (ARG)
     _set_pwm
       i1_i2c_start
         i1_i2c_wait
       i1_i2c_stop
       i1_i2c_write
         i1_i2c_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      25       5       46.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      33      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      33      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jul 13 21:44:01 2021

        set_pwm_freq@prescaleval 003F                      _SSPSTATbits 0214                               l31 0266  
                             l51 0301                               l54 0322                               l57 032D  
            ___wmul@multiplicand 0072                              l114 00FD                              l115 00FD  
                            l212 02AA                              l206 0297                              l161 02F3  
                            l209 0211                              l170 031B                              l218 00AF  
                            l164 02F7                              l173 02E9                              l158 02D7  
                            l182 02B4                              l190 023E                              l167 0317  
                            l191 024B                              l176 02ED                              l185 02BB  
                            l179 02B0                              l188 023A                              l646 013C  
                            _GIE 005F                              u410 02D3                              u411 02D2  
                            u420 02D7                              u500 023E                              u421 02D6  
                            u501 023D                              u450 02F7                              u451 02F6  
                            u460 031B                              u461 031A                              u710 0128  
                            u470 02ED                              u711 0127                              u471 02EC  
                            u480 02B4                              u481 02B3                              u705 011A  
                            u490 02B8                              u730 0138                              u491 02B7  
                            u731 0137                              u715 0124                              u725 012E  
                            u670 0109                              u671 0108                              u817 00C7  
                            u690 0119                              u691 0118                              u827 00F4  
                            u685 010D                              u837 00A0                              _flg 0044  
                            _map 01CA                              _isr 0004                              wreg 0009  
                           l1300 0128                             l1302 012C                             l1312 02F8  
                           l1304 012D                             l1320 005C                             l1250 0256  
                           l1154 02CC                             l1170 0315                             l1314 0298  
                           l1306 0132                             l1330 0082                             l1322 006C  
                           l1260 031C                             l1252 0258                             l1244 024C  
                           l1156 02CC                             l1316 02A7                             l1308 0138  
                           l1180 0233                             l1172 02E4                             l1332 008A  
                           l1324 0070                             l1262 031F                             l1254 025A  
                           l1246 0251                             l1158 02D3                             l1166 02EE  
                           l1190 0249                             l1182 0239                             l1174 02E7  
                           l1270 0294                             l1334 0093                             l1326 0074  
                           l1318 0057                             l1264 0320                             l1256 025D  
                           l1248 0254                             l1168 02F1                             l1176 02AD  
                           l1184 023F                             l1272 01F1                             l1336 009C  
                           l1328 007C                             l1360 00B8                             l1352 00B0  
                           l1258 0262                             l1266 032A                             l1178 02B8  
                           l1290 0109                             l1186 0244                             l1274 020C  
                           l1338 00A5                             l1370 00C1                             l1362 00BA  
                           l1354 00B3                             l1292 010C                             l1188 0246  
                           l1268 0283                             l1380 00DF                             l1372 00CE  
                           l1364 00BD                             l1356 00B5                             l1294 0111  
                           l1286 0100                             l1390 00E9                             l1382 00E1  
                           l1374 00D1                             l1366 00BF                             l1358 00B6  
                           l1296 0115                             l1288 0103                             l1392 00EA  
                           l1384 00E3                             l1376 00D9                             l1368 00C0  
                           l1298 0119                             l1394 00EB                             l1386 00E5  
                           l1378 00DC                             l1396 00EE                             l1388 00E7  
                           l1398 00FB                             ?_map 0020                             ?_isr 0070  
                           _LATA 010C                             _LATB 010D                             _LATC 010E  
                           _LATE 0110                             _PEIE 005E                             _WPUB 020D  
                           _WPUE 0210                             _main 00B0                             _init 0298  
                           _send 030C                             fsr1h 0007                             indf1 0001  
                           fsr1l 0006                             map@x 0020                             btemp 007E  
                           start 004F                            ??_map 007E                            ??_isr 002D  
 __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 0323                            ?_main 0070  
                          ?_init 0070                            ?_send 0070                      i2c_read@ack 0033  
                __end_of___lwdiv 013D                            i1l120 030D                            i1l123 0314  
                          i1l140 004D                            i1l221 01EE                            i1l215 01C9  
                          i1l128 0280                            i1l224 01A1                            i1l161 0307  
                          i1l170 0329                            i1l164 030B                            i1l158 02E3  
                          i1l182 02C4                            i1l167 0325                            i1l185 02CB  
                          i1l179 02C0                            i1l374 021C                            i1l376 0230  
                          i1l646 0178                            _RCREG 0199                            _RCSTA 019D  
                          _SPBRG 019B                            u51_20 0218                            u43_20 02DF  
                          u51_21 0217                            u43_21 02DE                            u44_20 02E3  
                          u44_21 02E2                            u52_25 021D                            u60_25 0149  
                          u61_20 0155                            u61_21 0154                            u53_25 0222  
                          u54_20 022C                            u54_21 022B                            u62_25 0156  
                          u63_20 0164                            u55_20 030B                            u63_21 0163  
                          u55_21 030A                            u63_25 0160                            u56_20 0329  
                          u80_20 001F                    servo_write@ch 002C                            u56_21 0328  
                          u80_21 001E                            u64_25 016A                            u65_20 0174  
                          u57_20 02C4                            u65_21 0173                            u57_21 02C3  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISE 0090                            u74_20 0312                            u58_20 02C8  
                          u74_21 0311                            u58_21 02C7                            u66_25 01AD  
                          u75_20 026D                            u59_20 0145                            u75_21 026B  
                          u59_21 0144                            u76_20 026E                            u77_20 000B  
                          u77_21 000A                            u78_20 0011                            u78_21 0010  
                          u79_20 0015                            u79_21 0014                            _TXREG 019A  
                          _TXSTA 019E                            __read 01EF                   _WDT_Initialize 032A  
                    ?i1_i2c_wait 0070                      ?i1_i2c_stop 0070                            isr@ch 0030  
                __end_of_set_pwm 01CA                            status 0003                            wtemp0 007E  
             __size_ofi1___lwdiv 003C                     ?_recieve_ang 0070                  __initialization 0051  
                   __end_of_main 0100                     __end_of_init 02AB                     __end_of_send 0315  
               __end_of_i2c_read 024C                 __end_of_i2c_wait 02D8                 __end_of_i2c_stop 031C  
                         ??_main 0042                           ??_init 0033                           ??_send 0070  
         __end_of_WDT_Initialize 032E                           ?__read 0070                           _APFCON 011D  
                         _ANSELA 018C                           _ANSELB 018D                           _BORCON 0116  
                   i2c_read@data 0034                    recieve_ang@ch 0070                           i1l1200 0221  
                         i1l1202 0226                           i1l1210 0305                           i1l1204 022C  
                         i1l1220 013F                           i1l1212 0323                           i1l1230 0155  
                         i1l1222 0145                           i1l1214 02BD                           i1l1232 0164  
                         i1l1224 0148                           i1l1240 0174                           i1l1160 02D8  
                         i1l1208 0302                           i1l1216 02C8                           i1l1400 0006  
                         i1l1234 0168                           i1l1226 014D                           i1l1218 013D  
                         i1l1162 02D8                           i1l1410 0019                           i1l1402 000B  
                         i1l1340 030D                           i1l1236 0169                           i1l1228 0151  
                         i1l1164 02DF                           i1l1420 002A                           i1l1412 001F  
                         i1l1404 0011                           i1l1342 0312                           i1l1238 016E  
                         i1l1350 017B                           i1l1422 0030                           i1l1414 0022  
                         i1l1406 0015                           i1l1344 0268                           i1l1280 01C6  
                         i1l1424 0034                           i1l1416 0025                           i1l1408 0016  
                         i1l1346 0274                           i1l1194 0212                           i1l1282 01CA  
                         i1l1426 0041                           i1l1418 0027                           i1l1348 0279  
                         i1l1196 0214                           i1l1198 0218                           i1l1278 01A3  
                         _OSCCON 0099                           _WDTCON 0097                           _SSPADD 0212  
                         _SSPBUF 0211                   servo_write@ang 002A               __size_of_i2c_start 000A  
             __size_of_i2c_write 0011                           ___wmul 0212                        ??___lwdiv 0036  
                         __write 0281              __size_ofi1_i2c_wait 000C              __size_ofi1_i2c_stop 0007  
                   ?i1_i2c_start 0070                     ?i1_i2c_write 0070                           isr@ang 0031  
              __end_ofi1___lwdiv 0179               _i2c_repeated_start 02E4                  ?_WDT_Initialize 0070  
                      ??_set_pwm 0075                     ?_servo_write 002A              ?_i2c_repeated_start 0070  
              _SYSTEM_Initialize 02F8          __end_of__initialization 0053               ?_SYSTEM_Initialize 0070  
                 __pcstackCOMMON 0070              ??_SYSTEM_Initialize 0032                    __end_of__read 0212  
           ??_i2c_repeated_start 0032                __end_of_i2c_start 02F8                __end_of_i2c_write 02BC  
                 _OPTION_REGbits 0095                          ??__read 0035                       __read@addr 0036  
      __end_of_SYSTEM_Initialize 0302                       __read@data 0037                       __pbssBANK0 0044  
                      ?_i2c_read 0070                        ?_i2c_wait 0070                        ?_i2c_stop 0070  
                     __pmaintext 00B0             __size_of_recieve_ang 001A                          ?___wmul 0070  
                     __pintentry 0004                          ?__write 0033                          _BAUDCON 019F  
                 recieve_ang@ang 0071                          _OSCTUNE 0098                          _SSPCON1 0215  
                        _SSPCON2 0216                     ??i1_i2c_wait 0070                     ??i1_i2c_stop 0070  
                        _SSPSTAT 0214                       ??_i2c_read 0032                       ??_i2c_wait 0032  
                     ??_i2c_stop 0032                  __size_of___wmul 001F                          ___lwdiv 0100  
                __size_of__write 0017               __end_ofi1_i2c_wait 02E4               __end_ofi1_i2c_stop 032A  
                        __ptext1 0057                          __ptext2 0281                          __ptext3 01EF  
                        __ptext4 02E4                          __ptext5 0231                          __ptext6 0100  
                        __ptext7 0298                          __ptext8 02AB                          __ptext9 0315  
                  ?_set_pwm_freq 003A                i1___lwdiv@divisor 0076            _OSCILLATOR_Initialize 031C  
                   __size_of_map 0025                     __size_of_isr 004B                i1___lwdiv@counter 007D  
           __size_ofi1_i2c_start 000A             __size_ofi1_i2c_write 0010         ??_PIN_MANAGER_Initialize 0032  
                        _set_pwm 01A2       __size_of_SYSTEM_Initialize 000A             end_of_initialization 0053  
                        isr@data 002F             __size_of_servo_write 0029                        _RCSTAbits 019D  
               ??_WDT_Initialize 0032                   ??_set_pwm_freq 003C                    i2c_write@data 0032  
                      i1___lwdiv 013D                       map@out_max 0028                       map@out_min 0026  
                      _TXSTAbits 019E                   __end_of___wmul 0231                   __end_of__write 0298  
         ?_OSCILLATOR_Initialize 0070              start_initialization 0051  __size_of_PIN_MANAGER_Initialize 001B  
                      _i2c_start 02EE                      __end_of_map 01EF                      __end_of_isr 004F  
                      _i2c_write 02AB                       ?i1___lwdiv 0076                __size_of_i2c_read 001B  
              __size_of_i2c_wait 000C                __size_of_i2c_stop 0007                         ??___wmul 0074  
                       ??__write 0034      __size_of_i2c_repeated_start 000A             set_pwm_freq@prescale 003D  
                      ___latbits 0003                    __pcstackBANK0 0020                       ?_i2c_start 0070  
                     ?_i2c_write 0070                  i1i2c_write@data 0070             __end_of_set_pwm_freq 00B0  
                  ??_recieve_ang 0072                 ___lwdiv@dividend 0034           _PIN_MANAGER_Initialize 024C  
                       ?___lwdiv 0032                         ?_set_pwm 0071                   __size_of__read 0023  
               ___lwdiv@quotient 0037                      ??i1___lwdiv 007A                  recieve_ang@data 0073  
                recieve_ang@mask 032E                   ___wmul@product 0074                 set_pwm_freq@freq 003A  
                       _PIE1bits 0091                       set_pwm@off 0073                       set_pwm@num 0076  
                       _PIR1bits 0011              __end_of_recieve_ang 0281                        map@in_max 0024  
                      map@in_min 0022                    ??i1_i2c_start 0070                    ??i1_i2c_write 0070  
              ___wmul@multiplier 0070                      __write@addr 0034                      ??_i2c_start 0032  
                    ??_i2c_write 0032                    ??_servo_write 007E                         _i2c_read 0231  
                       _i2c_wait 02CC                         _i2c_stop 0315          ??_OSCILLATOR_Initialize 0032  
               __size_of___lwdiv 003D                  ___lwdiv@divisor 0032          __end_ofrecieve_ang@mask 032F  
            __end_ofi1_i2c_start 030C                  ___lwdiv@counter 0039              __end_ofi1_i2c_write 02CC  
                       __ptext10 02EE                         __ptext11 02CC                         __ptext20 0323  
                       __ptext12 02F8                         __ptext21 0302                         __ptext13 032A  
                       __ptext22 02D8                         __ptext14 024C                         __ptext23 01CA  
                       __ptext15 031C                         __ptext24 013D                         __ptext25 0212  
                       __ptext17 0179                         __ptext26 030C                         __ptext18 01A2  
                       __ptext27 0267                         __ptext19 02BC                 __size_of_set_pwm 0028  
          __size_of_set_pwm_freq 0059                         __write@d 0033               i1___lwdiv@dividend 0078  
                  __size_of_main 0050                    __size_of_init 0013                    __size_of_send 0009  
            __end_of_servo_write 01A2                        set_pwm@on 0071                      _recieve_ang 0267  
                       int$flags 007E               i1___lwdiv@quotient 007B                     _set_pwm_freq 0057  
             set_pwm_freq@oldreg 0041               set_pwm_freq@newreg 003E          __size_of_WDT_Initialize 0004  
                       intlevel1 0000                         send@data 0070          ?_PIN_MANAGER_Initialize 0070  
     __end_of_i2c_repeated_start 02EE                    __pstringtext1 032E                      i1_i2c_start 0302  
                    i1_i2c_write 02BC                      _SSPCON1bits 0215                      _SSPCON2bits 0216  
                     i1_i2c_wait 02D8                       i1_i2c_stop 0323                      _servo_write 0179  
 __end_of_PIN_MANAGER_Initialize 0267  
