

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jul 10 23:04:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1938
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.32
    41                           ; Generated 02/02/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1938 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  0110                     	;# 
   127  0111                     	;# 
   128  0112                     	;# 
   129  0113                     	;# 
   130  0114                     	;# 
   131  0115                     	;# 
   132  0116                     	;# 
   133  0117                     	;# 
   134  0118                     	;# 
   135  0119                     	;# 
   136  011A                     	;# 
   137  011B                     	;# 
   138  011D                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0191                     	;# 
   142  0191                     	;# 
   143  0192                     	;# 
   144  0193                     	;# 
   145  0193                     	;# 
   146  0193                     	;# 
   147  0194                     	;# 
   148  0195                     	;# 
   149  0196                     	;# 
   150  0199                     	;# 
   151  019A                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019C                     	;# 
   157  019C                     	;# 
   158  019D                     	;# 
   159  019E                     	;# 
   160  019F                     	;# 
   161  020D                     	;# 
   162  0210                     	;# 
   163  0211                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0217                     	;# 
   171  0291                     	;# 
   172  0291                     	;# 
   173  0292                     	;# 
   174  0293                     	;# 
   175  0294                     	;# 
   176  0295                     	;# 
   177  0295                     	;# 
   178  0296                     	;# 
   179  0298                     	;# 
   180  0298                     	;# 
   181  0299                     	;# 
   182  029A                     	;# 
   183  029B                     	;# 
   184  029C                     	;# 
   185  029C                     	;# 
   186  029D                     	;# 
   187  029E                     	;# 
   188  029F                     	;# 
   189  0311                     	;# 
   190  0311                     	;# 
   191  0312                     	;# 
   192  0313                     	;# 
   193  0314                     	;# 
   194  0315                     	;# 
   195  0315                     	;# 
   196  0316                     	;# 
   197  0318                     	;# 
   198  0318                     	;# 
   199  0319                     	;# 
   200  031A                     	;# 
   201  031C                     	;# 
   202  031C                     	;# 
   203  031D                     	;# 
   204  031E                     	;# 
   205  0394                     	;# 
   206  0395                     	;# 
   207  0396                     	;# 
   208  0415                     	;# 
   209  0416                     	;# 
   210  0417                     	;# 
   211  041C                     	;# 
   212  041D                     	;# 
   213  041E                     	;# 
   214  0791                     	;# 
   215  0792                     	;# 
   216  0793                     	;# 
   217  0794                     	;# 
   218  0795                     	;# 
   219  0798                     	;# 
   220  0799                     	;# 
   221  07A0                     	;# 
   222  07A1                     	;# 
   223  07A3                     	;# 
   224  07A4                     	;# 
   225  07A6                     	;# 
   226  07A7                     	;# 
   227  07A9                     	;# 
   228  07AA                     	;# 
   229  0FE4                     	;# 
   230  0FE5                     	;# 
   231  0FE6                     	;# 
   232  0FE7                     	;# 
   233  0FE8                     	;# 
   234  0FE9                     	;# 
   235  0FEA                     	;# 
   236  0FEB                     	;# 
   237  0FED                     	;# 
   238  0FEE                     	;# 
   239  0FEF                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  0090                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0095                     	;# 
   278  0096                     	;# 
   279  0097                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009A                     	;# 
   283  009B                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  0110                     	;# 
   292  0111                     	;# 
   293  0112                     	;# 
   294  0113                     	;# 
   295  0114                     	;# 
   296  0115                     	;# 
   297  0116                     	;# 
   298  0117                     	;# 
   299  0118                     	;# 
   300  0119                     	;# 
   301  011A                     	;# 
   302  011B                     	;# 
   303  011D                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0191                     	;# 
   307  0191                     	;# 
   308  0192                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0193                     	;# 
   312  0194                     	;# 
   313  0195                     	;# 
   314  0196                     	;# 
   315  0199                     	;# 
   316  019A                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  019C                     	;# 
   323  019D                     	;# 
   324  019E                     	;# 
   325  019F                     	;# 
   326  020D                     	;# 
   327  0210                     	;# 
   328  0211                     	;# 
   329  0212                     	;# 
   330  0213                     	;# 
   331  0214                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0217                     	;# 
   336  0291                     	;# 
   337  0291                     	;# 
   338  0292                     	;# 
   339  0293                     	;# 
   340  0294                     	;# 
   341  0295                     	;# 
   342  0295                     	;# 
   343  0296                     	;# 
   344  0298                     	;# 
   345  0298                     	;# 
   346  0299                     	;# 
   347  029A                     	;# 
   348  029B                     	;# 
   349  029C                     	;# 
   350  029C                     	;# 
   351  029D                     	;# 
   352  029E                     	;# 
   353  029F                     	;# 
   354  0311                     	;# 
   355  0311                     	;# 
   356  0312                     	;# 
   357  0313                     	;# 
   358  0314                     	;# 
   359  0315                     	;# 
   360  0315                     	;# 
   361  0316                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  031C                     	;# 
   367  031C                     	;# 
   368  031D                     	;# 
   369  031E                     	;# 
   370  0394                     	;# 
   371  0395                     	;# 
   372  0396                     	;# 
   373  0415                     	;# 
   374  0416                     	;# 
   375  0417                     	;# 
   376  041C                     	;# 
   377  041D                     	;# 
   378  041E                     	;# 
   379  0791                     	;# 
   380  0792                     	;# 
   381  0793                     	;# 
   382  0794                     	;# 
   383  0795                     	;# 
   384  0798                     	;# 
   385  0799                     	;# 
   386  07A0                     	;# 
   387  07A1                     	;# 
   388  07A3                     	;# 
   389  07A4                     	;# 
   390  07A6                     	;# 
   391  07A7                     	;# 
   392  07A9                     	;# 
   393  07AA                     	;# 
   394  0FE4                     	;# 
   395  0FE5                     	;# 
   396  0FE6                     	;# 
   397  0FE7                     	;# 
   398  0FE8                     	;# 
   399  0FE9                     	;# 
   400  0FEA                     	;# 
   401  0FEB                     	;# 
   402  0FED                     	;# 
   403  0FEE                     	;# 
   404  0FEF                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  0010                     	;# 
   421  0011                     	;# 
   422  0012                     	;# 
   423  0013                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009B                     	;# 
   450  009C                     	;# 
   451  009D                     	;# 
   452  009E                     	;# 
   453  010C                     	;# 
   454  010D                     	;# 
   455  010E                     	;# 
   456  0110                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0113                     	;# 
   460  0114                     	;# 
   461  0115                     	;# 
   462  0116                     	;# 
   463  0117                     	;# 
   464  0118                     	;# 
   465  0119                     	;# 
   466  011A                     	;# 
   467  011B                     	;# 
   468  011D                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0191                     	;# 
   472  0191                     	;# 
   473  0192                     	;# 
   474  0193                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0194                     	;# 
   478  0195                     	;# 
   479  0196                     	;# 
   480  0199                     	;# 
   481  019A                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019C                     	;# 
   487  019C                     	;# 
   488  019D                     	;# 
   489  019E                     	;# 
   490  019F                     	;# 
   491  020D                     	;# 
   492  0210                     	;# 
   493  0211                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0215                     	;# 
   498  0215                     	;# 
   499  0216                     	;# 
   500  0217                     	;# 
   501  0291                     	;# 
   502  0291                     	;# 
   503  0292                     	;# 
   504  0293                     	;# 
   505  0294                     	;# 
   506  0295                     	;# 
   507  0295                     	;# 
   508  0296                     	;# 
   509  0298                     	;# 
   510  0298                     	;# 
   511  0299                     	;# 
   512  029A                     	;# 
   513  029B                     	;# 
   514  029C                     	;# 
   515  029C                     	;# 
   516  029D                     	;# 
   517  029E                     	;# 
   518  029F                     	;# 
   519  0311                     	;# 
   520  0311                     	;# 
   521  0312                     	;# 
   522  0313                     	;# 
   523  0314                     	;# 
   524  0315                     	;# 
   525  0315                     	;# 
   526  0316                     	;# 
   527  0318                     	;# 
   528  0318                     	;# 
   529  0319                     	;# 
   530  031A                     	;# 
   531  031C                     	;# 
   532  031C                     	;# 
   533  031D                     	;# 
   534  031E                     	;# 
   535  0394                     	;# 
   536  0395                     	;# 
   537  0396                     	;# 
   538  0415                     	;# 
   539  0416                     	;# 
   540  0417                     	;# 
   541  041C                     	;# 
   542  041D                     	;# 
   543  041E                     	;# 
   544  0791                     	;# 
   545  0792                     	;# 
   546  0793                     	;# 
   547  0794                     	;# 
   548  0795                     	;# 
   549  0798                     	;# 
   550  0799                     	;# 
   551  07A0                     	;# 
   552  07A1                     	;# 
   553  07A3                     	;# 
   554  07A4                     	;# 
   555  07A6                     	;# 
   556  07A7                     	;# 
   557  07A9                     	;# 
   558  07AA                     	;# 
   559  0FE4                     	;# 
   560  0FE5                     	;# 
   561  0FE6                     	;# 
   562  0FE7                     	;# 
   563  0FE8                     	;# 
   564  0FE9                     	;# 
   565  0FEA                     	;# 
   566  0FEB                     	;# 
   567  0FED                     	;# 
   568  0FEE                     	;# 
   569  0FEF                     	;# 
   570  0000                     	;# 
   571  0001                     	;# 
   572  0002                     	;# 
   573  0003                     	;# 
   574  0004                     	;# 
   575  0005                     	;# 
   576  0006                     	;# 
   577  0007                     	;# 
   578  0008                     	;# 
   579  0009                     	;# 
   580  000A                     	;# 
   581  000B                     	;# 
   582  000C                     	;# 
   583  000D                     	;# 
   584  000E                     	;# 
   585  0010                     	;# 
   586  0011                     	;# 
   587  0012                     	;# 
   588  0013                     	;# 
   589  0015                     	;# 
   590  0016                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  0019                     	;# 
   595  001A                     	;# 
   596  001B                     	;# 
   597  001C                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  008C                     	;# 
   601  008D                     	;# 
   602  008E                     	;# 
   603  0090                     	;# 
   604  0091                     	;# 
   605  0092                     	;# 
   606  0093                     	;# 
   607  0095                     	;# 
   608  0096                     	;# 
   609  0097                     	;# 
   610  0098                     	;# 
   611  0099                     	;# 
   612  009A                     	;# 
   613  009B                     	;# 
   614  009B                     	;# 
   615  009C                     	;# 
   616  009D                     	;# 
   617  009E                     	;# 
   618  010C                     	;# 
   619  010D                     	;# 
   620  010E                     	;# 
   621  0110                     	;# 
   622  0111                     	;# 
   623  0112                     	;# 
   624  0113                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011A                     	;# 
   632  011B                     	;# 
   633  011D                     	;# 
   634  018C                     	;# 
   635  018D                     	;# 
   636  0191                     	;# 
   637  0191                     	;# 
   638  0192                     	;# 
   639  0193                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0194                     	;# 
   643  0195                     	;# 
   644  0196                     	;# 
   645  0199                     	;# 
   646  019A                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019C                     	;# 
   652  019C                     	;# 
   653  019D                     	;# 
   654  019E                     	;# 
   655  019F                     	;# 
   656  020D                     	;# 
   657  0210                     	;# 
   658  0211                     	;# 
   659  0212                     	;# 
   660  0213                     	;# 
   661  0214                     	;# 
   662  0215                     	;# 
   663  0215                     	;# 
   664  0216                     	;# 
   665  0217                     	;# 
   666  0291                     	;# 
   667  0291                     	;# 
   668  0292                     	;# 
   669  0293                     	;# 
   670  0294                     	;# 
   671  0295                     	;# 
   672  0295                     	;# 
   673  0296                     	;# 
   674  0298                     	;# 
   675  0298                     	;# 
   676  0299                     	;# 
   677  029A                     	;# 
   678  029B                     	;# 
   679  029C                     	;# 
   680  029C                     	;# 
   681  029D                     	;# 
   682  029E                     	;# 
   683  029F                     	;# 
   684  0311                     	;# 
   685  0311                     	;# 
   686  0312                     	;# 
   687  0313                     	;# 
   688  0314                     	;# 
   689  0315                     	;# 
   690  0315                     	;# 
   691  0316                     	;# 
   692  0318                     	;# 
   693  0318                     	;# 
   694  0319                     	;# 
   695  031A                     	;# 
   696  031C                     	;# 
   697  031C                     	;# 
   698  031D                     	;# 
   699  031E                     	;# 
   700  0394                     	;# 
   701  0395                     	;# 
   702  0396                     	;# 
   703  0415                     	;# 
   704  0416                     	;# 
   705  0417                     	;# 
   706  041C                     	;# 
   707  041D                     	;# 
   708  041E                     	;# 
   709  0791                     	;# 
   710  0792                     	;# 
   711  0793                     	;# 
   712  0794                     	;# 
   713  0795                     	;# 
   714  0798                     	;# 
   715  0799                     	;# 
   716  07A0                     	;# 
   717  07A1                     	;# 
   718  07A3                     	;# 
   719  07A4                     	;# 
   720  07A6                     	;# 
   721  07A7                     	;# 
   722  07A9                     	;# 
   723  07AA                     	;# 
   724  0FE4                     	;# 
   725  0FE5                     	;# 
   726  0FE6                     	;# 
   727  0FE7                     	;# 
   728  0FE8                     	;# 
   729  0FE9                     	;# 
   730  0FEA                     	;# 
   731  0FEB                     	;# 
   732  0FED                     	;# 
   733  0FEE                     	;# 
   734  0FEF                     	;# 
   735  0000                     	;# 
   736  0001                     	;# 
   737  0002                     	;# 
   738  0003                     	;# 
   739  0004                     	;# 
   740  0005                     	;# 
   741  0006                     	;# 
   742  0007                     	;# 
   743  0008                     	;# 
   744  0009                     	;# 
   745  000A                     	;# 
   746  000B                     	;# 
   747  000C                     	;# 
   748  000D                     	;# 
   749  000E                     	;# 
   750  0010                     	;# 
   751  0011                     	;# 
   752  0012                     	;# 
   753  0013                     	;# 
   754  0015                     	;# 
   755  0016                     	;# 
   756  0016                     	;# 
   757  0017                     	;# 
   758  0018                     	;# 
   759  0019                     	;# 
   760  001A                     	;# 
   761  001B                     	;# 
   762  001C                     	;# 
   763  001E                     	;# 
   764  001F                     	;# 
   765  008C                     	;# 
   766  008D                     	;# 
   767  008E                     	;# 
   768  0090                     	;# 
   769  0091                     	;# 
   770  0092                     	;# 
   771  0093                     	;# 
   772  0095                     	;# 
   773  0096                     	;# 
   774  0097                     	;# 
   775  0098                     	;# 
   776  0099                     	;# 
   777  009A                     	;# 
   778  009B                     	;# 
   779  009B                     	;# 
   780  009C                     	;# 
   781  009D                     	;# 
   782  009E                     	;# 
   783  010C                     	;# 
   784  010D                     	;# 
   785  010E                     	;# 
   786  0110                     	;# 
   787  0111                     	;# 
   788  0112                     	;# 
   789  0113                     	;# 
   790  0114                     	;# 
   791  0115                     	;# 
   792  0116                     	;# 
   793  0117                     	;# 
   794  0118                     	;# 
   795  0119                     	;# 
   796  011A                     	;# 
   797  011B                     	;# 
   798  011D                     	;# 
   799  018C                     	;# 
   800  018D                     	;# 
   801  0191                     	;# 
   802  0191                     	;# 
   803  0192                     	;# 
   804  0193                     	;# 
   805  0193                     	;# 
   806  0193                     	;# 
   807  0194                     	;# 
   808  0195                     	;# 
   809  0196                     	;# 
   810  0199                     	;# 
   811  019A                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019C                     	;# 
   817  019C                     	;# 
   818  019D                     	;# 
   819  019E                     	;# 
   820  019F                     	;# 
   821  020D                     	;# 
   822  0210                     	;# 
   823  0211                     	;# 
   824  0212                     	;# 
   825  0213                     	;# 
   826  0214                     	;# 
   827  0215                     	;# 
   828  0215                     	;# 
   829  0216                     	;# 
   830  0217                     	;# 
   831  0291                     	;# 
   832  0291                     	;# 
   833  0292                     	;# 
   834  0293                     	;# 
   835  0294                     	;# 
   836  0295                     	;# 
   837  0295                     	;# 
   838  0296                     	;# 
   839  0298                     	;# 
   840  0298                     	;# 
   841  0299                     	;# 
   842  029A                     	;# 
   843  029B                     	;# 
   844  029C                     	;# 
   845  029C                     	;# 
   846  029D                     	;# 
   847  029E                     	;# 
   848  029F                     	;# 
   849  0311                     	;# 
   850  0311                     	;# 
   851  0312                     	;# 
   852  0313                     	;# 
   853  0314                     	;# 
   854  0315                     	;# 
   855  0315                     	;# 
   856  0316                     	;# 
   857  0318                     	;# 
   858  0318                     	;# 
   859  0319                     	;# 
   860  031A                     	;# 
   861  031C                     	;# 
   862  031C                     	;# 
   863  031D                     	;# 
   864  031E                     	;# 
   865  0394                     	;# 
   866  0395                     	;# 
   867  0396                     	;# 
   868  0415                     	;# 
   869  0416                     	;# 
   870  0417                     	;# 
   871  041C                     	;# 
   872  041D                     	;# 
   873  041E                     	;# 
   874  0791                     	;# 
   875  0792                     	;# 
   876  0793                     	;# 
   877  0794                     	;# 
   878  0795                     	;# 
   879  0798                     	;# 
   880  0799                     	;# 
   881  07A0                     	;# 
   882  07A1                     	;# 
   883  07A3                     	;# 
   884  07A4                     	;# 
   885  07A6                     	;# 
   886  07A7                     	;# 
   887  07A9                     	;# 
   888  07AA                     	;# 
   889  0FE4                     	;# 
   890  0FE5                     	;# 
   891  0FE6                     	;# 
   892  0FE7                     	;# 
   893  0FE8                     	;# 
   894  0FE9                     	;# 
   895  0FEA                     	;# 
   896  0FEB                     	;# 
   897  0FED                     	;# 
   898  0FEE                     	;# 
   899  0FEF                     	;# 
   900  0000                     	;# 
   901  0001                     	;# 
   902  0002                     	;# 
   903  0003                     	;# 
   904  0004                     	;# 
   905  0005                     	;# 
   906  0006                     	;# 
   907  0007                     	;# 
   908  0008                     	;# 
   909  0009                     	;# 
   910  000A                     	;# 
   911  000B                     	;# 
   912  000C                     	;# 
   913  000D                     	;# 
   914  000E                     	;# 
   915  0010                     	;# 
   916  0011                     	;# 
   917  0012                     	;# 
   918  0013                     	;# 
   919  0015                     	;# 
   920  0016                     	;# 
   921  0016                     	;# 
   922  0017                     	;# 
   923  0018                     	;# 
   924  0019                     	;# 
   925  001A                     	;# 
   926  001B                     	;# 
   927  001C                     	;# 
   928  001E                     	;# 
   929  001F                     	;# 
   930  008C                     	;# 
   931  008D                     	;# 
   932  008E                     	;# 
   933  0090                     	;# 
   934  0091                     	;# 
   935  0092                     	;# 
   936  0093                     	;# 
   937  0095                     	;# 
   938  0096                     	;# 
   939  0097                     	;# 
   940  0098                     	;# 
   941  0099                     	;# 
   942  009A                     	;# 
   943  009B                     	;# 
   944  009B                     	;# 
   945  009C                     	;# 
   946  009D                     	;# 
   947  009E                     	;# 
   948  010C                     	;# 
   949  010D                     	;# 
   950  010E                     	;# 
   951  0110                     	;# 
   952  0111                     	;# 
   953  0112                     	;# 
   954  0113                     	;# 
   955  0114                     	;# 
   956  0115                     	;# 
   957  0116                     	;# 
   958  0117                     	;# 
   959  0118                     	;# 
   960  0119                     	;# 
   961  011A                     	;# 
   962  011B                     	;# 
   963  011D                     	;# 
   964  018C                     	;# 
   965  018D                     	;# 
   966  0191                     	;# 
   967  0191                     	;# 
   968  0192                     	;# 
   969  0193                     	;# 
   970  0193                     	;# 
   971  0193                     	;# 
   972  0194                     	;# 
   973  0195                     	;# 
   974  0196                     	;# 
   975  0199                     	;# 
   976  019A                     	;# 
   977  019B                     	;# 
   978  019B                     	;# 
   979  019B                     	;# 
   980  019B                     	;# 
   981  019C                     	;# 
   982  019C                     	;# 
   983  019D                     	;# 
   984  019E                     	;# 
   985  019F                     	;# 
   986  020D                     	;# 
   987  0210                     	;# 
   988  0211                     	;# 
   989  0212                     	;# 
   990  0213                     	;# 
   991  0214                     	;# 
   992  0215                     	;# 
   993  0215                     	;# 
   994  0216                     	;# 
   995  0217                     	;# 
   996  0291                     	;# 
   997  0291                     	;# 
   998  0292                     	;# 
   999  0293                     	;# 
  1000  0294                     	;# 
  1001  0295                     	;# 
  1002  0295                     	;# 
  1003  0296                     	;# 
  1004  0298                     	;# 
  1005  0298                     	;# 
  1006  0299                     	;# 
  1007  029A                     	;# 
  1008  029B                     	;# 
  1009  029C                     	;# 
  1010  029C                     	;# 
  1011  029D                     	;# 
  1012  029E                     	;# 
  1013  029F                     	;# 
  1014  0311                     	;# 
  1015  0311                     	;# 
  1016  0312                     	;# 
  1017  0313                     	;# 
  1018  0314                     	;# 
  1019  0315                     	;# 
  1020  0315                     	;# 
  1021  0316                     	;# 
  1022  0318                     	;# 
  1023  0318                     	;# 
  1024  0319                     	;# 
  1025  031A                     	;# 
  1026  031C                     	;# 
  1027  031C                     	;# 
  1028  031D                     	;# 
  1029  031E                     	;# 
  1030  0394                     	;# 
  1031  0395                     	;# 
  1032  0396                     	;# 
  1033  0415                     	;# 
  1034  0416                     	;# 
  1035  0417                     	;# 
  1036  041C                     	;# 
  1037  041D                     	;# 
  1038  041E                     	;# 
  1039  0791                     	;# 
  1040  0792                     	;# 
  1041  0793                     	;# 
  1042  0794                     	;# 
  1043  0795                     	;# 
  1044  0798                     	;# 
  1045  0799                     	;# 
  1046  07A0                     	;# 
  1047  07A1                     	;# 
  1048  07A3                     	;# 
  1049  07A4                     	;# 
  1050  07A6                     	;# 
  1051  07A7                     	;# 
  1052  07A9                     	;# 
  1053  07AA                     	;# 
  1054  0FE4                     	;# 
  1055  0FE5                     	;# 
  1056  0FE6                     	;# 
  1057  0FE7                     	;# 
  1058  0FE8                     	;# 
  1059  0FE9                     	;# 
  1060  0FEA                     	;# 
  1061  0FEB                     	;# 
  1062  0FED                     	;# 
  1063  0FEE                     	;# 
  1064  0FEF                     	;# 
  1065                           
  1066                           	psect	stringtext1
  1067  0322                     __pstringtext1:
  1068  0322                     recieve_ang@mask:
  1069  0322  3480               	retlw	128
  1070  0323                     __end_ofrecieve_ang@mask:
  1071  0011                     _PIR1bits	set	17
  1072  005F                     _GIE	set	95
  1073  005E                     _PEIE	set	94
  1074  0091                     _PIE1bits	set	145
  1075  0097                     _WDTCON	set	151
  1076  0098                     _OSCTUNE	set	152
  1077  0099                     _OSCCON	set	153
  1078  0095                     _OPTION_REGbits	set	149
  1079  008E                     _TRISC	set	142
  1080  008D                     _TRISB	set	141
  1081  008C                     _TRISA	set	140
  1082  0090                     _TRISE	set	144
  1083  0116                     _BORCON	set	278
  1084  011D                     _APFCON	set	285
  1085  010E                     _LATC	set	270
  1086  010D                     _LATB	set	269
  1087  010C                     _LATA	set	268
  1088  0110                     _LATE	set	272
  1089  0199                     _RCREG	set	409
  1090  019D                     _RCSTAbits	set	413
  1091  019A                     _TXREG	set	410
  1092  019E                     _TXSTAbits	set	414
  1093  019B                     _SPBRG	set	411
  1094  019F                     _BAUDCON	set	415
  1095  019D                     _RCSTA	set	413
  1096  019E                     _TXSTA	set	414
  1097  018C                     _ANSELA	set	396
  1098  018D                     _ANSELB	set	397
  1099  0215                     _SSPCON1bits	set	533
  1100  0214                     _SSPSTATbits	set	532
  1101  0211                     _SSPBUF	set	529
  1102  0216                     _SSPCON2bits	set	534
  1103  0214                     _SSPSTAT	set	532
  1104  0216                     _SSPCON2	set	534
  1105  0215                     _SSPCON1	set	533
  1106  0212                     _SSPADD	set	530
  1107  020D                     _WPUB	set	525
  1108  0210                     _WPUE	set	528
  1109                           
  1110                           	psect	cinit
  1111  0057                     start_initialization:	
  1112                           ; #config settings
  1113                           
  1114  0057                     __initialization:
  1115                           
  1116                           ; Clear objects allocated to BANK0
  1117  0057  0020               	movlb	0	; select bank0
  1118  0058  01C4               	clrf	__pbssBANK0& (0+127)
  1119  0059                     end_of_initialization:	
  1120                           ;End of C runtime variable initialization code
  1121                           
  1122  0059                     __end_of__initialization:
  1123  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1124  005A  0020               	movlb	0
  1125  005B  3180  28B6         	ljmp	_main	;jump to C main() function
  1126                           
  1127                           	psect	bssBANK0
  1128  0044                     __pbssBANK0:
  1129  0044                     _flg:
  1130  0044                     	ds	1
  1131                           
  1132                           	psect	cstackCOMMON
  1133  0070                     __pcstackCOMMON:
  1134  0070                     ?_OSCILLATOR_Initialize:
  1135  0070                     ?_WDT_Initialize:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0070                     ?_init:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0070                     ?_PIN_MANAGER_Initialize:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     ?_SYSTEM_Initialize:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     ?_main:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     ?_send:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     ??_send:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0070                     ?_recieve_ang:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0070                     ?_isr:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0070                     ?_i2c_wait:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0070                     ?_i2c_start:	
  1166                           ; 1 bytes @ 0x0
  1167                           
  1168  0070                     ?_i2c_stop:	
  1169                           ; 1 bytes @ 0x0
  1170                           
  1171  0070                     ?_i2c_repeated_start:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0070                     ?_i2c_write:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0070                     ?_i2c_read:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0070                     ?__read:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0070                     ?i1_i2c_wait:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0070                     ??i1_i2c_wait:	
  1187                           ; 1 bytes @ 0x0
  1188                           
  1189  0070                     ?i1_i2c_start:	
  1190                           ; 1 bytes @ 0x0
  1191                           
  1192  0070                     ??i1_i2c_start:	
  1193                           ; 1 bytes @ 0x0
  1194                           
  1195  0070                     ?i1_i2c_stop:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ??i1_i2c_stop:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?i1_i2c_write:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ??i1_i2c_write:	
  1205                           ; 1 bytes @ 0x0
  1206                           
  1207  0070                     ?___wmul:	
  1208                           ; 1 bytes @ 0x0
  1209                           
  1210  0070                     send@data:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213  0070                     recieve_ang@ch:	
  1214                           ; 1 bytes @ 0x0
  1215                           
  1216  0070                     i1i2c_write@data:	
  1217                           ; 1 bytes @ 0x0
  1218                           
  1219  0070                     ___wmul@multiplier:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222                           
  1223                           ; 2 bytes @ 0x0
  1224  0070                     	ds	1
  1225  0071                     ?_set_pwm:
  1226  0071                     recieve_ang@ang:	
  1227                           ; 1 bytes @ 0x1
  1228                           
  1229  0071                     set_pwm@on:	
  1230                           ; 1 bytes @ 0x1
  1231                           
  1232                           
  1233                           ; 2 bytes @ 0x1
  1234  0071                     	ds	1
  1235  0072                     ??_recieve_ang:
  1236  0072                     ___wmul@multiplicand:	
  1237                           ; 1 bytes @ 0x2
  1238                           
  1239                           
  1240                           ; 2 bytes @ 0x2
  1241  0072                     	ds	1
  1242  0073                     recieve_ang@data:
  1243  0073                     set_pwm@off:	
  1244                           ; 1 bytes @ 0x3
  1245                           
  1246                           
  1247                           ; 2 bytes @ 0x3
  1248  0073                     	ds	1
  1249  0074                     ??___wmul:
  1250  0074                     ___wmul@product:	
  1251                           ; 1 bytes @ 0x4
  1252                           
  1253                           
  1254                           ; 2 bytes @ 0x4
  1255  0074                     	ds	1
  1256  0075                     ??_set_pwm:
  1257                           
  1258                           ; 1 bytes @ 0x5
  1259  0075                     	ds	1
  1260  0076                     ?i1___lwdiv:
  1261  0076                     set_pwm@num:	
  1262                           ; 2 bytes @ 0x6
  1263                           
  1264  0076                     i1___lwdiv@divisor:	
  1265                           ; 1 bytes @ 0x6
  1266                           
  1267                           
  1268                           ; 2 bytes @ 0x6
  1269  0076                     	ds	2
  1270  0078                     i1___lwdiv@dividend:
  1271                           
  1272                           ; 2 bytes @ 0x8
  1273  0078                     	ds	2
  1274  007A                     ??i1___lwdiv:
  1275                           
  1276                           ; 1 bytes @ 0xA
  1277  007A                     	ds	1
  1278  007B                     i1___lwdiv@quotient:
  1279                           
  1280                           ; 2 bytes @ 0xB
  1281  007B                     	ds	2
  1282  007D                     i1___lwdiv@counter:
  1283                           
  1284                           ; 1 bytes @ 0xD
  1285  007D                     	ds	1
  1286  007E                     ??_servo_write:
  1287  007E                     ??_map:	
  1288                           ; 1 bytes @ 0xE
  1289                           
  1290                           
  1291                           	psect	cstackBANK0
  1292  0020                     __pcstackBANK0:	
  1293                           ; 1 bytes @ 0xE
  1294                           
  1295  0020                     ?_map:
  1296  0020                     map@x:	
  1297                           ; 2 bytes @ 0x0
  1298                           
  1299                           
  1300                           ; 2 bytes @ 0x0
  1301  0020                     	ds	2
  1302  0022                     map@in_min:
  1303                           
  1304                           ; 2 bytes @ 0x2
  1305  0022                     	ds	2
  1306  0024                     map@in_max:
  1307                           
  1308                           ; 2 bytes @ 0x4
  1309  0024                     	ds	2
  1310  0026                     map@out_min:
  1311                           
  1312                           ; 2 bytes @ 0x6
  1313  0026                     	ds	2
  1314  0028                     map@out_max:
  1315                           
  1316                           ; 2 bytes @ 0x8
  1317  0028                     	ds	2
  1318  002A                     ?_servo_write:
  1319  002A                     servo_write@ang:	
  1320                           ; 1 bytes @ 0xA
  1321                           
  1322                           
  1323                           ; 2 bytes @ 0xA
  1324  002A                     	ds	2
  1325  002C                     servo_write@ch:
  1326                           
  1327                           ; 1 bytes @ 0xC
  1328  002C                     	ds	1
  1329  002D                     ??_isr:
  1330                           
  1331                           ; 1 bytes @ 0xD
  1332  002D                     	ds	2
  1333  002F                     isr@ch:
  1334                           
  1335                           ; 1 bytes @ 0xF
  1336  002F                     	ds	1
  1337  0030                     isr@ang:
  1338                           
  1339                           ; 1 bytes @ 0x10
  1340  0030                     	ds	1
  1341  0031                     isr@data:
  1342                           
  1343                           ; 1 bytes @ 0x11
  1344  0031                     	ds	1
  1345  0032                     ??_OSCILLATOR_Initialize:
  1346  0032                     ??_WDT_Initialize:	
  1347                           ; 1 bytes @ 0x12
  1348                           
  1349  0032                     ??_PIN_MANAGER_Initialize:	
  1350                           ; 1 bytes @ 0x12
  1351                           
  1352  0032                     ??_SYSTEM_Initialize:	
  1353                           ; 1 bytes @ 0x12
  1354                           
  1355  0032                     ??_i2c_wait:	
  1356                           ; 1 bytes @ 0x12
  1357                           
  1358  0032                     ??_i2c_start:	
  1359                           ; 1 bytes @ 0x12
  1360                           
  1361  0032                     ??_i2c_stop:	
  1362                           ; 1 bytes @ 0x12
  1363                           
  1364  0032                     ??_i2c_repeated_start:	
  1365                           ; 1 bytes @ 0x12
  1366                           
  1367  0032                     ??_i2c_write:	
  1368                           ; 1 bytes @ 0x12
  1369                           
  1370  0032                     ??_i2c_read:	
  1371                           ; 1 bytes @ 0x12
  1372                           
  1373  0032                     ?___lwdiv:	
  1374                           ; 1 bytes @ 0x12
  1375                           
  1376  0032                     i2c_write@data:	
  1377                           ; 2 bytes @ 0x12
  1378                           
  1379  0032                     ___lwdiv@divisor:	
  1380                           ; 1 bytes @ 0x12
  1381                           
  1382                           
  1383                           ; 2 bytes @ 0x12
  1384  0032                     	ds	1
  1385  0033                     ??_init:
  1386  0033                     ?__write:	
  1387                           ; 1 bytes @ 0x13
  1388                           
  1389  0033                     i2c_read@ack:	
  1390                           ; 1 bytes @ 0x13
  1391                           
  1392  0033                     __write@d:	
  1393                           ; 1 bytes @ 0x13
  1394                           
  1395                           
  1396                           ; 1 bytes @ 0x13
  1397  0033                     	ds	1
  1398  0034                     ??__write:
  1399  0034                     i2c_read@data:	
  1400                           ; 1 bytes @ 0x14
  1401                           
  1402  0034                     __write@addr:	
  1403                           ; 1 bytes @ 0x14
  1404                           
  1405  0034                     ___lwdiv@dividend:	
  1406                           ; 1 bytes @ 0x14
  1407                           
  1408                           
  1409                           ; 2 bytes @ 0x14
  1410  0034                     	ds	1
  1411  0035                     ??__read:
  1412                           
  1413                           ; 1 bytes @ 0x15
  1414  0035                     	ds	1
  1415  0036                     ??___lwdiv:
  1416  0036                     __read@addr:	
  1417                           ; 1 bytes @ 0x16
  1418                           
  1419                           
  1420                           ; 1 bytes @ 0x16
  1421  0036                     	ds	1
  1422  0037                     __read@data:
  1423  0037                     ___lwdiv@quotient:	
  1424                           ; 1 bytes @ 0x17
  1425                           
  1426                           
  1427                           ; 2 bytes @ 0x17
  1428  0037                     	ds	2
  1429  0039                     ___lwdiv@counter:
  1430                           
  1431                           ; 1 bytes @ 0x19
  1432  0039                     	ds	1
  1433  003A                     ?_set_pwm_freq:
  1434  003A                     set_pwm_freq@freq:	
  1435                           ; 1 bytes @ 0x1A
  1436                           
  1437                           
  1438                           ; 2 bytes @ 0x1A
  1439  003A                     	ds	2
  1440  003C                     ??_set_pwm_freq:
  1441                           
  1442                           ; 1 bytes @ 0x1C
  1443  003C                     	ds	1
  1444  003D                     set_pwm_freq@prescale:
  1445                           
  1446                           ; 1 bytes @ 0x1D
  1447  003D                     	ds	1
  1448  003E                     set_pwm_freq@newreg:
  1449                           
  1450                           ; 1 bytes @ 0x1E
  1451  003E                     	ds	1
  1452  003F                     set_pwm_freq@prescaleval:
  1453                           
  1454                           ; 2 bytes @ 0x1F
  1455  003F                     	ds	2
  1456  0041                     set_pwm_freq@oldreg:
  1457                           
  1458                           ; 1 bytes @ 0x21
  1459  0041                     	ds	1
  1460  0042                     ??_main:
  1461                           
  1462                           ; 1 bytes @ 0x22
  1463  0042                     	ds	2
  1464                           
  1465                           	psect	maintext
  1466  00B6                     __pmaintext:	
  1467 ;;
  1468 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1469 ;;
  1470 ;; *************** function _main *****************
  1471 ;; Defined at:
  1472 ;;		line 15 in file "main.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0, pclath, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : B1F/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1489 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1490 ;;Total ram usage:        2 bytes
  1491 ;; Hardware stack levels required when called: 9
  1492 ;; This function calls:
  1493 ;;		_SYSTEM_Initialize
  1494 ;;		_init
  1495 ;;		_set_pwm_freq
  1496 ;; This function is called by:
  1497 ;;		Startup code after reset
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _main
  1503  00B6                     _main:
  1504  00B6                     l1349:	
  1505                           ;incstack = 0
  1506                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1507                           
  1508                           
  1509                           ;main.c: 18: SYSTEM_Initialize();
  1510  00B6  3182  22EC  3180   	fcall	_SYSTEM_Initialize
  1511  00B9                     l1351:
  1512                           
  1513                           ;main.c: 20: ANSELA = 0x0;
  1514  00B9  0023               	movlb	3	; select bank3
  1515  00BA  018C               	clrf	12	;volatile
  1516  00BB                     l1353:
  1517                           
  1518                           ;main.c: 21: ANSELB = 0x0;
  1519  00BB  018D               	clrf	13	;volatile
  1520  00BC                     l1355:
  1521                           
  1522                           ;main.c: 24: TRISA = 0x0;
  1523  00BC  0021               	movlb	1	; select bank1
  1524  00BD  018C               	clrf	12	;volatile
  1525  00BE                     l1357:
  1526                           
  1527                           ;main.c: 25: LATA = 0x0;
  1528  00BE  0022               	movlb	2	; select bank2
  1529  00BF  018C               	clrf	12	;volatile
  1530  00C0                     l1359:
  1531                           
  1532                           ;main.c: 30: SSPADD = 0x13;
  1533  00C0  3013               	movlw	19
  1534  00C1  0024               	movlb	4	; select bank4
  1535  00C2  0092               	movwf	18	;volatile
  1536  00C3                     l1361:
  1537                           
  1538                           ;main.c: 31: SSPCON1 = 0x28;
  1539  00C3  3028               	movlw	40
  1540  00C4  0095               	movwf	21	;volatile
  1541  00C5                     l1363:
  1542                           
  1543                           ;main.c: 32: SSPCON2 = 0x0;
  1544  00C5  0196               	clrf	22	;volatile
  1545  00C6                     l1365:
  1546                           
  1547                           ;main.c: 33: SSPSTAT = 0;
  1548  00C6  0194               	clrf	20	;volatile
  1549  00C7                     l1367:
  1550                           
  1551                           ;main.c: 36: _delay((unsigned long)((500)*(8000000/4000.0)));
  1552  00C7  3006               	movlw	6
  1553  00C8  0020               	movlb	0	; select bank0
  1554  00C9  00C3               	movwf	??_main+1
  1555  00CA  3013               	movlw	19
  1556  00CB  00C2               	movwf	??_main
  1557  00CC  30AD               	movlw	173
  1558  00CD                     u837:
  1559  00CD  0B89               	decfsz	9,f
  1560  00CE  28CD               	goto	u837
  1561  00CF  0BC2               	decfsz	??_main,f
  1562  00D0  28CD               	goto	u837
  1563  00D1  0BC3               	decfsz	??_main+1,f
  1564  00D2  28CD               	goto	u837
  1565  00D3  3200               	nop2
  1566  00D4                     l1369:
  1567                           
  1568                           ;main.c: 37: init();
  1569  00D4  3182  228C  3180   	fcall	_init
  1570  00D7                     l1371:
  1571                           
  1572                           ;main.c: 39: set_pwm_freq(50);
  1573  00D7  3032               	movlw	50
  1574  00D8  0020               	movlb	0	; select bank0
  1575  00D9  00BA               	movwf	set_pwm_freq@freq
  1576  00DA  3000               	movlw	0
  1577  00DB  00BB               	movwf	set_pwm_freq@freq+1
  1578  00DC  3180  205D  3180   	fcall	_set_pwm_freq
  1579  00DF                     l1373:
  1580                           
  1581                           ;main.c: 43: TXSTA = 0x02;
  1582  00DF  3002               	movlw	2
  1583  00E0  0023               	movlb	3	; select bank3
  1584  00E1  009E               	movwf	30	;volatile
  1585  00E2                     l1375:
  1586                           
  1587                           ;main.c: 45: RCSTA = 0x90;
  1588  00E2  3090               	movlw	144
  1589  00E3  009D               	movwf	29	;volatile
  1590  00E4                     l1377:
  1591                           
  1592                           ;main.c: 47: BAUDCON = 0x08;
  1593  00E4  3008               	movlw	8
  1594  00E5  009F               	movwf	31	;volatile
  1595  00E6                     l1379:
  1596                           
  1597                           ;main.c: 49: SPBRG = 51;
  1598  00E6  3033               	movlw	51
  1599  00E7  009B               	movwf	27	;volatile
  1600  00E8                     l1381:
  1601                           
  1602                           ;main.c: 53: PIR1bits.RCIF = 0;
  1603  00E8  0020               	movlb	0	; select bank0
  1604  00E9  1291               	bcf	17,5	;volatile
  1605  00EA                     l1383:
  1606                           
  1607                           ;main.c: 56: PIE1bits.RCIE = 1;
  1608  00EA  0021               	movlb	1	; select bank1
  1609  00EB  1691               	bsf	17,5	;volatile
  1610  00EC                     l1385:
  1611                           
  1612                           ;main.c: 57: PEIE = 1;
  1613  00EC  170B               	bsf	11,6	;volatile
  1614  00ED                     l1387:
  1615                           
  1616                           ;main.c: 58: GIE = 1;
  1617  00ED  178B               	bsf	11,7	;volatile
  1618  00EE                     l1389:
  1619                           
  1620                           ;main.c: 60: flg = 1;
  1621  00EE  0020               	movlb	0	; select bank0
  1622  00EF  01C4               	clrf	_flg
  1623  00F0  0AC4               	incf	_flg,f
  1624  00F1                     l114:	
  1625                           ;main.c: 62: while (1){}
  1626                           
  1627  00F1                     l115:
  1628  00F1  28F1               	goto	l114
  1629  00F2  3180  2855         	ljmp	start
  1630  00F4                     __end_of_main:
  1631                           
  1632                           	psect	text1
  1633  005D                     __ptext1:	
  1634 ;; *************** function _set_pwm_freq *****************
  1635 ;; Defined at:
  1636 ;;		line 77 in file "PCA9685.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;  freq            2   26[BANK0 ] unsigned int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  prescaleval     2   31[BANK0 ] unsigned int 
  1641 ;;  oldreg          1   33[BANK0 ] unsigned char 
  1642 ;;  newreg          1   30[BANK0 ] unsigned char 
  1643 ;;  prescale        1   29[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1653 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1654 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1655 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1656 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1657 ;;Total ram usage:        8 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 8
  1660 ;; This function calls:
  1661 ;;		___lwdiv
  1662 ;;		__read
  1663 ;;		__write
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _set_pwm_freq
  1671  005D                     _set_pwm_freq:
  1672  005D                     l1315:	
  1673                           ;incstack = 0
  1674                           ; Regs used in _set_pwm_freq: [wreg+status,2+status,0+pclath+cstack]
  1675                           
  1676                           
  1677                           ;PCA9685.c: 78: uint16_t prescaleval = 6103;
  1678  005D  30D7               	movlw	215
  1679  005E  0020               	movlb	0	; select bank0
  1680  005F  00BF               	movwf	set_pwm_freq@prescaleval
  1681  0060  3017               	movlw	23
  1682  0061  00C0               	movwf	set_pwm_freq@prescaleval+1
  1683  0062                     l1317:
  1684                           
  1685                           ;PCA9685.c: 79: prescaleval /= freq;
  1686  0062  083B               	movf	set_pwm_freq@freq+1,w
  1687  0063  00B3               	movwf	___lwdiv@divisor+1
  1688  0064  083A               	movf	set_pwm_freq@freq,w
  1689  0065  00B2               	movwf	___lwdiv@divisor
  1690  0066  0840               	movf	set_pwm_freq@prescaleval+1,w
  1691  0067  00B5               	movwf	___lwdiv@dividend+1
  1692  0068  083F               	movf	set_pwm_freq@prescaleval,w
  1693  0069  00B4               	movwf	___lwdiv@dividend
  1694  006A  3180  20F4  3180   	fcall	___lwdiv
  1695  006D  0020               	movlb	0	; select bank0
  1696  006E  0833               	movf	?___lwdiv+1,w
  1697  006F  00C0               	movwf	set_pwm_freq@prescaleval+1
  1698  0070  0832               	movf	?___lwdiv,w
  1699  0071  00BF               	movwf	set_pwm_freq@prescaleval
  1700  0072                     l1319:
  1701                           
  1702                           ;PCA9685.c: 80: prescaleval -= 1;
  1703  0072  3001               	movlw	1
  1704  0073  02BF               	subwf	set_pwm_freq@prescaleval,f
  1705  0074  3000               	movlw	0
  1706  0075  3BC0               	subwfb	set_pwm_freq@prescaleval+1,f
  1707  0076                     l1321:
  1708                           
  1709                           ;PCA9685.c: 82: uint8_t prescale = (uint8_t)prescaleval;
  1710  0076  083F               	movf	set_pwm_freq@prescaleval,w
  1711  0077  00BC               	movwf	??_set_pwm_freq
  1712  0078  083C               	movf	??_set_pwm_freq,w
  1713  0079  00BD               	movwf	set_pwm_freq@prescale
  1714  007A                     l1323:
  1715                           
  1716                           ;PCA9685.c: 83: uint8_t oldreg = _read(0x0);
  1717  007A  3000               	movlw	0
  1718  007B  3181  21E3  3180   	fcall	__read
  1719  007E  0020               	movlb	0	; select bank0
  1720  007F  00BC               	movwf	??_set_pwm_freq
  1721  0080  083C               	movf	??_set_pwm_freq,w
  1722  0081  00C1               	movwf	set_pwm_freq@oldreg
  1723  0082                     l1325:
  1724                           
  1725                           ;PCA9685.c: 84: uint8_t newreg = (oldreg & 0x7F) | 0x10;
  1726  0082  0841               	movf	set_pwm_freq@oldreg,w
  1727  0083  397F               	andlw	127
  1728  0084  3810               	iorlw	16
  1729  0085  00BC               	movwf	??_set_pwm_freq
  1730  0086  083C               	movf	??_set_pwm_freq,w
  1731  0087  00BE               	movwf	set_pwm_freq@newreg
  1732  0088                     l1327:
  1733                           
  1734                           ;PCA9685.c: 85: _write(0x0, newreg);
  1735  0088  083E               	movf	set_pwm_freq@newreg,w
  1736  0089  00BC               	movwf	??_set_pwm_freq
  1737  008A  083C               	movf	??_set_pwm_freq,w
  1738  008B  00B3               	movwf	__write@d
  1739  008C  3000               	movlw	0
  1740  008D  3182  2275  3180   	fcall	__write
  1741  0090                     l1329:
  1742                           
  1743                           ;PCA9685.c: 86: _write(0xFE, prescale);
  1744  0090  0020               	movlb	0	; select bank0
  1745  0091  083D               	movf	set_pwm_freq@prescale,w
  1746  0092  00BC               	movwf	??_set_pwm_freq
  1747  0093  083C               	movf	??_set_pwm_freq,w
  1748  0094  00B3               	movwf	__write@d
  1749  0095  30FE               	movlw	254
  1750  0096  3182  2275  3180   	fcall	__write
  1751  0099                     l1331:
  1752                           
  1753                           ;PCA9685.c: 87: _write(0x0, oldreg);
  1754  0099  0020               	movlb	0	; select bank0
  1755  009A  0841               	movf	set_pwm_freq@oldreg,w
  1756  009B  00BC               	movwf	??_set_pwm_freq
  1757  009C  083C               	movf	??_set_pwm_freq,w
  1758  009D  00B3               	movwf	__write@d
  1759  009E  3000               	movlw	0
  1760  009F  3182  2275  3180   	fcall	__write
  1761  00A2                     l1333:
  1762                           
  1763                           ;PCA9685.c: 88: _delay((unsigned long)((5)*(8000000/4000.0)));
  1764  00A2  300D               	movlw	13
  1765  00A3  0020               	movlb	0	; select bank0
  1766  00A4  00BC               	movwf	??_set_pwm_freq
  1767  00A5  30FB               	movlw	251
  1768  00A6                     u847:
  1769  00A6  0B89               	decfsz	9,f
  1770  00A7  28A6               	goto	u847
  1771  00A8  0BBC               	decfsz	??_set_pwm_freq,f
  1772  00A9  28A6               	goto	u847
  1773  00AA  3200               	nop2
  1774  00AB                     l1335:
  1775                           
  1776                           ;PCA9685.c: 89: _write(0x0, oldreg | 0xA1);
  1777  00AB  0020               	movlb	0	; select bank0
  1778  00AC  0841               	movf	set_pwm_freq@oldreg,w
  1779  00AD  38A1               	iorlw	161
  1780  00AE  00BC               	movwf	??_set_pwm_freq
  1781  00AF  083C               	movf	??_set_pwm_freq,w
  1782  00B0  00B3               	movwf	__write@d
  1783  00B1  3000               	movlw	0
  1784  00B2  3182  2275  3180   	fcall	__write
  1785  00B5                     l219:
  1786  00B5  0008               	return
  1787  00B6                     __end_of_set_pwm_freq:
  1788                           
  1789                           	psect	text2
  1790  0275                     __ptext2:	
  1791 ;; *************** function __write *****************
  1792 ;; Defined at:
  1793 ;;		line 16 in file "PCA9685.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;  addr            1    wreg     unsigned char 
  1796 ;;  d               1   19[BANK0 ] unsigned char 
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;  addr            1   20[BANK0 ] unsigned char 
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  1    wreg      void 
  1801 ;; Registers used:
  1802 ;;		wreg, status,2, status,0, pclath, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1808 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1811 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels used: 1
  1814 ;; Hardware stack levels required when called: 7
  1815 ;; This function calls:
  1816 ;;		_i2c_start
  1817 ;;		_i2c_stop
  1818 ;;		_i2c_write
  1819 ;; This function is called by:
  1820 ;;		_set_pwm_freq
  1821 ;; This function uses a non-reentrant model
  1822 ;;
  1823                           
  1824                           
  1825                           ;psect for function __write
  1826  0275                     __write:
  1827                           
  1828                           ;incstack = 0
  1829                           ; Regs used in __write: [wreg+status,2+status,0+pclath+cstack]
  1830                           ;__write@addr stored from wreg
  1831  0275  0020               	movlb	0	; select bank0
  1832  0276  00B4               	movwf	__write@addr
  1833  0277                     l1265:
  1834                           
  1835                           ;PCA9685.c: 17: i2c_start();
  1836  0277  3182  22E2  3182   	fcall	_i2c_start
  1837                           
  1838                           ;PCA9685.c: 18: i2c_write(0x80);
  1839  027A  3080               	movlw	128
  1840  027B  3182  229F  3182   	fcall	_i2c_write
  1841                           
  1842                           ;PCA9685.c: 19: i2c_write(addr);
  1843  027E  0020               	movlb	0	; select bank0
  1844  027F  0834               	movf	__write@addr,w
  1845  0280  3182  229F  3182   	fcall	_i2c_write
  1846                           
  1847                           ;PCA9685.c: 20: i2c_write(d);
  1848  0283  0020               	movlb	0	; select bank0
  1849  0284  0833               	movf	__write@d,w
  1850  0285  3182  229F  3182   	fcall	_i2c_write
  1851  0288                     l1267:
  1852                           
  1853                           ;PCA9685.c: 21: i2c_stop();
  1854  0288  3183  2309  3182   	fcall	_i2c_stop
  1855  028B                     l207:
  1856  028B  0008               	return
  1857  028C                     __end_of__write:
  1858                           
  1859                           	psect	text3
  1860  01E3                     __ptext3:	
  1861 ;; *************** function __read *****************
  1862 ;; Defined at:
  1863 ;;		line 28 in file "PCA9685.c"
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  addr            1    wreg     unsigned char 
  1866 ;; Auto vars:     Size  Location     Type
  1867 ;;  addr            1   22[BANK0 ] unsigned char 
  1868 ;;  data            1   23[BANK0 ] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      unsigned char 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0, pclath, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1879 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1880 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1881 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1882 ;;Total ram usage:        3 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 7
  1885 ;; This function calls:
  1886 ;;		_i2c_read
  1887 ;;		_i2c_repeated_start
  1888 ;;		_i2c_start
  1889 ;;		_i2c_stop
  1890 ;;		_i2c_write
  1891 ;; This function is called by:
  1892 ;;		_set_pwm_freq
  1893 ;; This function uses a non-reentrant model
  1894 ;;
  1895                           
  1896                           
  1897                           ;psect for function __read
  1898  01E3                     __read:
  1899                           
  1900                           ;incstack = 0
  1901                           ; Regs used in __read: [wreg+status,2+status,0+pclath+cstack]
  1902                           ;__read@addr stored from wreg
  1903  01E3  0020               	movlb	0	; select bank0
  1904  01E4  00B6               	movwf	__read@addr
  1905  01E5                     l1269:
  1906                           
  1907                           ;PCA9685.c: 29: uint8_t data;;PCA9685.c: 30: i2c_start();
  1908  01E5  3182  22E2  3181   	fcall	_i2c_start
  1909                           
  1910                           ;PCA9685.c: 31: i2c_write(0x80);
  1911  01E8  3080               	movlw	128
  1912  01E9  3182  229F  3181   	fcall	_i2c_write
  1913                           
  1914                           ;PCA9685.c: 32: i2c_write(addr);
  1915  01EC  0020               	movlb	0	; select bank0
  1916  01ED  0836               	movf	__read@addr,w
  1917  01EE  3182  229F  3181   	fcall	_i2c_write
  1918                           
  1919                           ;PCA9685.c: 34: i2c_repeated_start();
  1920  01F1  3182  22D8  3181   	fcall	_i2c_repeated_start
  1921                           
  1922                           ;PCA9685.c: 36: i2c_write(0x80 | 0x01);
  1923  01F4  3081               	movlw	129
  1924  01F5  3182  229F  3181   	fcall	_i2c_write
  1925                           
  1926                           ;PCA9685.c: 37: data = i2c_read(0x0 | 0x01);
  1927  01F8  3001               	movlw	1
  1928  01F9  3182  2225  3181   	fcall	_i2c_read
  1929  01FC  0020               	movlb	0	; select bank0
  1930  01FD  00B5               	movwf	??__read
  1931  01FE  0835               	movf	??__read,w
  1932  01FF  00B7               	movwf	__read@data
  1933  0200                     l1271:
  1934                           
  1935                           ;PCA9685.c: 38: i2c_stop();
  1936  0200  3183  2309  3181   	fcall	_i2c_stop
  1937                           
  1938                           ;PCA9685.c: 40: return data;
  1939  0203  0020               	movlb	0	; select bank0
  1940  0204  0837               	movf	__read@data,w
  1941  0205                     l210:
  1942  0205  0008               	return
  1943  0206                     __end_of__read:
  1944                           
  1945                           	psect	text4
  1946  02D8                     __ptext4:	
  1947 ;; *************** function _i2c_repeated_start *****************
  1948 ;; Defined at:
  1949 ;;		line 19 in file "i2c.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;		None
  1952 ;; Auto vars:     Size  Location     Type
  1953 ;;		None
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      void 
  1956 ;; Registers used:
  1957 ;;		wreg, status,2, status,0, pclath, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1967 ;;Total ram usage:        0 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; Hardware stack levels required when called: 6
  1970 ;; This function calls:
  1971 ;;		_i2c_wait
  1972 ;; This function is called by:
  1973 ;;		__read
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           
  1978                           ;psect for function _i2c_repeated_start
  1979  02D8                     _i2c_repeated_start:
  1980  02D8                     l1169:	
  1981                           ;incstack = 0
  1982                           ; Regs used in _i2c_repeated_start: [wreg+status,2+status,0+pclath+cstack]
  1983                           
  1984                           
  1985                           ;i2c.c: 20: i2c_wait();
  1986  02D8  3182  22C0  3182   	fcall	_i2c_wait
  1987  02DB                     l1171:
  1988                           
  1989                           ;i2c.c: 21: SSPCON2bits.RSEN = 1;
  1990  02DB  0024               	movlb	4	; select bank4
  1991  02DC  1496               	bsf	22,1	;volatile
  1992  02DD                     l174:	
  1993                           ;i2c.c: 22: while(SSPCON2bits.RSEN);
  1994                           
  1995  02DD  1896               	btfsc	22,1	;volatile
  1996  02DE  2AE0               	goto	u481
  1997  02DF  2AE1               	goto	u480
  1998  02E0                     u481:
  1999  02E0  2ADD               	goto	l174
  2000  02E1                     u480:
  2001  02E1                     l177:
  2002  02E1  0008               	return
  2003  02E2                     __end_of_i2c_repeated_start:
  2004                           
  2005                           	psect	text5
  2006  0225                     __ptext5:	
  2007 ;; *************** function _i2c_read *****************
  2008 ;; Defined at:
  2009 ;;		line 32 in file "i2c.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  ack             1    wreg     unsigned char 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  ack             1   19[BANK0 ] unsigned char 
  2014 ;;  data            1   20[BANK0 ] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      unsigned char 
  2017 ;; Registers used:
  2018 ;;		wreg, status,2, status,0, pclath, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2025 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2027 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2028 ;;Total ram usage:        3 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 6
  2031 ;; This function calls:
  2032 ;;		_i2c_wait
  2033 ;; This function is called by:
  2034 ;;		__read
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           
  2039                           ;psect for function _i2c_read
  2040  0225                     _i2c_read:
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _i2c_read: [wreg+status,2+status,0+pclath+cstack]
  2044                           ;i2c_read@ack stored from wreg
  2045  0225  0020               	movlb	0	; select bank0
  2046  0226  00B3               	movwf	i2c_read@ack
  2047  0227                     l1177:
  2048                           
  2049                           ;i2c.c: 33: uint8_t data;;i2c.c: 35: SSPCON2bits.ACKDT = ack;
  2050  0227  0C33               	rrf	i2c_read@ack,w
  2051  0228  0024               	movlb	4	; select bank4
  2052  0229  1C03               	skipc
  2053  022A  1296               	bcf	22,5	;volatile
  2054  022B  1803               	skipnc
  2055  022C  1696               	bsf	22,5	;volatile
  2056  022D                     l1179:
  2057                           
  2058                           ;i2c.c: 36: SSPCON2bits.RCEN = 1;
  2059  022D  1596               	bsf	22,3	;volatile
  2060  022E                     l189:	
  2061                           ;i2c.c: 37: while(!SSPSTATbits.BF);
  2062                           
  2063  022E  1C14               	btfss	20,0	;volatile
  2064  022F  2A31               	goto	u511
  2065  0230  2A32               	goto	u510
  2066  0231                     u511:
  2067  0231  2A2E               	goto	l189
  2068  0232                     u510:
  2069  0232                     l191:
  2070                           
  2071                           ;i2c.c: 38: SSPCON2bits.ACKEN = 1;
  2072  0232  1616               	bsf	22,4	;volatile
  2073  0233                     l1181:
  2074                           
  2075                           ;i2c.c: 39: data = SSPBUF;
  2076  0233  0811               	movf	17,w	;volatile
  2077  0234  0020               	movlb	0	; select bank0
  2078  0235  00B2               	movwf	??_i2c_read
  2079  0236  0832               	movf	??_i2c_read,w
  2080  0237  00B4               	movwf	i2c_read@data
  2081  0238                     l1183:
  2082                           
  2083                           ;i2c.c: 40: SSPCON1bits.SSPOV = 0;
  2084  0238  0024               	movlb	4	; select bank4
  2085  0239  1315               	bcf	21,6	;volatile
  2086  023A                     l1185:
  2087                           
  2088                           ;i2c.c: 41: i2c_wait();
  2089  023A  3182  22C0  3182   	fcall	_i2c_wait
  2090  023D                     l1187:
  2091                           
  2092                           ;i2c.c: 43: return data;
  2093  023D  0020               	movlb	0	; select bank0
  2094  023E  0834               	movf	i2c_read@data,w
  2095  023F                     l192:
  2096  023F  0008               	return
  2097  0240                     __end_of_i2c_read:
  2098                           
  2099                           	psect	text6
  2100  00F4                     __ptext6:	
  2101 ;; *************** function ___lwdiv *****************
  2102 ;; Defined at:
  2103 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  divisor         2   18[BANK0 ] unsigned int 
  2106 ;;  dividend        2   20[BANK0 ] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  quotient        2   23[BANK0 ] unsigned int 
  2109 ;;  counter         1   25[BANK0 ] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2   18[BANK0 ] unsigned int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2120 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2122 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2123 ;;Total ram usage:        8 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 5
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_set_pwm_freq
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function ___lwdiv
  2135  00F4                     ___lwdiv:
  2136  00F4                     l1283:	
  2137                           ;incstack = 0
  2138                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2139                           
  2140  00F4  0020               	movlb	0	; select bank0
  2141  00F5  01B7               	clrf	___lwdiv@quotient
  2142  00F6  01B8               	clrf	___lwdiv@quotient+1
  2143  00F7                     l1285:
  2144  00F7  0832               	movf	___lwdiv@divisor,w
  2145  00F8  0433               	iorwf	___lwdiv@divisor+1,w
  2146  00F9  1903               	btfsc	3,2
  2147  00FA  28FC               	goto	u681
  2148  00FB  28FD               	goto	u680
  2149  00FC                     u681:
  2150  00FC  292C               	goto	l1305
  2151  00FD                     u680:
  2152  00FD                     l1287:
  2153  00FD  01B9               	clrf	___lwdiv@counter
  2154  00FE  0AB9               	incf	___lwdiv@counter,f
  2155  00FF  2909               	goto	l1293
  2156  0100                     l1289:
  2157  0100  3001               	movlw	1
  2158  0101                     u695:
  2159  0101  35B2               	lslf	___lwdiv@divisor,f
  2160  0102  0DB3               	rlf	___lwdiv@divisor+1,f
  2161  0103  0B89               	decfsz	9,f
  2162  0104  2901               	goto	u695
  2163  0105                     l1291:
  2164  0105  3001               	movlw	1
  2165  0106  00B6               	movwf	??___lwdiv
  2166  0107  0836               	movf	??___lwdiv,w
  2167  0108  07B9               	addwf	___lwdiv@counter,f
  2168  0109                     l1293:
  2169  0109  1FB3               	btfss	___lwdiv@divisor+1,7
  2170  010A  290C               	goto	u701
  2171  010B  290D               	goto	u700
  2172  010C                     u701:
  2173  010C  2900               	goto	l1289
  2174  010D                     u700:
  2175  010D                     l1295:
  2176  010D  3001               	movlw	1
  2177  010E                     u715:
  2178  010E  35B7               	lslf	___lwdiv@quotient,f
  2179  010F  0DB8               	rlf	___lwdiv@quotient+1,f
  2180  0110  0B89               	decfsz	9,f
  2181  0111  290E               	goto	u715
  2182  0112  0833               	movf	___lwdiv@divisor+1,w
  2183  0113  0235               	subwf	___lwdiv@dividend+1,w
  2184  0114  1D03               	skipz
  2185  0115  2918               	goto	u725
  2186  0116  0832               	movf	___lwdiv@divisor,w
  2187  0117  0234               	subwf	___lwdiv@dividend,w
  2188  0118                     u725:
  2189  0118  1C03               	skipc
  2190  0119  291B               	goto	u721
  2191  011A  291C               	goto	u720
  2192  011B                     u721:
  2193  011B  2921               	goto	l1301
  2194  011C                     u720:
  2195  011C                     l1297:
  2196  011C  0832               	movf	___lwdiv@divisor,w
  2197  011D  02B4               	subwf	___lwdiv@dividend,f
  2198  011E  0833               	movf	___lwdiv@divisor+1,w
  2199  011F  3BB5               	subwfb	___lwdiv@dividend+1,f
  2200  0120                     l1299:
  2201  0120  1437               	bsf	___lwdiv@quotient,0
  2202  0121                     l1301:
  2203  0121  3001               	movlw	1
  2204  0122                     u735:
  2205  0122  36B3               	lsrf	___lwdiv@divisor+1,f
  2206  0123  0CB2               	rrf	___lwdiv@divisor,f
  2207  0124  0B89               	decfsz	9,f
  2208  0125  2922               	goto	u735
  2209  0126                     l1303:
  2210  0126  3001               	movlw	1
  2211  0127  02B9               	subwf	___lwdiv@counter,f
  2212  0128  1D03               	btfss	3,2
  2213  0129  292B               	goto	u741
  2214  012A  292C               	goto	u740
  2215  012B                     u741:
  2216  012B  290D               	goto	l1295
  2217  012C                     u740:
  2218  012C                     l1305:
  2219  012C  0838               	movf	___lwdiv@quotient+1,w
  2220  012D  00B3               	movwf	?___lwdiv+1
  2221  012E  0837               	movf	___lwdiv@quotient,w
  2222  012F  00B2               	movwf	?___lwdiv
  2223  0130                     l647:
  2224  0130  0008               	return
  2225  0131                     __end_of___lwdiv:
  2226                           
  2227                           	psect	text7
  2228  028C                     __ptext7:	
  2229 ;; *************** function _init *****************
  2230 ;; Defined at:
  2231 ;;		line 46 in file "PCA9685.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, status,2, status,0, pclath, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2249 ;;Total ram usage:        0 bytes
  2250 ;; Hardware stack levels used: 1
  2251 ;; Hardware stack levels required when called: 7
  2252 ;; This function calls:
  2253 ;;		_i2c_start
  2254 ;;		_i2c_stop
  2255 ;;		_i2c_write
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           
  2262                           ;psect for function _init
  2263  028C                     _init:
  2264  028C                     l1311:	
  2265                           ;incstack = 0
  2266                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2267                           
  2268                           
  2269                           ;PCA9685.c: 47: i2c_start();
  2270  028C  3182  22E2  3182   	fcall	_i2c_start
  2271                           
  2272                           ;PCA9685.c: 48: i2c_write(0x80);
  2273  028F  3080               	movlw	128
  2274  0290  3182  229F  3182   	fcall	_i2c_write
  2275                           
  2276                           ;PCA9685.c: 50: i2c_write(0x0);
  2277  0293  3000               	movlw	0
  2278  0294  3182  229F  3182   	fcall	_i2c_write
  2279                           
  2280                           ;PCA9685.c: 51: i2c_write(0x0);
  2281  0297  3000               	movlw	0
  2282  0298  3182  229F  3182   	fcall	_i2c_write
  2283  029B                     l1313:
  2284                           
  2285                           ;PCA9685.c: 53: i2c_stop();
  2286  029B  3183  2309  3182   	fcall	_i2c_stop
  2287  029E                     l213:
  2288  029E  0008               	return
  2289  029F                     __end_of_init:
  2290                           
  2291                           	psect	text8
  2292  029F                     __ptext8:	
  2293 ;; *************** function _i2c_write *****************
  2294 ;; Defined at:
  2295 ;;		line 25 in file "i2c.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;  data            1    wreg     unsigned char 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  data            1   18[BANK0 ] unsigned char 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  1    wreg      void 
  2302 ;; Registers used:
  2303 ;;		wreg, status,2, status,0, pclath, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2313 ;;Total ram usage:        1 bytes
  2314 ;; Hardware stack levels used: 1
  2315 ;; Hardware stack levels required when called: 6
  2316 ;; This function calls:
  2317 ;;		_i2c_wait
  2318 ;; This function is called by:
  2319 ;;		__write
  2320 ;;		__read
  2321 ;;		_init
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _i2c_write
  2327  029F                     _i2c_write:
  2328                           
  2329                           ;incstack = 0
  2330                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  2331                           ;i2c_write@data stored from wreg
  2332  029F  0020               	movlb	0	; select bank0
  2333  02A0  00B2               	movwf	i2c_write@data
  2334  02A1                     l1173:
  2335                           
  2336                           ;i2c.c: 26: SSPBUF = data;
  2337  02A1  0832               	movf	i2c_write@data,w
  2338  02A2  0024               	movlb	4	; select bank4
  2339  02A3  0091               	movwf	17	;volatile
  2340  02A4                     l180:	
  2341                           ;i2c.c: 27: while(SSPSTATbits.BF);
  2342                           
  2343  02A4  1814               	btfsc	20,0	;volatile
  2344  02A5  2AA7               	goto	u491
  2345  02A6  2AA8               	goto	u490
  2346  02A7                     u491:
  2347  02A7  2AA4               	goto	l180
  2348  02A8                     u490:
  2349  02A8                     l183:
  2350  02A8  1B16               	btfsc	22,6	;volatile
  2351  02A9  2AAB               	goto	u501
  2352  02AA  2AAC               	goto	u500
  2353  02AB                     u501:
  2354  02AB  2AA8               	goto	l183
  2355  02AC                     u500:
  2356  02AC                     l1175:
  2357                           
  2358                           ;i2c.c: 29: i2c_wait();
  2359  02AC  3182  22C0  3182   	fcall	_i2c_wait
  2360  02AF                     l186:
  2361  02AF  0008               	return
  2362  02B0                     __end_of_i2c_write:
  2363                           
  2364                           	psect	text9
  2365  0309                     __ptext9:	
  2366 ;; *************** function _i2c_stop *****************
  2367 ;; Defined at:
  2368 ;;		line 14 in file "i2c.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;                  1    wreg      void 
  2375 ;; Registers used:
  2376 ;;		None
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2386 ;;Total ram usage:        0 bytes
  2387 ;; Hardware stack levels used: 1
  2388 ;; Hardware stack levels required when called: 5
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		__write
  2393 ;;		__read
  2394 ;;		_init
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _i2c_stop
  2400  0309                     _i2c_stop:
  2401  0309                     l1167:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _i2c_stop: []
  2404                           
  2405                           
  2406                           ;i2c.c: 15: SSPCON2bits.PEN = 1;
  2407  0309  0024               	movlb	4	; select bank4
  2408  030A  1516               	bsf	22,2	;volatile
  2409  030B                     l168:	
  2410                           ;i2c.c: 16: while(SSPCON2bits.PEN);
  2411                           
  2412  030B  1916               	btfsc	22,2	;volatile
  2413  030C  2B0E               	goto	u471
  2414  030D  2B0F               	goto	u470
  2415  030E                     u471:
  2416  030E  2B0B               	goto	l168
  2417  030F                     u470:
  2418  030F                     l171:
  2419  030F  0008               	return
  2420  0310                     __end_of_i2c_stop:
  2421                           
  2422                           	psect	text10
  2423  02E2                     __ptext10:	
  2424 ;; *************** function _i2c_start *****************
  2425 ;; Defined at:
  2426 ;;		line 8 in file "i2c.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2444 ;;Total ram usage:        0 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 6
  2447 ;; This function calls:
  2448 ;;		_i2c_wait
  2449 ;; This function is called by:
  2450 ;;		__write
  2451 ;;		__read
  2452 ;;		_init
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           
  2457                           ;psect for function _i2c_start
  2458  02E2                     _i2c_start:
  2459  02E2                     l1163:	
  2460                           ;incstack = 0
  2461                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  2462                           
  2463                           
  2464                           ;i2c.c: 9: i2c_wait();
  2465  02E2  3182  22C0  3182   	fcall	_i2c_wait
  2466  02E5                     l1165:
  2467                           
  2468                           ;i2c.c: 10: SSPCON2bits.SEN = 1;
  2469  02E5  0024               	movlb	4	; select bank4
  2470  02E6  1416               	bsf	22,0	;volatile
  2471  02E7                     l162:	
  2472                           ;i2c.c: 11: while(SSPCON2bits.SEN);
  2473                           
  2474  02E7  1816               	btfsc	22,0	;volatile
  2475  02E8  2AEA               	goto	u461
  2476  02E9  2AEB               	goto	u460
  2477  02EA                     u461:
  2478  02EA  2AE7               	goto	l162
  2479  02EB                     u460:
  2480  02EB                     l165:
  2481  02EB  0008               	return
  2482  02EC                     __end_of_i2c_start:
  2483                           
  2484                           	psect	text11
  2485  02C0                     __ptext11:	
  2486 ;; *************** function _i2c_wait *****************
  2487 ;; Defined at:
  2488 ;;		line 4 in file "i2c.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;		None
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2506 ;;Total ram usage:        0 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 5
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_i2c_start
  2513 ;;		_i2c_repeated_start
  2514 ;;		_i2c_write
  2515 ;;		_i2c_read
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _i2c_wait
  2521  02C0                     _i2c_wait:
  2522  02C0                     l1151:	
  2523                           ;incstack = 0
  2524                           ; Regs used in _i2c_wait: [wreg+status,2]
  2525                           
  2526  02C0                     l1153:	
  2527                           ;i2c.c: 5: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  2528                           
  2529  02C0  0024               	movlb	4	; select bank4
  2530  02C1  0816               	movf	22,w	;volatile
  2531  02C2  391F               	andlw	31
  2532  02C3  1D03               	btfss	3,2
  2533  02C4  2AC6               	goto	u421
  2534  02C5  2AC7               	goto	u420
  2535  02C6                     u421:
  2536  02C6  2AC0               	goto	l1153
  2537  02C7                     u420:
  2538  02C7                     l1155:
  2539  02C7  1914               	btfsc	20,2	;volatile
  2540  02C8  2ACA               	goto	u431
  2541  02C9  2ACB               	goto	u430
  2542  02CA                     u431:
  2543  02CA  2AC0               	goto	l1153
  2544  02CB                     u430:
  2545  02CB                     l159:
  2546  02CB  0008               	return
  2547  02CC                     __end_of_i2c_wait:
  2548                           
  2549                           	psect	text12
  2550  02EC                     __ptext12:	
  2551 ;; *************** function _SYSTEM_Initialize *****************
  2552 ;; Defined at:
  2553 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;		None
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;		None
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      void 
  2560 ;; Registers used:
  2561 ;;		wreg, status,2, status,0, pclath, cstack
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2571 ;;Total ram usage:        0 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 6
  2574 ;; This function calls:
  2575 ;;		_OSCILLATOR_Initialize
  2576 ;;		_PIN_MANAGER_Initialize
  2577 ;;		_WDT_Initialize
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function _SYSTEM_Initialize
  2585  02EC                     _SYSTEM_Initialize:
  2586  02EC                     l1309:	
  2587                           ;incstack = 0
  2588                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2589                           
  2590                           
  2591                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  2592  02EC  3182  2240  3182   	fcall	_PIN_MANAGER_Initialize
  2593                           
  2594                           ;mcc.c: 54: OSCILLATOR_Initialize();
  2595  02EF  3183  2310  3182   	fcall	_OSCILLATOR_Initialize
  2596                           
  2597                           ;mcc.c: 55: WDT_Initialize();
  2598  02F2  3183  231E  3182   	fcall	_WDT_Initialize
  2599  02F5                     l51:
  2600  02F5  0008               	return
  2601  02F6                     __end_of_SYSTEM_Initialize:
  2602                           
  2603                           	psect	text13
  2604  031E                     __ptext13:	
  2605 ;; *************** function _WDT_Initialize *****************
  2606 ;; Defined at:
  2607 ;;		line 68 in file "mcc_generated_files/mcc.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;		None
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;		None
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2625 ;;Total ram usage:        0 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 5
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_SYSTEM_Initialize
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           
  2636                           ;psect for function _WDT_Initialize
  2637  031E                     _WDT_Initialize:
  2638  031E                     l1263:	
  2639                           ;incstack = 0
  2640                           ; Regs used in _WDT_Initialize: [wreg]
  2641                           
  2642                           
  2643                           ;mcc.c: 71: WDTCON = 0x16;
  2644  031E  3016               	movlw	22
  2645  031F  0021               	movlb	1	; select bank1
  2646  0320  0097               	movwf	23	;volatile
  2647  0321                     l57:
  2648  0321  0008               	return
  2649  0322                     __end_of_WDT_Initialize:
  2650                           
  2651                           	psect	text14
  2652  0240                     __ptext14:	
  2653 ;; *************** function _PIN_MANAGER_Initialize *****************
  2654 ;; Defined at:
  2655 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;		None
  2658 ;; Auto vars:     Size  Location     Type
  2659 ;;		None
  2660 ;; Return value:  Size  Location     Type
  2661 ;;                  1    wreg      void 
  2662 ;; Registers used:
  2663 ;;		wreg, status,2
  2664 ;; Tracked objects:
  2665 ;;		On entry : 0/0
  2666 ;;		On exit  : 0/0
  2667 ;;		Unchanged: 0/0
  2668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2673 ;;Total ram usage:        0 bytes
  2674 ;; Hardware stack levels used: 1
  2675 ;; Hardware stack levels required when called: 5
  2676 ;; This function calls:
  2677 ;;		Nothing
  2678 ;; This function is called by:
  2679 ;;		_SYSTEM_Initialize
  2680 ;; This function uses a non-reentrant model
  2681 ;;
  2682                           
  2683                           
  2684                           ;psect for function _PIN_MANAGER_Initialize
  2685  0240                     _PIN_MANAGER_Initialize:
  2686  0240                     l1241:	
  2687                           ;incstack = 0
  2688                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2689                           
  2690                           
  2691                           ;pin_manager.c: 60: LATE = 0x00;
  2692  0240  0022               	movlb	2	; select bank2
  2693  0241  0190               	clrf	16	;volatile
  2694                           
  2695                           ;pin_manager.c: 61: LATA = 0x00;
  2696  0242  018C               	clrf	12	;volatile
  2697                           
  2698                           ;pin_manager.c: 62: LATB = 0x00;
  2699  0243  018D               	clrf	13	;volatile
  2700                           
  2701                           ;pin_manager.c: 63: LATC = 0x00;
  2702  0244  018E               	clrf	14	;volatile
  2703  0245                     l1243:
  2704                           
  2705                           ;pin_manager.c: 68: TRISE = 0x08;
  2706  0245  3008               	movlw	8
  2707  0246  0021               	movlb	1	; select bank1
  2708  0247  0090               	movwf	16	;volatile
  2709  0248                     l1245:
  2710                           
  2711                           ;pin_manager.c: 69: TRISA = 0xFF;
  2712  0248  30FF               	movlw	255
  2713  0249  008C               	movwf	12	;volatile
  2714  024A                     l1247:
  2715                           
  2716                           ;pin_manager.c: 70: TRISB = 0xFF;
  2717  024A  30FF               	movlw	255
  2718  024B  008D               	movwf	13	;volatile
  2719  024C                     l1249:
  2720                           
  2721                           ;pin_manager.c: 71: TRISC = 0xFF;
  2722  024C  30FF               	movlw	255
  2723  024D  008E               	movwf	14	;volatile
  2724  024E                     l1251:
  2725                           
  2726                           ;pin_manager.c: 76: ANSELB = 0x3F;
  2727  024E  303F               	movlw	63
  2728  024F  0023               	movlb	3	; select bank3
  2729  0250  008D               	movwf	13	;volatile
  2730  0251                     l1253:
  2731                           
  2732                           ;pin_manager.c: 77: ANSELA = 0x3F;
  2733  0251  303F               	movlw	63
  2734  0252  008C               	movwf	12	;volatile
  2735                           
  2736                           ;pin_manager.c: 82: WPUE = 0x00;
  2737  0253  0024               	movlb	4	; select bank4
  2738  0254  0190               	clrf	16	;volatile
  2739                           
  2740                           ;pin_manager.c: 83: WPUB = 0x00;
  2741  0255  018D               	clrf	13	;volatile
  2742  0256                     l1255:
  2743                           
  2744                           ;pin_manager.c: 84: OPTION_REGbits.nWPUEN = 1;
  2745  0256  0021               	movlb	1	; select bank1
  2746  0257  1795               	bsf	21,7	;volatile
  2747                           
  2748                           ;pin_manager.c: 90: APFCON = 0x00;
  2749  0258  0022               	movlb	2	; select bank2
  2750  0259  019D               	clrf	29	;volatile
  2751  025A                     l31:
  2752  025A  0008               	return
  2753  025B                     __end_of_PIN_MANAGER_Initialize:
  2754                           
  2755                           	psect	text15
  2756  0310                     __ptext15:	
  2757 ;; *************** function _OSCILLATOR_Initialize *****************
  2758 ;; Defined at:
  2759 ;;		line 58 in file "mcc_generated_files/mcc.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;		None
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;		None
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2777 ;;Total ram usage:        0 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 5
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_SYSTEM_Initialize
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _OSCILLATOR_Initialize
  2789  0310                     _OSCILLATOR_Initialize:
  2790  0310                     l1257:	
  2791                           ;incstack = 0
  2792                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2793                           
  2794                           
  2795                           ;mcc.c: 61: OSCCON = 0x70;
  2796  0310  3070               	movlw	112
  2797  0311  0021               	movlb	1	; select bank1
  2798  0312  0099               	movwf	25	;volatile
  2799  0313                     l1259:
  2800                           
  2801                           ;mcc.c: 63: OSCTUNE = 0x00;
  2802  0313  0198               	clrf	24	;volatile
  2803  0314                     l1261:
  2804                           
  2805                           ;mcc.c: 65: BORCON = 0x00;
  2806  0314  0022               	movlb	2	; select bank2
  2807  0315  0196               	clrf	22	;volatile
  2808  0316                     l54:
  2809  0316  0008               	return
  2810  0317                     __end_of_OSCILLATOR_Initialize:
  2811                           
  2812                           	psect	intentry
  2813  0004                     __pintentry:	
  2814 ;; *************** function _isr *****************
  2815 ;; Defined at:
  2816 ;;		line 94 in file "main.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;		None
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  ang             1   16[BANK0 ] unsigned char 
  2821 ;;  ch              1   15[BANK0 ] unsigned char 
  2822 ;;  data            1   17[BANK0 ] unsigned char 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2833 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2834 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2836 ;;Total ram usage:        5 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 4
  2839 ;; This function calls:
  2840 ;;		_recieve_ang
  2841 ;;		_send
  2842 ;;		_servo_write
  2843 ;; This function is called by:
  2844 ;;		Interrupt level 1
  2845 ;; This function uses a non-reentrant model
  2846 ;;
  2847                           
  2848  0004                     _isr:
  2849                           
  2850                           ;incstack = 0
  2851  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2852                           
  2853                           ; Regs used in _isr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2854  0005  3180               	pagesel	$
  2855  0006                     i1l1391:
  2856                           
  2857                           ;main.c: 95: if(PIR1bits.RCIF){
  2858  0006  0020               	movlb	0	; select bank0
  2859  0007  1E91               	btfss	17,5	;volatile
  2860  0008  280A               	goto	u78_21
  2861  0009  280B               	goto	u78_20
  2862  000A                     u78_21:
  2863  000A  2853               	goto	i1l141
  2864  000B                     u78_20:
  2865  000B                     i1l1393:
  2866                           
  2867                           ;main.c: 97: PIR1bits.RCIF = 0;
  2868  000B  1291               	bcf	17,5	;volatile
  2869                           
  2870                           ;main.c: 99: if((RCSTAbits.OERR) || (RCSTAbits.FERR)){
  2871  000C  0023               	movlb	3	; select bank3
  2872  000D  189D               	btfsc	29,1	;volatile
  2873  000E  2810               	goto	u79_21
  2874  000F  2811               	goto	u79_20
  2875  0010                     u79_21:
  2876  0010  2815               	goto	i1l1397
  2877  0011                     u79_20:
  2878  0011                     i1l1395:
  2879  0011  1D1D               	btfss	29,2	;volatile
  2880  0012  2814               	goto	u80_21
  2881  0013  2815               	goto	u80_20
  2882  0014                     u80_21:
  2883  0014  2819               	goto	i1l1401
  2884  0015                     u80_20:
  2885  0015                     i1l1397:
  2886                           
  2887                           ;main.c: 100: RCSTA = 0;
  2888  0015  019D               	clrf	29	;volatile
  2889  0016                     i1l1399:
  2890                           
  2891                           ;main.c: 101: RCSTA = 0x90;
  2892  0016  3090               	movlw	144
  2893  0017  009D               	movwf	29	;volatile
  2894                           
  2895                           ;main.c: 102: }else{
  2896  0018  2853               	goto	i1l141
  2897  0019                     i1l1401:
  2898                           
  2899                           ;main.c: 104: if(flg){
  2900  0019  0020               	movlb	0	; select bank0
  2901  001A  0844               	movf	_flg,w
  2902  001B  1903               	btfsc	3,2
  2903  001C  281E               	goto	u81_21
  2904  001D  281F               	goto	u81_20
  2905  001E                     u81_21:
  2906  001E  2825               	goto	i1l1407
  2907  001F                     u81_20:
  2908  001F                     i1l1403:
  2909                           
  2910                           ;main.c: 105: LATA = 0x01;
  2911  001F  3001               	movlw	1
  2912  0020  0022               	movlb	2	; select bank2
  2913  0021  008C               	movwf	12	;volatile
  2914  0022                     i1l1405:
  2915                           
  2916                           ;main.c: 106: flg = 0;
  2917  0022  0020               	movlb	0	; select bank0
  2918  0023  01C4               	clrf	_flg
  2919                           
  2920                           ;main.c: 107: }else{
  2921  0024  282A               	goto	i1l1411
  2922  0025                     i1l1407:
  2923                           
  2924                           ;main.c: 108: LATA = 0x0;
  2925  0025  0022               	movlb	2	; select bank2
  2926  0026  018C               	clrf	12	;volatile
  2927  0027                     i1l1409:
  2928                           
  2929                           ;main.c: 109: flg = 1;
  2930  0027  0020               	movlb	0	; select bank0
  2931  0028  01C4               	clrf	_flg
  2932  0029  0AC4               	incf	_flg,f
  2933  002A                     i1l1411:
  2934                           
  2935                           ;main.c: 110: };main.c: 112: uint8_t data = RCREG;
  2936  002A  0023               	movlb	3	; select bank3
  2937  002B  0819               	movf	25,w	;volatile
  2938  002C  0020               	movlb	0	; select bank0
  2939  002D  00AD               	movwf	??_isr
  2940  002E  082D               	movf	??_isr,w
  2941  002F  00B1               	movwf	isr@data
  2942  0030                     i1l1413:
  2943                           
  2944                           ;main.c: 113: send(data);
  2945  0030  0831               	movf	isr@data,w
  2946  0031  3183  2300  3180   	fcall	_send
  2947  0034                     i1l1415:
  2948                           
  2949                           ;main.c: 114: if(data >= 0 && data <= 90){
  2950  0034  305B               	movlw	91
  2951  0035  0020               	movlb	0	; select bank0
  2952  0036  0231               	subwf	isr@data,w
  2953  0037  1803               	skipnc
  2954  0038  283A               	goto	u82_21
  2955  0039  283B               	goto	u82_20
  2956  003A                     u82_21:
  2957  003A  2853               	goto	i1l141
  2958  003B                     u82_20:
  2959  003B                     i1l1417:
  2960                           
  2961                           ;main.c: 115: uint8_t ch;;main.c: 116: uint8_t ang;;main.c: 117: recieve_ang(data, &ch, 
      +                          &ang);
  2962  003B  302F               	movlw	(low (isr@ch| 0))& (0+255)
  2963  003C  00AD               	movwf	??_isr
  2964  003D  082D               	movf	??_isr,w
  2965  003E  00F0               	movwf	recieve_ang@ch
  2966  003F  3030               	movlw	(low (isr@ang| 0))& (0+255)
  2967  0040  00AE               	movwf	??_isr+1
  2968  0041  082E               	movf	??_isr+1,w
  2969  0042  00F1               	movwf	recieve_ang@ang
  2970  0043  0831               	movf	isr@data,w
  2971  0044  3182  225B  3180   	fcall	_recieve_ang
  2972  0047                     i1l1419:
  2973                           
  2974                           ;main.c: 118: servo_write(ch, ang);
  2975  0047  0020               	movlb	0	; select bank0
  2976  0048  0830               	movf	isr@ang,w
  2977  0049  00AD               	movwf	??_isr
  2978  004A  01AE               	clrf	??_isr+1
  2979  004B  082D               	movf	??_isr,w
  2980  004C  00AA               	movwf	servo_write@ang
  2981  004D  082E               	movf	??_isr+1,w
  2982  004E  00AB               	movwf	servo_write@ang+1
  2983  004F  082F               	movf	isr@ch,w
  2984  0050  3181  216D  3180   	fcall	_servo_write
  2985  0053                     i1l141:
  2986  0053  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2987  0054  0009               	retfie
  2988  0055                     __end_of_isr:
  2989                           
  2990                           	psect	text17
  2991  016D                     __ptext17:	
  2992 ;; *************** function _servo_write *****************
  2993 ;; Defined at:
  2994 ;;		line 103 in file "PCA9685.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  ch              1    wreg     unsigned char 
  2997 ;;  ang             2   10[BANK0 ] unsigned int 
  2998 ;; Auto vars:     Size  Location     Type
  2999 ;;  ch              1   12[BANK0 ] unsigned char 
  3000 ;; Return value:  Size  Location     Type
  3001 ;;                  1    wreg      void 
  3002 ;; Registers used:
  3003 ;;		wreg, status,2, status,0, pclath, cstack
  3004 ;; Tracked objects:
  3005 ;;		On entry : 0/0
  3006 ;;		On exit  : 0/0
  3007 ;;		Unchanged: 0/0
  3008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3009 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3010 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3012 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;Total ram usage:        3 bytes
  3014 ;; Hardware stack levels used: 1
  3015 ;; Hardware stack levels required when called: 3
  3016 ;; This function calls:
  3017 ;;		_map
  3018 ;;		_set_pwm
  3019 ;; This function is called by:
  3020 ;;		_isr
  3021 ;; This function uses a non-reentrant model
  3022 ;;
  3023                           
  3024                           
  3025                           ;psect for function _servo_write
  3026  016D                     _servo_write:
  3027                           
  3028                           ;incstack = 0
  3029                           ; Regs used in _servo_write: [wreg+status,2+status,0+pclath+cstack]
  3030                           ;servo_write@ch stored from wreg
  3031  016D  0020               	movlb	0	; select bank0
  3032  016E  00AC               	movwf	servo_write@ch
  3033  016F                     i1l1347:
  3034                           
  3035                           ;PCA9685.c: 104: ang = map(ang, 0, 180, 150, 500);
  3036  016F  082B               	movf	servo_write@ang+1,w
  3037  0170  00A1               	movwf	map@x+1
  3038  0171  082A               	movf	servo_write@ang,w
  3039  0172  00A0               	movwf	map@x
  3040  0173  3000               	movlw	0
  3041  0174  00A2               	movwf	map@in_min
  3042  0175  00A3               	movwf	map@in_min+1
  3043  0176  30B4               	movlw	180
  3044  0177  00A4               	movwf	map@in_max
  3045  0178  3000               	movlw	0
  3046  0179  00A5               	movwf	map@in_max+1
  3047  017A  3096               	movlw	150
  3048  017B  00A6               	movwf	map@out_min
  3049  017C  3000               	movlw	0
  3050  017D  00A7               	movwf	map@out_min+1
  3051  017E  30F4               	movlw	244
  3052  017F  00A8               	movwf	map@out_max
  3053  0180  3001               	movlw	1
  3054  0181  00A9               	movwf	map@out_max+1
  3055  0182  3181  21BE  3181   	fcall	_map
  3056  0185  0020               	movlb	0	; select bank0
  3057  0186  0821               	movf	?_map+1,w
  3058  0187  00AB               	movwf	servo_write@ang+1
  3059  0188  0820               	movf	?_map,w
  3060  0189  00AA               	movwf	servo_write@ang
  3061                           
  3062                           ;PCA9685.c: 105: set_pwm(ch, 0, ang);
  3063  018A  3000               	movlw	0
  3064  018B  00F1               	movwf	set_pwm@on
  3065  018C  00F2               	movwf	set_pwm@on+1
  3066  018D  082B               	movf	servo_write@ang+1,w
  3067  018E  00F4               	movwf	set_pwm@off+1
  3068  018F  082A               	movf	servo_write@ang,w
  3069  0190  00F3               	movwf	set_pwm@off
  3070  0191  082C               	movf	servo_write@ch,w
  3071  0192  3181  2196  3181   	fcall	_set_pwm
  3072  0195                     i1l225:
  3073  0195  0008               	return
  3074  0196                     __end_of_servo_write:
  3075                           
  3076                           	psect	text18
  3077  0196                     __ptext18:	
  3078 ;; *************** function _set_pwm *****************
  3079 ;; Defined at:
  3080 ;;		line 62 in file "PCA9685.c"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  num             1    wreg     unsigned char 
  3083 ;;  on              2    1[COMMON] unsigned int 
  3084 ;;  off             2    3[COMMON] unsigned int 
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;  num             1    6[COMMON] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		wreg, status,2, status,0, pclath, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3099 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;Total ram usage:        6 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; Hardware stack levels required when called: 2
  3103 ;; This function calls:
  3104 ;;		i1_i2c_start
  3105 ;;		i1_i2c_stop
  3106 ;;		i1_i2c_write
  3107 ;; This function is called by:
  3108 ;;		_servo_write
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           
  3113                           ;psect for function _set_pwm
  3114  0196                     _set_pwm:
  3115                           
  3116                           ;incstack = 0
  3117                           ; Regs used in _set_pwm: [wreg+status,2+status,0+pclath+cstack]
  3118                           ;set_pwm@num stored from wreg
  3119  0196  00F6               	movwf	set_pwm@num
  3120  0197                     i1l1275:
  3121                           
  3122                           ;PCA9685.c: 63: i2c_start();
  3123  0197  3182  22F6  3181   	fcall	i1_i2c_start
  3124                           
  3125                           ;PCA9685.c: 64: i2c_write(0x80);
  3126  019A  3080               	movlw	128
  3127  019B  3182  22B0  3181   	fcall	i1_i2c_write
  3128                           
  3129                           ;PCA9685.c: 65: i2c_write(0x06 + 4 * num);
  3130  019E  0876               	movf	set_pwm@num,w
  3131  019F  00F5               	movwf	??_set_pwm
  3132  01A0  3001               	movlw	1
  3133  01A1                     u67_25:
  3134  01A1  35F5               	lslf	??_set_pwm,f
  3135  01A2  3EFF               	addlw	-1
  3136  01A3  1D03               	skipz
  3137  01A4  29A1               	goto	u67_25
  3138  01A5  3575               	lslf	??_set_pwm,w
  3139  01A6  3E06               	addlw	6
  3140  01A7  3182  22B0  3181   	fcall	i1_i2c_write
  3141                           
  3142                           ;PCA9685.c: 66: i2c_write(on);
  3143  01AA  0871               	movf	set_pwm@on,w
  3144  01AB  3182  22B0  3181   	fcall	i1_i2c_write
  3145                           
  3146                           ;PCA9685.c: 67: i2c_write(on >> 8);
  3147  01AE  0872               	movf	set_pwm@on+1,w
  3148  01AF  3182  22B0  3181   	fcall	i1_i2c_write
  3149                           
  3150                           ;PCA9685.c: 68: i2c_write(off);
  3151  01B2  0873               	movf	set_pwm@off,w
  3152  01B3  3182  22B0  3181   	fcall	i1_i2c_write
  3153                           
  3154                           ;PCA9685.c: 69: i2c_write(off >> 8);
  3155  01B6  0874               	movf	set_pwm@off+1,w
  3156  01B7  3182  22B0  3181   	fcall	i1_i2c_write
  3157  01BA                     i1l1277:
  3158                           
  3159                           ;PCA9685.c: 70: i2c_stop();
  3160  01BA  3183  2317  3181   	fcall	i1_i2c_stop
  3161  01BD                     i1l216:
  3162  01BD  0008               	return
  3163  01BE                     __end_of_set_pwm:
  3164                           
  3165                           	psect	text19
  3166  02B0                     __ptext19:	
  3167 ;; *************** function i1_i2c_write *****************
  3168 ;; Defined at:
  3169 ;;		line 25 in file "i2c.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  data            1    wreg     unsigned char 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  data            1    0[COMMON] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, status,2, status,0, pclath, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3187 ;;Total ram usage:        1 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 1
  3190 ;; This function calls:
  3191 ;;		i1_i2c_wait
  3192 ;; This function is called by:
  3193 ;;		_set_pwm
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           
  3198                           ;psect for function i1_i2c_write
  3199  02B0                     i1_i2c_write:
  3200                           
  3201                           ;incstack = 0
  3202                           ; Regs used in i1_i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3203                           ;i1i2c_write@data stored from wreg
  3204  02B0  00F0               	movwf	i1i2c_write@data
  3205  02B1                     i1l1211:
  3206                           
  3207                           ;i2c.c: 26: SSPBUF = data;
  3208  02B1  0870               	movf	i1i2c_write@data,w
  3209  02B2  0024               	movlb	4	; select bank4
  3210  02B3  0091               	movwf	17	;volatile
  3211  02B4                     i1l180:	
  3212                           ;i2c.c: 27: while(SSPSTATbits.BF);
  3213                           
  3214  02B4  1814               	btfsc	20,0	;volatile
  3215  02B5  2AB7               	goto	u58_21
  3216  02B6  2AB8               	goto	u58_20
  3217  02B7                     u58_21:
  3218  02B7  2AB4               	goto	i1l180
  3219  02B8                     u58_20:
  3220  02B8                     i1l183:
  3221  02B8  1B16               	btfsc	22,6	;volatile
  3222  02B9  2ABB               	goto	u59_21
  3223  02BA  2ABC               	goto	u59_20
  3224  02BB                     u59_21:
  3225  02BB  2AB8               	goto	i1l183
  3226  02BC                     u59_20:
  3227  02BC                     i1l1213:
  3228                           
  3229                           ;i2c.c: 29: i2c_wait();
  3230  02BC  3182  22CC  3182   	fcall	i1_i2c_wait
  3231  02BF                     i1l186:
  3232  02BF  0008               	return
  3233  02C0                     __end_ofi1_i2c_write:
  3234                           
  3235                           	psect	text20
  3236  0317                     __ptext20:	
  3237 ;; *************** function i1_i2c_stop *****************
  3238 ;; Defined at:
  3239 ;;		line 14 in file "i2c.c"
  3240 ;; Parameters:    Size  Location     Type
  3241 ;;		None
  3242 ;; Auto vars:     Size  Location     Type
  3243 ;;		None
  3244 ;; Return value:  Size  Location     Type
  3245 ;;                  1    wreg      void 
  3246 ;; Registers used:
  3247 ;;		None
  3248 ;; Tracked objects:
  3249 ;;		On entry : 0/0
  3250 ;;		On exit  : 0/0
  3251 ;;		Unchanged: 0/0
  3252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3257 ;;Total ram usage:        0 bytes
  3258 ;; Hardware stack levels used: 1
  3259 ;; This function calls:
  3260 ;;		Nothing
  3261 ;; This function is called by:
  3262 ;;		_set_pwm
  3263 ;; This function uses a non-reentrant model
  3264 ;;
  3265                           
  3266                           
  3267                           ;psect for function i1_i2c_stop
  3268  0317                     i1_i2c_stop:
  3269  0317                     i1l1209:	
  3270                           ;incstack = 0
  3271                           ; Regs used in i1_i2c_stop: []
  3272                           
  3273                           
  3274                           ;i2c.c: 15: SSPCON2bits.PEN = 1;
  3275  0317  0024               	movlb	4	; select bank4
  3276  0318  1516               	bsf	22,2	;volatile
  3277  0319                     i1l168:	
  3278                           ;i2c.c: 16: while(SSPCON2bits.PEN);
  3279                           
  3280  0319  1916               	btfsc	22,2	;volatile
  3281  031A  2B1C               	goto	u57_21
  3282  031B  2B1D               	goto	u57_20
  3283  031C                     u57_21:
  3284  031C  2B19               	goto	i1l168
  3285  031D                     u57_20:
  3286  031D                     i1l171:
  3287  031D  0008               	return
  3288  031E                     __end_ofi1_i2c_stop:
  3289                           
  3290                           	psect	text21
  3291  02F6                     __ptext21:	
  3292 ;; *************** function i1_i2c_start *****************
  3293 ;; Defined at:
  3294 ;;		line 8 in file "i2c.c"
  3295 ;; Parameters:    Size  Location     Type
  3296 ;;		None
  3297 ;; Auto vars:     Size  Location     Type
  3298 ;;		None
  3299 ;; Return value:  Size  Location     Type
  3300 ;;                  1    wreg      void 
  3301 ;; Registers used:
  3302 ;;		wreg, status,2, status,0, pclath, cstack
  3303 ;; Tracked objects:
  3304 ;;		On entry : 0/0
  3305 ;;		On exit  : 0/0
  3306 ;;		Unchanged: 0/0
  3307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3312 ;;Total ram usage:        0 bytes
  3313 ;; Hardware stack levels used: 1
  3314 ;; Hardware stack levels required when called: 1
  3315 ;; This function calls:
  3316 ;;		i1_i2c_wait
  3317 ;; This function is called by:
  3318 ;;		_set_pwm
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function i1_i2c_start
  3324  02F6                     i1_i2c_start:
  3325  02F6                     i1l1205:	
  3326                           ;incstack = 0
  3327                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3328                           
  3329                           
  3330                           ;i2c.c: 9: i2c_wait();
  3331  02F6  3182  22CC  3182   	fcall	i1_i2c_wait
  3332  02F9                     i1l1207:
  3333                           
  3334                           ;i2c.c: 10: SSPCON2bits.SEN = 1;
  3335  02F9  0024               	movlb	4	; select bank4
  3336  02FA  1416               	bsf	22,0	;volatile
  3337  02FB                     i1l162:	
  3338                           ;i2c.c: 11: while(SSPCON2bits.SEN);
  3339                           
  3340  02FB  1816               	btfsc	22,0	;volatile
  3341  02FC  2AFE               	goto	u56_21
  3342  02FD  2AFF               	goto	u56_20
  3343  02FE                     u56_21:
  3344  02FE  2AFB               	goto	i1l162
  3345  02FF                     u56_20:
  3346  02FF                     i1l165:
  3347  02FF  0008               	return
  3348  0300                     __end_ofi1_i2c_start:
  3349                           
  3350                           	psect	text22
  3351  02CC                     __ptext22:	
  3352 ;; *************** function i1_i2c_wait *****************
  3353 ;; Defined at:
  3354 ;;		line 4 in file "i2c.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;		None
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3372 ;;Total ram usage:        0 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		i1_i2c_start
  3378 ;;		i1_i2c_write
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function i1_i2c_wait
  3384  02CC                     i1_i2c_wait:
  3385  02CC                     i1l1157:	
  3386                           ;incstack = 0
  3387                           ; Regs used in i1_i2c_wait: [wreg+status,2]
  3388                           
  3389  02CC                     i1l1159:	
  3390                           ;i2c.c: 5: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  3391                           
  3392  02CC  0024               	movlb	4	; select bank4
  3393  02CD  0816               	movf	22,w	;volatile
  3394  02CE  391F               	andlw	31
  3395  02CF  1D03               	btfss	3,2
  3396  02D0  2AD2               	goto	u44_21
  3397  02D1  2AD3               	goto	u44_20
  3398  02D2                     u44_21:
  3399  02D2  2ACC               	goto	i1l1159
  3400  02D3                     u44_20:
  3401  02D3                     i1l1161:
  3402  02D3  1914               	btfsc	20,2	;volatile
  3403  02D4  2AD6               	goto	u45_21
  3404  02D5  2AD7               	goto	u45_20
  3405  02D6                     u45_21:
  3406  02D6  2ACC               	goto	i1l1159
  3407  02D7                     u45_20:
  3408  02D7                     i1l159:
  3409  02D7  0008               	return
  3410  02D8                     __end_ofi1_i2c_wait:
  3411                           
  3412                           	psect	text23
  3413  01BE                     __ptext23:	
  3414 ;; *************** function _map *****************
  3415 ;; Defined at:
  3416 ;;		line 94 in file "PCA9685.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;  x               2    0[BANK0 ] unsigned int 
  3419 ;;  in_min          2    2[BANK0 ] unsigned int 
  3420 ;;  in_max          2    4[BANK0 ] unsigned int 
  3421 ;;  out_min         2    6[BANK0 ] unsigned int 
  3422 ;;  out_max         2    8[BANK0 ] unsigned int 
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;		None
  3425 ;; Return value:  Size  Location     Type
  3426 ;;                  2    0[BANK0 ] unsigned int 
  3427 ;; Registers used:
  3428 ;;		wreg, status,2, status,0, pclath, cstack
  3429 ;; Tracked objects:
  3430 ;;		On entry : 0/0
  3431 ;;		On exit  : 0/0
  3432 ;;		Unchanged: 0/0
  3433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3434 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3437 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3438 ;;Total ram usage:       10 bytes
  3439 ;; Hardware stack levels used: 1
  3440 ;; Hardware stack levels required when called: 1
  3441 ;; This function calls:
  3442 ;;		___wmul
  3443 ;;		i1___lwdiv
  3444 ;; This function is called by:
  3445 ;;		_servo_write
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           
  3450                           ;psect for function _map
  3451  01BE                     _map:
  3452  01BE                     i1l1279:	
  3453                           ;incstack = 0
  3454                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  3455                           
  3456                           
  3457                           ;PCA9685.c: 95: return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  3458  01BE  0020               	movlb	0	; select bank0
  3459  01BF  0822               	movf	map@in_min,w
  3460  01C0  0224               	subwf	map@in_max,w
  3461  01C1  00F6               	movwf	i1___lwdiv@divisor
  3462  01C2  0823               	movf	map@in_min+1,w
  3463  01C3  3B25               	subwfb	map@in_max+1,w
  3464  01C4  00F7               	movwf	i1___lwdiv@divisor+1
  3465  01C5  0822               	movf	map@in_min,w
  3466  01C6  0220               	subwf	map@x,w
  3467  01C7  00F0               	movwf	___wmul@multiplier
  3468  01C8  0823               	movf	map@in_min+1,w
  3469  01C9  3B21               	subwfb	map@x+1,w
  3470  01CA  00F1               	movwf	___wmul@multiplier+1
  3471  01CB  0826               	movf	map@out_min,w
  3472  01CC  0228               	subwf	map@out_max,w
  3473  01CD  00F2               	movwf	___wmul@multiplicand
  3474  01CE  0827               	movf	map@out_min+1,w
  3475  01CF  3B29               	subwfb	map@out_max+1,w
  3476  01D0  00F3               	movwf	___wmul@multiplicand+1
  3477  01D1  3182  2206  3181   	fcall	___wmul
  3478  01D4  0871               	movf	?___wmul+1,w
  3479  01D5  00F9               	movwf	i1___lwdiv@dividend+1
  3480  01D6  0870               	movf	?___wmul,w
  3481  01D7  00F8               	movwf	i1___lwdiv@dividend
  3482  01D8  3181  2131  3181   	fcall	i1___lwdiv
  3483  01DB  0020               	movlb	0	; select bank0
  3484  01DC  0826               	movf	map@out_min,w
  3485  01DD  0776               	addwf	?i1___lwdiv,w
  3486  01DE  00A0               	movwf	?_map
  3487  01DF  0827               	movf	map@out_min+1,w
  3488  01E0  3D77               	addwfc	?i1___lwdiv+1,w
  3489  01E1  00A1               	movwf	?_map+1
  3490  01E2                     i1l222:
  3491  01E2  0008               	return
  3492  01E3                     __end_of_map:
  3493                           
  3494                           	psect	text24
  3495  0131                     __ptext24:	
  3496 ;; *************** function i1___lwdiv *****************
  3497 ;; Defined at:
  3498 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  divisor         2    6[COMMON] unsigned int 
  3501 ;;  dividend        2    8[COMMON] unsigned int 
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;  quotient        2   11[COMMON] unsigned int 
  3504 ;;  counter         1   13[COMMON] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  2    6[COMMON] unsigned int 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3514 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3515 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3516 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3517 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3518 ;;Total ram usage:        8 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_map
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           
  3528                           ;psect for function i1___lwdiv
  3529  0131                     i1___lwdiv:
  3530  0131                     i1l1215:	
  3531                           ;incstack = 0
  3532                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  3533                           
  3534  0131  01FB               	clrf	i1___lwdiv@quotient
  3535  0132  01FC               	clrf	i1___lwdiv@quotient+1
  3536  0133                     i1l1217:
  3537  0133  0876               	movf	i1___lwdiv@divisor,w
  3538  0134  0477               	iorwf	i1___lwdiv@divisor+1,w
  3539  0135  1903               	btfsc	3,2
  3540  0136  2938               	goto	u60_21
  3541  0137  2939               	goto	u60_20
  3542  0138                     u60_21:
  3543  0138  2968               	goto	i1l1237
  3544  0139                     u60_20:
  3545  0139                     i1l1219:
  3546  0139  01FD               	clrf	i1___lwdiv@counter
  3547  013A  0AFD               	incf	i1___lwdiv@counter,f
  3548  013B  2945               	goto	i1l1225
  3549  013C                     i1l1221:
  3550  013C  3001               	movlw	1
  3551  013D                     u61_25:
  3552  013D  35F6               	lslf	i1___lwdiv@divisor,f
  3553  013E  0DF7               	rlf	i1___lwdiv@divisor+1,f
  3554  013F  0B89               	decfsz	9,f
  3555  0140  293D               	goto	u61_25
  3556  0141                     i1l1223:
  3557  0141  3001               	movlw	1
  3558  0142  00FA               	movwf	??i1___lwdiv
  3559  0143  087A               	movf	??i1___lwdiv,w
  3560  0144  07FD               	addwf	i1___lwdiv@counter,f
  3561  0145                     i1l1225:
  3562  0145  1FF7               	btfss	i1___lwdiv@divisor+1,7
  3563  0146  2948               	goto	u62_21
  3564  0147  2949               	goto	u62_20
  3565  0148                     u62_21:
  3566  0148  293C               	goto	i1l1221
  3567  0149                     u62_20:
  3568  0149                     i1l1227:
  3569  0149  3001               	movlw	1
  3570  014A                     u63_25:
  3571  014A  35FB               	lslf	i1___lwdiv@quotient,f
  3572  014B  0DFC               	rlf	i1___lwdiv@quotient+1,f
  3573  014C  0B89               	decfsz	9,f
  3574  014D  294A               	goto	u63_25
  3575  014E  0877               	movf	i1___lwdiv@divisor+1,w
  3576  014F  0279               	subwf	i1___lwdiv@dividend+1,w
  3577  0150  1D03               	skipz
  3578  0151  2954               	goto	u64_25
  3579  0152  0876               	movf	i1___lwdiv@divisor,w
  3580  0153  0278               	subwf	i1___lwdiv@dividend,w
  3581  0154                     u64_25:
  3582  0154  1C03               	skipc
  3583  0155  2957               	goto	u64_21
  3584  0156  2958               	goto	u64_20
  3585  0157                     u64_21:
  3586  0157  295D               	goto	i1l1233
  3587  0158                     u64_20:
  3588  0158                     i1l1229:
  3589  0158  0876               	movf	i1___lwdiv@divisor,w
  3590  0159  02F8               	subwf	i1___lwdiv@dividend,f
  3591  015A  0877               	movf	i1___lwdiv@divisor+1,w
  3592  015B  3BF9               	subwfb	i1___lwdiv@dividend+1,f
  3593  015C                     i1l1231:
  3594  015C  147B               	bsf	i1___lwdiv@quotient,0
  3595  015D                     i1l1233:
  3596  015D  3001               	movlw	1
  3597  015E                     u65_25:
  3598  015E  36F7               	lsrf	i1___lwdiv@divisor+1,f
  3599  015F  0CF6               	rrf	i1___lwdiv@divisor,f
  3600  0160  0B89               	decfsz	9,f
  3601  0161  295E               	goto	u65_25
  3602  0162                     i1l1235:
  3603  0162  3001               	movlw	1
  3604  0163  02FD               	subwf	i1___lwdiv@counter,f
  3605  0164  1D03               	btfss	3,2
  3606  0165  2967               	goto	u66_21
  3607  0166  2968               	goto	u66_20
  3608  0167                     u66_21:
  3609  0167  2949               	goto	i1l1227
  3610  0168                     u66_20:
  3611  0168                     i1l1237:
  3612  0168  087C               	movf	i1___lwdiv@quotient+1,w
  3613  0169  00F7               	movwf	?i1___lwdiv+1
  3614  016A  087B               	movf	i1___lwdiv@quotient,w
  3615  016B  00F6               	movwf	?i1___lwdiv
  3616  016C                     i1l647:
  3617  016C  0008               	return
  3618  016D                     __end_ofi1___lwdiv:
  3619                           
  3620                           	psect	text25
  3621  0206                     __ptext25:	
  3622 ;; *************** function ___wmul *****************
  3623 ;; Defined at:
  3624 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  3625 ;; Parameters:    Size  Location     Type
  3626 ;;  multiplier      2    0[COMMON] unsigned int 
  3627 ;;  multiplicand    2    2[COMMON] unsigned int 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  product         2    4[COMMON] unsigned int 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  2    0[COMMON] unsigned int 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3643 ;;Total ram usage:        6 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_map
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           
  3653                           ;psect for function ___wmul
  3654  0206                     ___wmul:
  3655  0206                     i1l1191:	
  3656                           ;incstack = 0
  3657                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3658                           
  3659  0206  01F4               	clrf	___wmul@product
  3660  0207  01F5               	clrf	___wmul@product+1
  3661  0208                     i1l1193:
  3662  0208  1C70               	btfss	___wmul@multiplier,0
  3663  0209  2A0B               	goto	u52_21
  3664  020A  2A0C               	goto	u52_20
  3665  020B                     u52_21:
  3666  020B  2A10               	goto	i1l375
  3667  020C                     u52_20:
  3668  020C                     i1l1195:
  3669  020C  0872               	movf	___wmul@multiplicand,w
  3670  020D  07F4               	addwf	___wmul@product,f
  3671  020E  0873               	movf	___wmul@multiplicand+1,w
  3672  020F  3DF5               	addwfc	___wmul@product+1,f
  3673  0210                     i1l375:
  3674  0210  3001               	movlw	1
  3675  0211                     u53_25:
  3676  0211  35F2               	lslf	___wmul@multiplicand,f
  3677  0212  0DF3               	rlf	___wmul@multiplicand+1,f
  3678  0213  0B89               	decfsz	9,f
  3679  0214  2A11               	goto	u53_25
  3680  0215                     i1l1197:
  3681  0215  3001               	movlw	1
  3682  0216                     u54_25:
  3683  0216  36F1               	lsrf	___wmul@multiplier+1,f
  3684  0217  0CF0               	rrf	___wmul@multiplier,f
  3685  0218  0B89               	decfsz	9,f
  3686  0219  2A16               	goto	u54_25
  3687  021A                     i1l1199:
  3688  021A  0870               	movf	___wmul@multiplier,w
  3689  021B  0471               	iorwf	___wmul@multiplier+1,w
  3690  021C  1D03               	btfss	3,2
  3691  021D  2A1F               	goto	u55_21
  3692  021E  2A20               	goto	u55_20
  3693  021F                     u55_21:
  3694  021F  2A08               	goto	i1l1193
  3695  0220                     u55_20:
  3696  0220                     i1l1201:
  3697  0220  0875               	movf	___wmul@product+1,w
  3698  0221  00F1               	movwf	?___wmul+1
  3699  0222  0874               	movf	___wmul@product,w
  3700  0223  00F0               	movwf	?___wmul
  3701  0224                     i1l377:
  3702  0224  0008               	return
  3703  0225                     __end_of___wmul:
  3704                           
  3705                           	psect	text26
  3706  0300                     __ptext26:	
  3707 ;; *************** function _send *****************
  3708 ;; Defined at:
  3709 ;;		line 70 in file "main.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  data            1    wreg     unsigned char 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  data            1    0[COMMON] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      void 
  3716 ;; Registers used:
  3717 ;;		wreg
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3724 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3727 ;;Total ram usage:        1 bytes
  3728 ;; Hardware stack levels used: 1
  3729 ;; This function calls:
  3730 ;;		Nothing
  3731 ;; This function is called by:
  3732 ;;		_isr
  3733 ;; This function uses a non-reentrant model
  3734 ;;
  3735                           
  3736                           
  3737                           ;psect for function _send
  3738  0300                     _send:
  3739                           
  3740                           ;incstack = 0
  3741                           ; Regs used in _send: [wreg]
  3742                           ;send@data stored from wreg
  3743  0300  00F0               	movwf	send@data
  3744  0301                     i1l1337:
  3745  0301                     i1l120:	
  3746                           ;main.c: 71: while(!TXSTAbits.TRMT);
  3747                           
  3748  0301  0023               	movlb	3	; select bank3
  3749  0302  1C9E               	btfss	30,1	;volatile
  3750  0303  2B05               	goto	u75_21
  3751  0304  2B06               	goto	u75_20
  3752  0305                     u75_21:
  3753  0305  2B01               	goto	i1l120
  3754  0306                     u75_20:
  3755  0306                     i1l1339:
  3756                           
  3757                           ;main.c: 72: TXREG = data;
  3758  0306  0870               	movf	send@data,w
  3759  0307  009A               	movwf	26	;volatile
  3760  0308                     i1l123:
  3761  0308  0008               	return
  3762  0309                     __end_of_send:
  3763                           
  3764                           	psect	text27
  3765  025B                     __ptext27:	
  3766 ;; *************** function _recieve_ang *****************
  3767 ;; Defined at:
  3768 ;;		line 82 in file "main.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  data            1    wreg     unsigned char 
  3771 ;;  ch              1    0[COMMON] PTR unsigned char 
  3772 ;;		 -> isr@ch(1), 
  3773 ;;  ang             1    1[COMMON] PTR unsigned char 
  3774 ;;		 -> isr@ang(1), 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  data            1    3[COMMON] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  1    wreg      void 
  3779 ;; Registers used:
  3780 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3789 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3790 ;;Total ram usage:        4 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_isr
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function _recieve_ang
  3801  025B                     _recieve_ang:
  3802                           
  3803                           ;incstack = 0
  3804                           ; Regs used in _recieve_ang: [wreg+fsr1l+fsr1h+status,2+status,0]
  3805                           ;recieve_ang@data stored from wreg
  3806  025B  00F3               	movwf	recieve_ang@data
  3807  025C                     i1l1341:
  3808                           
  3809                           ;main.c: 83: const uint8_t mask = 0x80;;main.c: 85: (*ch) = (mask & data) ? 1 : 0;
  3810  025C  1BF3               	btfsc	recieve_ang@data,7
  3811  025D  2A5F               	goto	u76_21
  3812  025E  2A61               	goto	u76_20
  3813  025F                     u76_21:
  3814  025F  3001               	movlw	1
  3815  0260  2A62               	goto	u77_20
  3816  0261                     u76_20:
  3817  0261  3000               	movlw	0
  3818  0262                     u77_20:
  3819  0262  00F2               	movwf	??_recieve_ang
  3820  0263  0870               	movf	recieve_ang@ch,w
  3821  0264  0086               	movwf	6
  3822  0265  0187               	clrf	7
  3823  0266  0872               	movf	??_recieve_ang,w
  3824  0267  0081               	movwf	1
  3825  0268                     i1l1343:
  3826                           
  3827                           ;main.c: 87: data = data & ~mask;
  3828  0268  0873               	movf	recieve_ang@data,w
  3829  0269  397F               	andlw	127
  3830  026A  00F2               	movwf	??_recieve_ang
  3831  026B  0872               	movf	??_recieve_ang,w
  3832  026C  00F3               	movwf	recieve_ang@data
  3833  026D                     i1l1345:
  3834                           
  3835                           ;main.c: 88: (*ang) = data * 2;
  3836  026D  3573               	lslf	recieve_ang@data,w
  3837  026E  00F2               	movwf	??_recieve_ang
  3838  026F  0871               	movf	recieve_ang@ang,w
  3839  0270  0086               	movwf	6
  3840  0271  0187               	clrf	7
  3841  0272  0872               	movf	??_recieve_ang,w
  3842  0273  0081               	movwf	1
  3843  0274                     i1l128:
  3844  0274  0008               	return
  3845  0275                     __end_of_recieve_ang:
  3846  007E                     btemp	set	126	;btemp
  3847  007E                     int$flags	set	126
  3848  007E                     wtemp0	set	126
  3849                           
  3850                           	psect	config
  3851                           
  3852                           ;Config register CONFIG1 @ 0x8007
  3853                           ;	Oscillator Selection
  3854                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3855                           ;	Watchdog Timer Enable
  3856                           ;	WDTE = OFF, WDT disabled
  3857                           ;	Power-up Timer Enable
  3858                           ;	PWRTE = OFF, PWRT disabled
  3859                           ;	MCLR Pin Function Select
  3860                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3861                           ;	Flash Program Memory Code Protection
  3862                           ;	CP = OFF, Program memory code protection is disabled
  3863                           ;	Data Memory Code Protection
  3864                           ;	CPD = OFF, Data memory code protection is disabled
  3865                           ;	Brown-out Reset Enable
  3866                           ;	BOREN = ON, Brown-out Reset enabled
  3867                           ;	Clock Out Enable
  3868                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3869                           ;	Internal/External Switchover
  3870                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3871                           ;	Fail-Safe Clock Monitor Enable
  3872                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3873  8007                     	org	32775
  3874  8007  3FE4               	dw	16356
  3875                           
  3876                           ;Config register CONFIG2 @ 0x8008
  3877                           ;	Flash Memory Self-Write Protection
  3878                           ;	WRT = OFF, Write protection off
  3879                           ;	Voltage Regulator Capacitor Enable
  3880                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  3881                           ;	PLL Enable
  3882                           ;	PLLEN = OFF, 4x PLL disabled
  3883                           ;	Stack Overflow/Underflow Reset Enable
  3884                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3885                           ;	Brown-out Reset Voltage Selection
  3886                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3887                           ;	Low-Voltage Programming Enable
  3888                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3889  8008                     	org	32776
  3890  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     36      37
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    recieve_ang@ang	PTR unsigned char  size(1) Largest target is 1
		 -> isr@ang(BANK0[1]), 

    recieve_ang@ch	PTR unsigned char  size(1) Largest target is 1
		 -> isr@ch(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _set_pwm->i1_i2c_write
    _map->i1___lwdiv
    i1___lwdiv->___wmul

Critical Paths under _main in BANK0

    _main->_set_pwm_freq
    _set_pwm_freq->___lwdiv
    __write->_i2c_write
    __read->_i2c_read
    _init->_i2c_write

Critical Paths under _isr in BANK0

    _isr->_servo_write
    _servo_write->_map

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1176
                                             34 BANK0      2     2      0
                  _SYSTEM_Initialize
                               _init
                       _set_pwm_freq
 ---------------------------------------------------------------------------------
 (1) _set_pwm_freq                                         8     6      2    1154
                                             26 BANK0      8     6      2
                            ___lwdiv
                              __read
                             __write
 ---------------------------------------------------------------------------------
 (2) __write                                               2     1      1     370
                                             19 BANK0      2     1      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) __read                                                3     3      0     112
                                             21 BANK0      3     3      0
                           _i2c_read
                 _i2c_repeated_start
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_repeated_start                                   0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             3     3      0      45
                                             18 BANK0      3     3      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     414
                                             18 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0      22
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                             18 BANK0      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  5     5      0    1863
                                             13 BANK0      5     5      0
                        _recieve_ang
                               _send
                        _servo_write
 ---------------------------------------------------------------------------------
 (6) _servo_write                                          3     1      2    1419
                                             10 BANK0      3     1      2
                                _map
                            _set_pwm
 ---------------------------------------------------------------------------------
 (7) _set_pwm                                              6     2      4     284
                                              1 COMMON     6     2      4
                        i1_i2c_start
                         i1_i2c_stop
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (8) i1_i2c_write                                          1     1      0      22
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (8) i1_i2c_stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_i2c_start                                          0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (9) i1_i2c_wait                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _map                                                 10     0     10     992
                                              0 BANK0     10     0     10
                             ___wmul
                          i1___lwdiv
 ---------------------------------------------------------------------------------
 (8) i1___lwdiv                                            8     4      4     214
                                              6 COMMON     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) _send                                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _recieve_ang                                          4     2      2     263
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _init
     _i2c_start
       _i2c_wait
     _i2c_stop
     _i2c_write
       _i2c_wait
   _set_pwm_freq
     ___lwdiv
     __read
       _i2c_read
         _i2c_wait
       _i2c_repeated_start
         _i2c_wait
       _i2c_start
       _i2c_stop
       _i2c_write
     __write
       _i2c_start
       _i2c_stop
       _i2c_write

 _isr (ROOT)
   _recieve_ang
   _send
   _servo_write
     _map
       ___wmul
       i1___lwdiv
         ___wmul (ARG)
     _set_pwm
       i1_i2c_start
         i1_i2c_wait
       i1_i2c_stop
       i1_i2c_write
         i1_i2c_wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      25       5       46.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      33      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      33      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jul 10 23:04:33 2021

        set_pwm_freq@prescaleval 003F                      _SSPSTATbits 0214                               l31 025A  
                             l51 02F5                               l54 0316                               l57 0321  
            ___wmul@multiplicand 0072                              l210 0205                              l114 00F1  
                            l115 00F1                              l213 029E                              l207 028B  
                            l162 02E7                              l171 030F                              l219 00B5  
                            l180 02A4                              l165 02EB                              l174 02DD  
                            l159 02CB                              l183 02A8                              l191 0232  
                            l168 030B                              l192 023F                              l177 02E1  
                            l186 02AF                              l189 022E                              l647 0130  
                            _GIE 005F                              u420 02C7                              u500 02AC  
                            u421 02C6                              u501 02AB                              u430 02CB  
                            u510 0232                              u431 02CA                              u511 0231  
                            u460 02EB                              u700 010D                              u461 02EA  
                            u701 010C                              u470 030F                              u471 030E  
                            u720 011C                              u480 02E1                              u721 011B  
                            u481 02E0                              u490 02A8                              u491 02A7  
                            u715 010E                              u740 012C                              u741 012B  
                            u725 0118                              u735 0122                              u680 00FD  
                            u681 00FC                              u837 00CD                              u695 0101  
                            u847 00A6                              _flg 0044                              _map 01BE  
                            _isr 0004                              wreg 0009                             l1301 0121  
                           l1151 02C0                             l1311 028C                             l1303 0126  
                           l1241 0240                             l1153 02C0                             l1313 029B  
                           l1305 012C                             l1321 0076                             l1251 024E  
                           l1243 0245                             l1155 02C7                             l1163 02E2  
                           l1171 02DB                             l1331 0099                             l1323 007A  
                           l1315 005D                             l1261 0314                             l1253 0251  
                           l1245 0248                             l1309 02EC                             l1165 02E5  
                           l1173 02A1                             l1181 0233                             l1333 00A2  
                           l1325 0082                             l1317 0062                             l1255 0256  
                           l1247 024A                             l1263 031E                             l1167 0309  
                           l1175 02AC                             l1183 0238                             l1271 0200  
                           l1335 00AB                             l1327 0088                             l1319 0072  
                           l1351 00B9                             l1257 0310                             l1249 024C  
                           l1185 023A                             l1177 0227                             l1169 02D8  
                           l1265 0277                             l1329 0090                             l1361 00C3  
                           l1353 00BB                             l1259 0313                             l1291 0105  
                           l1283 00F4                             l1187 023D                             l1179 022D  
                           l1267 0288                             l1371 00D7                             l1363 00C5  
                           l1355 00BC                             l1293 0109                             l1285 00F7  
                           l1269 01E5                             l1381 00E8                             l1373 00DF  
                           l1365 00C6                             l1357 00BE                             l1349 00B6  
                           l1295 010D                             l1287 00FD                             l1383 00EA  
                           l1375 00E2                             l1367 00C7                             l1359 00C0  
                           l1297 011C                             l1289 0100                             l1385 00EC  
                           l1377 00E4                             l1369 00D4                             l1299 0120  
                           l1387 00ED                             l1379 00E6                             l1389 00EE  
                           ?_map 0020                             ?_isr 0070                             _LATA 010C  
                           _LATB 010D                             _LATC 010E                             _LATE 0110  
                           _PEIE 005E                             _WPUB 020D                             _WPUE 0210  
                           _main 00B6                             _init 028C                             _send 0300  
                           fsr1h 0007                             indf1 0001                             fsr1l 0006  
                           map@x 0020                             btemp 007E                             start 0055  
                          ??_map 007E                            ??_isr 002D   __size_of_OSCILLATOR_Initialize 0007  
  __end_of_OSCILLATOR_Initialize 0317                            ?_main 0070                            ?_init 0070  
                          ?_send 0070                      i2c_read@ack 0033                  __end_of___lwdiv 0131  
                          i1l120 0301                            i1l123 0308                            i1l141 0053  
                          i1l222 01E2                            i1l128 0274                            i1l216 01BD  
                          i1l225 0195                            i1l162 02FB                            i1l171 031D  
                          i1l180 02B4                            i1l165 02FF                            i1l159 02D7  
                          i1l183 02B8                            i1l168 0319                            i1l186 02BF  
                          i1l375 0210                            i1l377 0224                            i1l647 016C  
                          _RCREG 0199                            _RCSTA 019D                            _SPBRG 019B  
                          u52_20 020C                            u60_20 0139                            u44_20 02D3  
                          u52_21 020B                            u60_21 0138                            u44_21 02D2  
                          u45_20 02D7                            u45_21 02D6                            u53_25 0211  
                          u61_25 013D                            u62_20 0149                            u62_21 0148  
                          u54_25 0216                            u55_20 0220                            u55_21 021F  
                          u63_25 014A                            u64_20 0158                            u56_20 02FF  
                          u80_20 0015                    servo_write@ch 002C                            u64_21 0157  
                          u56_21 02FE                            u80_21 0014                            u64_25 0154  
                          u57_20 031D                            u81_20 001F                            u57_21 031C  
                          u81_21 001E                            _TRISA 008C                            _TRISB 008D  
                          u65_25 015E                            _TRISC 008E                            _TRISE 0090  
                          u66_20 0168                            u58_20 02B8                            u82_20 003B  
                          u66_21 0167                            u58_21 02B7                            u82_21 003A  
                          u75_20 0306                            u59_20 02BC                            u75_21 0305  
                          u59_21 02BB                            u67_25 01A1                            u76_20 0261  
                          u76_21 025F                            u77_20 0262                            u78_20 000B  
                          u78_21 000A                            u79_20 0011                            u79_21 0010  
                          _TXREG 019A                            _TXSTA 019E                            __read 01E3  
                 _WDT_Initialize 031E                      ?i1_i2c_wait 0070                      ?i1_i2c_stop 0070  
                          isr@ch 002F                  __end_of_set_pwm 01BE                            status 0003  
                          wtemp0 007E               __size_ofi1___lwdiv 003C                     ?_recieve_ang 0070  
                __initialization 0057                     __end_of_main 00F4                     __end_of_init 029F  
                   __end_of_send 0309                 __end_of_i2c_read 0240                 __end_of_i2c_wait 02CC  
               __end_of_i2c_stop 0310                           ??_main 0042                           ??_init 0033  
                         ??_send 0070           __end_of_WDT_Initialize 0322                           ?__read 0070  
                         _APFCON 011D                           _ANSELA 018C                           _ANSELB 018D  
                         _BORCON 0116                     i2c_read@data 0034                    recieve_ang@ch 0070  
                         i1l1201 0220                           i1l1211 02B1                           i1l1221 013C  
                         i1l1205 02F6                           i1l1213 02BC                           i1l1231 015C  
                         i1l1223 0141                           i1l1215 0131                           i1l1207 02F9  
                         i1l1233 015D                           i1l1225 0145                           i1l1217 0133  
                         i1l1161 02D3                           i1l1209 0317                           i1l1401 0019  
                         i1l1235 0162                           i1l1227 0149                           i1l1219 0139  
                         i1l1411 002A                           i1l1403 001F                           i1l1341 025C  
                         i1l1229 0158                           i1l1237 0168                           i1l1157 02CC  
                         i1l1413 0030                           i1l1405 0022                           i1l1343 0268  
                         i1l1191 0206                           i1l1159 02CC                           i1l1415 0034  
                         i1l1407 0025                           i1l1345 026D                           i1l1337 0301  
                         i1l1193 0208                           i1l1417 003B                           i1l1409 0027  
                         i1l1339 0306                           i1l1195 020C                           i1l1275 0197  
                         i1l1347 016F                           i1l1419 0047                           i1l1197 0215  
                         i1l1277 01BA                           i1l1199 021A                           i1l1279 01BE  
                         i1l1391 0006                           i1l1393 000B                           i1l1395 0011  
                         i1l1397 0015                           i1l1399 0016                           _OSCCON 0099  
                         _WDTCON 0097                           _SSPADD 0212                           _SSPBUF 0211  
                 servo_write@ang 002A               __size_of_i2c_start 000A               __size_of_i2c_write 0011  
                         ___wmul 0206                        ??___lwdiv 0036                           __write 0275  
            __size_ofi1_i2c_wait 000C              __size_ofi1_i2c_stop 0007                     ?i1_i2c_start 0070  
                   ?i1_i2c_write 0070                           isr@ang 0030                __end_ofi1___lwdiv 016D  
             _i2c_repeated_start 02D8                  ?_WDT_Initialize 0070                        ??_set_pwm 0075  
                   ?_servo_write 002A              ?_i2c_repeated_start 0070                _SYSTEM_Initialize 02EC  
        __end_of__initialization 0059               ?_SYSTEM_Initialize 0070                   __pcstackCOMMON 0070  
            ??_SYSTEM_Initialize 0032                    __end_of__read 0206             ??_i2c_repeated_start 0032  
              __end_of_i2c_start 02EC                __end_of_i2c_write 02B0                   _OPTION_REGbits 0095  
                        ??__read 0035                       __read@addr 0036        __end_of_SYSTEM_Initialize 02F6  
                     __read@data 0037                       __pbssBANK0 0044                        ?_i2c_read 0070  
                      ?_i2c_wait 0070                        ?_i2c_stop 0070                       __pmaintext 00B6  
           __size_of_recieve_ang 001A                          ?___wmul 0070                       __pintentry 0004  
                        ?__write 0033                          _BAUDCON 019F                   recieve_ang@ang 0071  
                        _OSCTUNE 0098                          _SSPCON1 0215                          _SSPCON2 0216  
                   ??i1_i2c_wait 0070                     ??i1_i2c_stop 0070                          _SSPSTAT 0214  
                     ??_i2c_read 0032                       ??_i2c_wait 0032                       ??_i2c_stop 0032  
                __size_of___wmul 001F                          ___lwdiv 00F4                  __size_of__write 0017  
             __end_ofi1_i2c_wait 02D8               __end_ofi1_i2c_stop 031E                          __ptext1 005D  
                        __ptext2 0275                          __ptext3 01E3                          __ptext4 02D8  
                        __ptext5 0225                          __ptext6 00F4                          __ptext7 028C  
                        __ptext8 029F                          __ptext9 0309                    ?_set_pwm_freq 003A  
              i1___lwdiv@divisor 0076            _OSCILLATOR_Initialize 0310                     __size_of_map 0025  
                   __size_of_isr 0051                i1___lwdiv@counter 007D             __size_ofi1_i2c_start 000A  
           __size_ofi1_i2c_write 0010         ??_PIN_MANAGER_Initialize 0032                          _set_pwm 0196  
     __size_of_SYSTEM_Initialize 000A             end_of_initialization 0059                          isr@data 0031  
           __size_of_servo_write 0029                        _RCSTAbits 019D                 ??_WDT_Initialize 0032  
                 ??_set_pwm_freq 003C                    i2c_write@data 0032                        i1___lwdiv 0131  
                     map@out_max 0028                       map@out_min 0026                        _TXSTAbits 019E  
                 __end_of___wmul 0225                   __end_of__write 028C           ?_OSCILLATOR_Initialize 0070  
            start_initialization 0057  __size_of_PIN_MANAGER_Initialize 001B                        _i2c_start 02E2  
                    __end_of_map 01E3                      __end_of_isr 0055                        _i2c_write 029F  
                     ?i1___lwdiv 0076                __size_of_i2c_read 001B                __size_of_i2c_wait 000C  
              __size_of_i2c_stop 0007                         ??___wmul 0074                         ??__write 0034  
    __size_of_i2c_repeated_start 000A             set_pwm_freq@prescale 003D                        ___latbits 0003  
                  __pcstackBANK0 0020                       ?_i2c_start 0070                       ?_i2c_write 0070  
                i1i2c_write@data 0070             __end_of_set_pwm_freq 00B6                    ??_recieve_ang 0072  
               ___lwdiv@dividend 0034           _PIN_MANAGER_Initialize 0240                         ?___lwdiv 0032  
                       ?_set_pwm 0071                   __size_of__read 0023                 ___lwdiv@quotient 0037  
                    ??i1___lwdiv 007A                  recieve_ang@data 0073                  recieve_ang@mask 0322  
                 ___wmul@product 0074                 set_pwm_freq@freq 003A                         _PIE1bits 0091  
                     set_pwm@off 0073                       set_pwm@num 0076                         _PIR1bits 0011  
            __end_of_recieve_ang 0275                        map@in_max 0024                        map@in_min 0022  
                  ??i1_i2c_start 0070                    ??i1_i2c_write 0070                ___wmul@multiplier 0070  
                    __write@addr 0034                      ??_i2c_start 0032                      ??_i2c_write 0032  
                  ??_servo_write 007E                         _i2c_read 0225                         _i2c_wait 02C0  
                       _i2c_stop 0309          ??_OSCILLATOR_Initialize 0032                 __size_of___lwdiv 003D  
                ___lwdiv@divisor 0032          __end_ofrecieve_ang@mask 0323              __end_ofi1_i2c_start 0300  
                ___lwdiv@counter 0039              __end_ofi1_i2c_write 02C0                         __ptext10 02E2  
                       __ptext11 02C0                         __ptext20 0317                         __ptext12 02EC  
                       __ptext21 02F6                         __ptext13 031E                         __ptext22 02CC  
                       __ptext14 0240                         __ptext23 01BE                         __ptext15 0310  
                       __ptext24 0131                         __ptext25 0206                         __ptext17 016D  
                       __ptext26 0300                         __ptext18 0196                         __ptext27 025B  
                       __ptext19 02B0                 __size_of_set_pwm 0028            __size_of_set_pwm_freq 0059  
                       __write@d 0033               i1___lwdiv@dividend 0078                    __size_of_main 003E  
                  __size_of_init 0013                    __size_of_send 0009              __end_of_servo_write 0196  
                      set_pwm@on 0071                      _recieve_ang 025B                         int$flags 007E  
             i1___lwdiv@quotient 007B                     _set_pwm_freq 005D               set_pwm_freq@oldreg 0041  
             set_pwm_freq@newreg 003E          __size_of_WDT_Initialize 0004                         intlevel1 0000  
                       send@data 0070          ?_PIN_MANAGER_Initialize 0070       __end_of_i2c_repeated_start 02E2  
                  __pstringtext1 0322                      i1_i2c_start 02F6                      i1_i2c_write 02B0  
                    _SSPCON1bits 0215                      _SSPCON2bits 0216                       i1_i2c_wait 02CC  
                     i1_i2c_stop 0317                      _servo_write 016D   __end_of_PIN_MANAGER_Initialize 025B  
